{"ast":null,"code":"var _jsxFileName = \"C:\\\\myProJects\\\\Server\\\\weatherapp\\\\src\\\\components\\\\Videos.js\";\nimport React, { Component } from 'react';\nimport Video from './Video';\n\nclass Videos extends Component {\n  constructor(props) {\n    super(props);\n\n    this.videoMuted = rVideo => {\n      const muteTrack = rVideo.getVideoTracks()[0];\n      const isSelectedVideo = rVideo.id === this.state.selectedVideo.stream.id;\n\n      if (isSelectedVideo) {\n        this.setState({\n          videoVisible: !muteTrack.muted\n        });\n      }\n    };\n\n    this.switchVideo = _video => {\n      const muteTrack = _video.stream.getVideoTracks()[0];\n\n      this.setState({\n        selectedVideo: _video,\n        videoVisible: !muteTrack.muted\n      });\n    };\n\n    this.state = {\n      rVideos: [],\n      remoteStreams: [],\n      selectedVideo: null,\n      videoVisible: false\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (this.props.remoteStreams !== nextProps.remoteStreams) {\n      const NoOfRemoteStreams = nextProps.remoteStreams.length;\n      let selectedVideo = {};\n      if (NoOfRemoteStreams === 1) selectedVideo = {\n        selectedVideo: nextProps.remoteStreams[0]\n      };else {\n        selectedVideo = this.state.selectedVideo && nextProps.remoteStreams.filter(stream => stream.id === this.state.selectedVideo.id) || [];\n        selectedVideo = selectedVideo.length ? {} : {\n          selectedVideo: nextProps.remoteStreams[NoOfRemoteStreams - 1]\n        };\n      }\n\n      let _rVideos = nextProps.remoteStreams.map((rVideo, index) => {\n        const _videoTrack = rVideo.stream.getTracks().filter(track => track.kind === 'video'); // if (_videoTrack.length)\n        //   _videoTrack[0].onmute = () => {\n        //     alert('muted')\n        //   }\n\n\n        let video = _videoTrack && /*#__PURE__*/React.createElement(Video, {\n          videoMuted: this.videoMuted,\n          videoType: \"remoteVideo\",\n          videoStream: rVideo.stream,\n          frameStyle: {\n            backgroundColor: '#ffffff12',\n            maxWidth: 120,\n            maxHeight: 120,\n            borderRadius: 5,\n            float: 'left',\n            margin: '0 10px'\n          },\n          videoStyles: {\n            objectFit: 'cover',\n            borderRadius: 5,\n            width: 120,\n            height: 120,\n            maxWidth: 120,\n            maxHeight: 120\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 11\n          }\n        }) || /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 14\n          }\n        });\n        return /*#__PURE__*/React.createElement(\"div\", {\n          id: rVideo.id,\n          onClick: () => this.switchVideo(rVideo),\n          style: {\n            cursor: 'pointer',\n            display: 'inline-block'\n          },\n          key: index,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 11\n          }\n        }, video);\n      });\n\n      this.setState({\n        remoteStreams: nextProps.remoteStreams,\n        rVideos: _rVideos,\n        ...selectedVideo\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Video, {\n      videoType: \"previewVideo\",\n      frameStyle: {\n        zIndex: 1,\n        position: 'fixed',\n        bottom: 0,\n        top: 0,\n        minWidth: '100%',\n        minHeight: '100%',\n        backgroundColor: 'black',\n        padding: '.2rem'\n      },\n      videoStyles: {\n        minWidth: '100%',\n        minHeight: '100%',\n        visibility: this.state.videoVisible && 'visible' || 'hidden'\n      },\n      videoStream: this.state.selectedVideo && this.state.selectedVideo.stream,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"stream-list\",\n      style: {\n        zIndex: 3,\n        position: 'fixed',\n        padding: '6px 3px',\n        backgroundColor: 'rgba(0,0,0,0.3)',\n        maxHeight: 120,\n        top: 'auto',\n        right: 10,\n        left: 10,\n        bottom: 10,\n        overflowX: 'scroll',\n        overflowY: 'hidden',\n        whiteSpace: 'nowrap'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }\n    }, this.state.rVideos));\n  }\n\n}\n\nexport default Videos;","map":{"version":3,"sources":["C:/myProJects/Server/weatherapp/src/components/Videos.js"],"names":["React","Component","Video","Videos","constructor","props","videoMuted","rVideo","muteTrack","getVideoTracks","isSelectedVideo","id","state","selectedVideo","stream","setState","videoVisible","muted","switchVideo","_video","rVideos","remoteStreams","componentWillReceiveProps","nextProps","NoOfRemoteStreams","length","filter","_rVideos","map","index","_videoTrack","getTracks","track","kind","video","backgroundColor","maxWidth","maxHeight","borderRadius","float","margin","objectFit","width","height","cursor","display","render","zIndex","position","bottom","top","minWidth","minHeight","padding","visibility","right","left","overflowX","overflowY","whiteSpace"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\r\nimport Video from './Video'\r\n\r\nclass Videos extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      rVideos: [],\r\n      remoteStreams: [],\r\n      selectedVideo: null,\r\n      videoVisible: false,\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (this.props.remoteStreams !== nextProps.remoteStreams) {\r\n\r\n      const NoOfRemoteStreams = nextProps.remoteStreams.length\r\n\r\n      let selectedVideo = {}\r\n\r\n      if (NoOfRemoteStreams === 1)\r\n        selectedVideo = { selectedVideo: nextProps.remoteStreams[0] }\r\n      else {\r\n        selectedVideo = (this.state.selectedVideo && nextProps.remoteStreams.filter(stream => stream.id === this.state.selectedVideo.id)) || []\r\n\r\n        selectedVideo = selectedVideo.length ? {} : { selectedVideo: nextProps.remoteStreams[NoOfRemoteStreams-1] }\r\n      }\r\n\r\n      let _rVideos = nextProps.remoteStreams.map((rVideo, index) => {\r\n\r\n        const _videoTrack = rVideo.stream.getTracks().filter(track => track.kind === 'video')\r\n        // if (_videoTrack.length)\r\n        //   _videoTrack[0].onmute = () => {\r\n        //     alert('muted')\r\n        //   }\r\n\r\n        let video = _videoTrack && (\r\n          <Video\r\n            videoMuted={this.videoMuted}\r\n            videoType='remoteVideo'\r\n            videoStream={rVideo.stream}\r\n            frameStyle={{\r\n              backgroundColor: '#ffffff12',\r\n              maxWidth: 120, maxHeight: 120,\r\n              borderRadius: 5,\r\n              float: 'left', margin: '0 10px'\r\n            }}\r\n            videoStyles={{\r\n              objectFit: 'cover',\r\n              borderRadius: 5,\r\n              width: 120, height: 120,\r\n              maxWidth: 120, maxHeight: 120,\r\n            }}\r\n          ></Video>\r\n        ) || <div></div>\r\n\r\n        return (\r\n          <div\r\n            id={rVideo.id}\r\n            onClick={() => this.switchVideo(rVideo)}\r\n            style={{ \r\n              cursor: 'pointer', display: 'inline-block'\r\n            }}\r\n            key={index}\r\n          >\r\n            {video}\r\n            {/* {rVideo.name} */}\r\n           \r\n          </div>\r\n\r\n        )\r\n      })\r\n      this.setState({\r\n        remoteStreams: nextProps.remoteStreams,\r\n        rVideos: _rVideos,\r\n        ...selectedVideo,\r\n      })\r\n    \r\n    }\r\n  }\r\n\r\n  videoMuted = (rVideo) => {\r\n    const muteTrack = rVideo.getVideoTracks()[0]\r\n    const isSelectedVideo = rVideo.id === this.state.selectedVideo.stream.id\r\n    if (isSelectedVideo) {\r\n      this.setState({\r\n        videoVisible: !muteTrack.muted\r\n      })\r\n    }\r\n  }\r\n\r\n  switchVideo = (_video) => {\r\n    const muteTrack = _video.stream.getVideoTracks()[0]\r\n    this.setState({\r\n      selectedVideo: _video,\r\n      videoVisible: !muteTrack.muted\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Video\r\n          videoType='previewVideo'\r\n          frameStyle={{\r\n            zIndex: 1,\r\n            position: 'fixed',\r\n            bottom: 0,\r\n            top: 0,\r\n            minWidth: '100%', minHeight: '100%',\r\n            backgroundColor: 'black',\r\n            padding: '.2rem',\r\n          }}\r\n          videoStyles={{\r\n            minWidth: '100%', minHeight: '100%',\r\n            visibility: (this.state.videoVisible && 'visible') || 'hidden',\r\n          }}\r\n          videoStream={this.state.selectedVideo && this.state.selectedVideo.stream}\r\n        />\r\n        <div className=\"stream-list\"\r\n          style={{\r\n            zIndex: 3,\r\n            position: 'fixed',\r\n            padding: '6px 3px',\r\n            backgroundColor: 'rgba(0,0,0,0.3)',\r\n            maxHeight: 120,\r\n            top: 'auto',\r\n            right: 10,\r\n            left: 10,\r\n            bottom: 10,\r\n            overflowX: 'scroll',\r\n            overflowY: 'hidden',\r\n            whiteSpace: 'nowrap'\r\n          }}\r\n        >\r\n          { this.state.rVideos }\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nexport default Videos"]},"metadata":{},"sourceType":"module"}