{"ast":null,"code":"import _regeneratorRuntime from\"C:\\\\myProJects\\\\Server\\\\weatherapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"C:\\\\myProJects\\\\Server\\\\weatherapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import axios from\"axios\";var country_code=localStorage.getItem(\"country_code\");// const key = \"02924c9a5a777f4d4854a45a326432c6\";\nvar GeoAPI=\"https://ipapi.co/json/\";var fetchCountry=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var res;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return axios.get(GeoAPI,{mode:\"no-cors\"});case 2:res=_context.sent;//   set the current country code in local stoarge\nlocalStorage.setItem(\"country_code\",res.data.country);case 4:case\"end\":return _context.stop();}}},_callee);}));return function fetchCountry(){return _ref.apply(this,arguments);};}();if(!country_code){// if country is not set then only set it\nfetchCountry();}","map":{"version":3,"sources":["C:/myProJects/Server/weatherapp/src/external/saveCountry.js"],"names":["axios","country_code","localStorage","getItem","GeoAPI","fetchCountry","get","mode","res","setItem","data","country"],"mappings":"yTAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,GAAMC,CAAAA,YAAY,CAAGC,YAAY,CAACC,OAAb,CAAqB,cAArB,CAArB,CAEA;AAEA,GAAMC,CAAAA,MAAM,CAAG,wBAAf,CAEA,GAAMC,CAAAA,YAAY,0FAAG,iKACDL,CAAAA,KAAK,CAACM,GAAN,CAAUF,MAAV,CAAkB,CAAEG,IAAI,CAAE,SAAR,CAAlB,CADC,QACbC,GADa,eAEnB;AACAN,YAAY,CAACO,OAAb,CAAqB,cAArB,CAAqCD,GAAG,CAACE,IAAJ,CAASC,OAA9C,EAHmB,sDAAH,kBAAZN,CAAAA,YAAY,0CAAlB,CAMA,GAAI,CAACJ,YAAL,CAAmB,CACjB;AACAI,YAAY,GACb","sourcesContent":["import axios from \"axios\";\r\n\r\nconst country_code = localStorage.getItem(\"country_code\");\r\n\r\n// const key = \"02924c9a5a777f4d4854a45a326432c6\";\r\n\r\nconst GeoAPI = \"https://ipapi.co/json/\";\r\n\r\nconst fetchCountry = async () => {\r\n  const res = await axios.get(GeoAPI, { mode: \"no-cors\" });\r\n  //   set the current country code in local stoarge\r\n  localStorage.setItem(\"country_code\", res.data.country);\r\n};\r\n\r\nif (!country_code) {\r\n  // if country is not set then only set it\r\n  fetchCountry();\r\n}\r\n"]},"metadata":{},"sourceType":"module"}