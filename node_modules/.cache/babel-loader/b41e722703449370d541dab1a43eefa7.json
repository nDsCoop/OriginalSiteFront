{"ast":null,"code":"var _jsxFileName = \"C:\\\\myProJects\\\\WeatherApp\\\\weatherapp\\\\src\\\\components\\\\App3.js\";\nimport React, { useEffect, useState } from 'react';\nimport Sidebar from './Sidebar';\nimport Chat from './Chat';\nimport Pusher from \"pusher-js\";\nimport axios from \"../apis/axios\";\nimport mongoose from 'mongoose';\n\nconst Pushers = require('pusher');\n\nfunction App3() {\n  const [messages, setMessages] = useState([]);\n  useEffect(() => {\n    axios.get(\"/messages/sync\").then(response => {\n      setMessages(response.data);\n    });\n  }, []);\n  useEffect(() => {\n    const pusher = new Pushers({\n      appId: '1083128',\n      key: '02b865ac879689d71e48',\n      secret: 'cfcc2b6d2fbee120d215',\n      cluster: 'ap1',\n      encrypted: true\n    });\n    const db = mongoose.connection;\n    db.once('open', () => {\n      const msgCollection = db.collection(\"messages2\");\n      const changeStream = msgCollection.watch();\n      changeStream.on(\"change\", change => {\n        console.log(change);\n\n        if (change.operationType === 'insert') {\n          const messageDetails = change.fullDocument;\n          pusher.trigger('messages2', 'inserted', {\n            name: messageDetails.name,\n            message: messageDetails.message,\n            timestamp: messageDetails.timestamp,\n            received: messageDetails.received\n          });\n        } else {\n          console.log('Err triggering Pusher');\n        }\n      });\n    });\n    pusher = new Pusher(\"02b865ac879689d71e48\", {\n      cluster: \"ap1\"\n    });\n    const channel = pusher.subscribe(\"messages2\");\n    channel.bind(\"inserted\", newMessage => {\n      // alert(JSON.stringify(newMessage));\n      setMessages([...messages, newMessage]);\n    });\n    return () => {\n      channel.unbind_all();\n      channel.unsubscribe();\n    };\n  }, [messages]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Sidebar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Chat, {\n    messages: messages,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }));\n}\n\nexport default App3;","map":{"version":3,"sources":["C:/myProJects/WeatherApp/weatherapp/src/components/App3.js"],"names":["React","useEffect","useState","Sidebar","Chat","Pusher","axios","mongoose","Pushers","require","App3","messages","setMessages","get","then","response","data","pusher","appId","key","secret","cluster","encrypted","db","connection","once","msgCollection","collection","changeStream","watch","on","change","console","log","operationType","messageDetails","fullDocument","trigger","name","message","timestamp","received","channel","subscribe","bind","newMessage","unbind_all","unsubscribe"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport Sidebar from './Sidebar';\r\nimport Chat from './Chat';\r\nimport Pusher from \"pusher-js\";\r\nimport axios from \"../apis/axios\";\r\nimport mongoose from 'mongoose';\r\nconst Pushers = require('pusher');\r\n\r\nfunction App3() {\r\n    const [messages, setMessages] = useState([]);\r\n\r\n    useEffect(() => {\r\n        axios.get(\"/messages/sync\").then((response) => {\r\n            setMessages(response.data);\r\n        });\r\n    }, []);\r\n    useEffect(() => {\r\n\r\n        const pusher = new Pushers({\r\n            appId: '1083128',\r\n            key: '02b865ac879689d71e48',\r\n            secret: 'cfcc2b6d2fbee120d215',\r\n            cluster: 'ap1',\r\n            encrypted: true\r\n          });\r\n          \r\n          const db = mongoose.connection;\r\n          db.once('open', () => {\r\n          \r\n            const msgCollection = db.collection(\"messages2\");\r\n            const changeStream = msgCollection.watch();\r\n          \r\n            changeStream.on(\"change\", (change) => {\r\n              console.log(change);\r\n              if (change.operationType === 'insert') {\r\n                const messageDetails = change.fullDocument;\r\n                pusher.trigger('messages2', 'inserted', {\r\n                  name: messageDetails.name,\r\n                  message: messageDetails.message,\r\n                  timestamp: messageDetails.timestamp,\r\n                  received: messageDetails.received\r\n                });\r\n              } else {\r\n                console.log('Err triggering Pusher');\r\n              }\r\n            });\r\n          });\r\n\r\n        pusher = new Pusher(\"02b865ac879689d71e48\", {\r\n        cluster: \"ap1\",\r\n        });\r\n    \r\n        const channel = pusher.subscribe(\"messages2\");\r\n            channel.bind(\"inserted\", (newMessage) => {\r\n            // alert(JSON.stringify(newMessage));\r\n            setMessages([...messages, newMessage]);\r\n        });\r\n        return () => {\r\n            channel.unbind_all();\r\n            channel.unsubscribe();\r\n        };\r\n    }, [messages]);\r\n\r\n    return (\r\n        <div className=\"app3\">\r\n            {/* Sidebar */}\r\n            <Sidebar />\r\n            {/* Chat Component */}\r\n            <Chat messages= { messages } />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App3\r\n"]},"metadata":{},"sourceType":"module"}