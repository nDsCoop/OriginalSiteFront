{"ast":null,"code":"import _regeneratorRuntime from\"C:\\\\myProJects\\\\Server\\\\weatherapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"C:\\\\myProJects\\\\Server\\\\weatherapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"C:\\\\myProJects\\\\Server\\\\weatherapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useContext,useState,useEffect,useCallback}from\"react\";import{withRouter}from\"react-router-dom\";import{InputBase,IconButton,Popper,CircularProgress,Grid}from\"@material-ui/core\";import{ArrowBack}from\"@material-ui/icons\";import youtubeSearch from\"../../apis/youtubeSearch\";import{GlobalContext}from\"../GlobalState\";import suggestSearch from\"../../apis/suggestSearch\";import AutoSearchResult from\"./AutoSearchResult\";var SearchBox=function SearchBox(_ref){var history=_ref.history,location=_ref.location;var params=new URLSearchParams(location.search);var _useContext=useContext(GlobalContext),_useContext2=_slicedToArray(_useContext,2),searchState=_useContext2[0].searchState,dispatch=_useContext2[1];var setSearchState=useCallback(function(data){dispatch({type:\"setSearchState\",snippet:data});},[dispatch]);var setSearchResult=useCallback(function(data){console.log(data);dispatch({type:\"setSearchResult\",snippet:data});},[dispatch]);var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),searchQuery=_useState2[0],setSearchQuery=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),autoSearchData=_useState4[0],setAutoSearch=_useState4[1];var _useState5=useState(null),_useState6=_slicedToArray(_useState5,2),ytSearchQuery=_useState6[0],setYtSearchQuery=_useState6[1];// toggle popper\nvar _useState7=useState(true),_useState8=_slicedToArray(_useState7,2),isPopperOpen=_useState8[0],setPopper=_useState8[1];console.log(\"search box re rendered\");// get back the selected search data\nvar onSearchSelect=function onSearchSelect(result){setSearchQuery(result);setYtSearchQuery(result);setSearchState(\"searching\");history.push({pathname:\"/search\",search:\"?q=\".concat(result)});};// when user hits enter then also fetch the data from yt api\nvar onSearchSubmit=function onSearchSubmit(e){e.preventDefault();console.log(e.target.lastChild);e.target.lastChild.lastChild.blur();setSearchState(\"completed\");setYtSearchQuery(searchQuery);history.push({pathname:\"/search\",search:\"?q=\".concat(searchQuery)});};// for controlled input change\nvar onChange=function onChange(e){setSearchQuery(e.target.value);getAutocomplete();};// get autocomplete data form api\nvar getAutocomplete=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var response;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return suggestSearch.get(\"/\",{params:{q:searchQuery}});case 2:response=_context.sent;setAutoSearch(response.data[0]);case 4:case\"end\":return _context.stop();}}},_callee);}));return function getAutocomplete(){return _ref2.apply(this,arguments);};}();// get youtube search result from api\nuseEffect(function(){var searchYt=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(data){var res;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return youtubeSearch.get(\"/search\",{params:{q:data,maxResults:15}});case 2:res=_context2.sent;setSearchResult(res.data.items);setSearchState(\"completed\");case 5:case\"end\":return _context2.stop();}}},_callee2);}));return function searchYt(_x){return _ref3.apply(this,arguments);};}();// only search if there is any value\nif(ytSearchQuery&&ytSearchQuery!==\"\"){searchYt(ytSearchQuery);}// console.log(ytSearchQuery);\n},[ytSearchQuery,setSearchResult,setSearchState]);useEffect(function(){console.log(\"search state\",searchState);},[searchState]);useEffect(function(){// Listen for changes to the current location.\nvar query=params.get(\"q\");if(query){setYtSearchQuery(query);setSearchQuery(query);setSearchState(\"searching\");console.log(\"changing query to\",query);}// const unlisten = history.listen(location => {\n//   // setYtSearchQuery(params.get(\"q\"));\n//   // we will se the q from params\n//   // location is an object like window.location\n//   const path = location.pathname;\n//   // if (path.slice(1, 7) === \"search\" || path.slice(1, 5) === \"song\") {\n//   //   setSearchState(\"searched\");\n//   // } else {\n//   //   setSearchState(\"home\");\n//   // }\n// });\n},[setSearchState,setYtSearchQuery]);// show loading icon while we fetch the results from api\nvar popperResult=function popperResult(){switch(searchState){case\"searching\":return/*#__PURE__*/React.createElement(Grid,{style:{height:\"100vh\"},container:true,justify:\"center\",alignItems:\"center\"},/*#__PURE__*/React.createElement(CircularProgress,null));case\"clicked\":return/*#__PURE__*/React.createElement(AutoSearchResult,{results:autoSearchData,onSearchSelect:onSearchSelect});case\"completed\":setPopper(false);break;default:break;}console.log(\"Function ran\");};return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(IconButton,{onClick:function onClick(){setSearchState(\"home\");if(history.location.pathname===\"/search\"){history.goBack();}// only go back if u have searched something\n},color:\"inherit\",\"aria-label\":\"Menu\"},/*#__PURE__*/React.createElement(ArrowBack,null)),/*#__PURE__*/React.createElement(\"form\",{style:{width:\"100%\"},onSubmit:function onSubmit(e){return onSearchSubmit(e);}},/*#__PURE__*/React.createElement(InputBase,{fullWidth:true,placeholder:\"Search...\",autoFocus:true,style:{color:\"#fff\",paddingLeft:\"16px\"},value:searchQuery,onChange:onChange// on click we will show popper\n,onClick:function onClick(){setSearchState(\"clicked\");setPopper(true);}})),/*#__PURE__*/React.createElement(Popper,{className:\"searchPopper\",open:isPopperOpen,anchorEl:document.getElementById(\"navbar\"),popperOptions:{modifiers:{preventOverflow:{padding:0}}},placement:\"bottom\"},popperResult));};export default withRouter(SearchBox);","map":{"version":3,"sources":["C:/myProJects/Server/weatherapp/src/components/header/SearchBox.js"],"names":["React","useContext","useState","useEffect","useCallback","withRouter","InputBase","IconButton","Popper","CircularProgress","Grid","ArrowBack","youtubeSearch","GlobalContext","suggestSearch","AutoSearchResult","SearchBox","history","location","params","URLSearchParams","search","searchState","dispatch","setSearchState","data","type","snippet","setSearchResult","console","log","searchQuery","setSearchQuery","autoSearchData","setAutoSearch","ytSearchQuery","setYtSearchQuery","isPopperOpen","setPopper","onSearchSelect","result","push","pathname","onSearchSubmit","e","preventDefault","target","lastChild","blur","onChange","value","getAutocomplete","get","q","response","searchYt","maxResults","res","items","query","popperResult","height","goBack","width","color","paddingLeft","document","getElementById","modifiers","preventOverflow","padding"],"mappings":"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","sourcesContent":["import React, { useContext, useState, useEffect, useCallback } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nimport {\r\n  InputBase,\r\n  IconButton,\r\n  Popper,\r\n  CircularProgress,\r\n  Grid\r\n} from \"@material-ui/core\";\r\nimport { ArrowBack } from \"@material-ui/icons\";\r\nimport youtubeSearch from \"../../apis/youtubeSearch\";\r\nimport { GlobalContext } from \"../GlobalState\";\r\nimport suggestSearch from \"../../apis/suggestSearch\";\r\nimport AutoSearchResult from \"./AutoSearchResult\";\r\n\r\n\r\nconst SearchBox = ({ history, location }) => {\r\n  let params = new URLSearchParams(location.search);\r\n\r\n  const [{ searchState }, dispatch] = useContext(GlobalContext);\r\n\r\n  const setSearchState = useCallback(\r\n    data => {\r\n      dispatch({ type: \"setSearchState\", snippet: data });\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  const setSearchResult = useCallback(\r\n    data => {\r\n      console.log(data);\r\n      dispatch({ type: \"setSearchResult\", snippet: data });\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n  const [autoSearchData, setAutoSearch] = useState(\"\");\r\n\r\n  const [ytSearchQuery, setYtSearchQuery] = useState(null);\r\n\r\n  // toggle popper\r\n  const [isPopperOpen, setPopper] = useState(true);\r\n\r\n  console.log(\"search box re rendered\");\r\n\r\n  // get back the selected search data\r\n  const onSearchSelect = result => {\r\n    setSearchQuery(result);\r\n    setYtSearchQuery(result);\r\n    setSearchState(\"searching\");\r\n    history.push({ pathname: \"/search\", search: `?q=${result}` });\r\n  };\r\n\r\n  // when user hits enter then also fetch the data from yt api\r\n  const onSearchSubmit = e => {\r\n    e.preventDefault();\r\n    console.log(e.target.lastChild);\r\n    e.target.lastChild.lastChild.blur();\r\n    setSearchState(\"completed\");\r\n    setYtSearchQuery(searchQuery);\r\n    history.push({ pathname: \"/search\", search: `?q=${searchQuery}` });\r\n  };\r\n\r\n  // for controlled input change\r\n  const onChange = e => {\r\n    setSearchQuery(e.target.value);\r\n    getAutocomplete();\r\n  };\r\n\r\n  // get autocomplete data form api\r\n  const getAutocomplete = async () => {\r\n    const response = await suggestSearch.get(\"/\", {\r\n      params: {\r\n        q: searchQuery\r\n      }\r\n    });\r\n    setAutoSearch(response.data[0]);\r\n  };\r\n\r\n  // get youtube search result from api\r\n  useEffect(() => {\r\n    const searchYt = async data => {\r\n      const res = await youtubeSearch.get(\"/search\", {\r\n        params: {\r\n          q: data,\r\n          maxResults: 15\r\n        }\r\n      });\r\n      setSearchResult(res.data.items);\r\n      setSearchState(\"completed\");\r\n    };\r\n    // only search if there is any value\r\n    if (ytSearchQuery && ytSearchQuery !== \"\") {\r\n      searchYt(ytSearchQuery);\r\n    }\r\n    // console.log(ytSearchQuery);\r\n  }, [ytSearchQuery, setSearchResult, setSearchState]);\r\n\r\n  useEffect(() => {\r\n    console.log(\"search state\", searchState);\r\n  }, [searchState]);\r\n\r\n  useEffect(() => {\r\n    // Listen for changes to the current location.\r\n    const query = params.get(\"q\");\r\n    if (query) {\r\n      setYtSearchQuery(query);\r\n      setSearchQuery(query);\r\n      setSearchState(\"searching\");\r\n      console.log(\"changing query to\", query);\r\n    }\r\n\r\n    // const unlisten = history.listen(location => {\r\n    //   // setYtSearchQuery(params.get(\"q\"));\r\n    //   // we will se the q from params\r\n    //   // location is an object like window.location\r\n    //   const path = location.pathname;\r\n    //   // if (path.slice(1, 7) === \"search\" || path.slice(1, 5) === \"song\") {\r\n    //   //   setSearchState(\"searched\");\r\n    //   // } else {\r\n    //   //   setSearchState(\"home\");\r\n    //   // }\r\n    // });\r\n  }, [setSearchState, setYtSearchQuery]);\r\n\r\n  // show loading icon while we fetch the results from api\r\n\r\n  const popperResult = () => {\r\n    switch (searchState) {\r\n      case \"searching\":\r\n        return (\r\n          <Grid\r\n            style={{ height: \"100vh\" }}\r\n            container\r\n            justify=\"center\"\r\n            alignItems=\"center\"\r\n          >\r\n            <CircularProgress />\r\n          </Grid>\r\n        );\r\n      case \"clicked\":\r\n        return (\r\n          <AutoSearchResult\r\n            results={autoSearchData}\r\n            onSearchSelect={onSearchSelect}\r\n          />\r\n        );\r\n      case \"completed\":\r\n        setPopper(false);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    console.log(\"Function ran\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <IconButton\r\n        onClick={() => {\r\n          setSearchState(\"home\");\r\n          if (history.location.pathname === \"/search\") {\r\n            history.goBack();\r\n          }\r\n          // only go back if u have searched something\r\n        }}\r\n        color=\"inherit\"\r\n        aria-label=\"Menu\"\r\n      >\r\n        <ArrowBack />\r\n      </IconButton>\r\n      <form style={{ width: \"100%\" }} onSubmit={e => onSearchSubmit(e)}>\r\n        <InputBase\r\n          fullWidth\r\n          placeholder=\"Search...\"\r\n          autoFocus\r\n          style={{ color: \"#fff\", paddingLeft: \"16px\" }}\r\n          value={searchQuery}\r\n          onChange={onChange}\r\n          // on click we will show popper\r\n          onClick={() => {\r\n            setSearchState(\"clicked\");\r\n            setPopper(true);\r\n          }}\r\n        />\r\n      </form>\r\n\r\n      <Popper\r\n        className=\"searchPopper\"\r\n        open={isPopperOpen}\r\n        anchorEl={document.getElementById(\"navbar\")}\r\n        popperOptions={{\r\n          modifiers: {\r\n            preventOverflow: {\r\n              padding: 0\r\n            }\r\n          }\r\n        }}\r\n        placement=\"bottom\"\r\n      >\r\n        {popperResult}\r\n      </Popper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default withRouter(SearchBox);\r\n"]},"metadata":{},"sourceType":"module"}