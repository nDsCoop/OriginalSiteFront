{"ast":null,"code":"var _jsxFileName = \"C:\\\\myProJects\\\\WeatherApp\\\\weatherapp\\\\src\\\\components\\\\sections\\\\SettingsPage.js\";\nimport React, { useContext, useEffect, useCallback } from \"react\";\nimport { Container, FormControl, Select, MenuItem, FormGroup, FormControlLabel, Box, Typography } from \"@material-ui/core\";\nimport { Context2 } from \"../../Context2\";\nexport const useCheckDarkmode = () => {\n  const [, dispatch] = useContext(Context2);\n  const setThemeSelectValue = useCallback(data => {\n    dispatch({\n      type: \"setThemeSelectValue\",\n      snippet: data\n    });\n  }, [dispatch]);\n\n  const checkDarkMode = () => {\n    const selectedTheme = localStorage.getItem(\"selectedTheme\"); // we will check if system dark mode is enabled or not\n\n    const colorScheme = window.matchMedia(\"(prefers-color-scheme: dark)\");\n    colorScheme.addEventListener(\"change\", e => {\n      if (e.matches) {\n        // if it matches we will set it to dark else default\n        setThemeSelectValue(\"Dark\");\n      } else {\n        setThemeSelectValue(\"Default\");\n      }\n    });\n\n    if (selectedTheme) {\n      console.log(selectedTheme);\n      setThemeSelectValue(selectedTheme);\n      const date = new Date();\n      const hrs = date.getHours(); // if the theme is auto then only do it\n\n      if (selectedTheme === \"Auto\") {\n        if (hrs >= 18 || hrs <= 6) {\n          setThemeSelectValue(\"Dark\");\n        } else {\n          setThemeSelectValue(\"Default\");\n        }\n      }\n    }\n  };\n\n  return {\n    checkDarkMode\n  };\n};\n\nconst SettingsPage = () => {\n  const [{\n    themeSelectValue\n  }, dispatch] = useContext(Context2);\n  const setThemeSelectValue = useCallback(data => {\n    dispatch({\n      type: \"setThemeSelectValue\",\n      snippet: data\n    });\n  }, [dispatch]);\n\n  const handleThemeChange = e => {\n    setThemeSelectValue(e.target.value);\n    localStorage.setItem(\"selectedTheme\", e.target.value);\n  };\n\n  useEffect(() => {\n    console.log(themeSelectValue);\n  }, [themeSelectValue]);\n  const selectComp = /*#__PURE__*/React.createElement(Box, {\n    m: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    value: themeSelectValue,\n    onChange: handleThemeChange,\n    displayEmpty: true,\n    name: \"age\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"Default\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, \"Default\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"Dark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, \"Dark\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"Auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, \"Auto\")));\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    align: \"center\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }, \"Settings\"), /*#__PURE__*/React.createElement(FormControl, {\n    component: \"fieldset\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    row: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FormControlLabel, {\n    labelPlacement: \"start\",\n    label: \"Select Theme \",\n    value: \"top\",\n    control: selectComp,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }\n  }))));\n};\n\nexport default SettingsPage;","map":{"version":3,"sources":["C:/myProJects/WeatherApp/weatherapp/src/components/sections/SettingsPage.js"],"names":["React","useContext","useEffect","useCallback","Container","FormControl","Select","MenuItem","FormGroup","FormControlLabel","Box","Typography","Context2","useCheckDarkmode","dispatch","setThemeSelectValue","data","type","snippet","checkDarkMode","selectedTheme","localStorage","getItem","colorScheme","window","matchMedia","addEventListener","e","matches","console","log","date","Date","hrs","getHours","SettingsPage","themeSelectValue","handleThemeChange","target","value","setItem","selectComp"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useCallback } from \"react\";\r\nimport {\r\n  Container,\r\n  FormControl,\r\n  Select,\r\n  MenuItem,\r\n  FormGroup,\r\n  FormControlLabel,\r\n  Box,\r\n  Typography\r\n} from \"@material-ui/core\";\r\n\r\n\r\nimport { Context2 } from \"../../Context2\";\r\n\r\nexport const useCheckDarkmode = () => {\r\n  const [, dispatch] = useContext(Context2);\r\n  const setThemeSelectValue = useCallback(\r\n    data => {\r\n      dispatch({ type: \"setThemeSelectValue\", snippet: data });\r\n    },\r\n    [dispatch]\r\n  );\r\n  const checkDarkMode = () => {\r\n    const selectedTheme = localStorage.getItem(\"selectedTheme\");\r\n\r\n    // we will check if system dark mode is enabled or not\r\n\r\n    const colorScheme = window.matchMedia(\"(prefers-color-scheme: dark)\");\r\n    colorScheme.addEventListener(\"change\", e => {\r\n      if (e.matches) {\r\n        // if it matches we will set it to dark else default\r\n        setThemeSelectValue(\"Dark\");\r\n      } else {\r\n        setThemeSelectValue(\"Default\");\r\n      }\r\n    });\r\n    if (selectedTheme) {\r\n      console.log(selectedTheme);\r\n      setThemeSelectValue(selectedTheme);\r\n\r\n      const date = new Date();\r\n      const hrs = date.getHours();\r\n\r\n      // if the theme is auto then only do it\r\n      if (selectedTheme === \"Auto\") {\r\n        if (hrs >= 18 || hrs <= 6) {\r\n          setThemeSelectValue(\"Dark\");\r\n        } else {\r\n          setThemeSelectValue(\"Default\");\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  return { checkDarkMode };\r\n};\r\n\r\nconst SettingsPage = () => {\r\n  const [{ themeSelectValue }, dispatch] = useContext(Context2);\r\n  const setThemeSelectValue = useCallback(\r\n    data => {\r\n      dispatch({ type: \"setThemeSelectValue\", snippet: data });\r\n    },\r\n    [dispatch]\r\n  );\r\n  const handleThemeChange = e => {\r\n    setThemeSelectValue(e.target.value);\r\n    localStorage.setItem(\"selectedTheme\", e.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(themeSelectValue);\r\n  }, [themeSelectValue]);\r\n\r\n  const selectComp = (\r\n    <Box m={1}>\r\n      \r\n      <Select\r\n        value={themeSelectValue}\r\n        onChange={handleThemeChange}\r\n        displayEmpty\r\n        name=\"age\"\r\n      >\r\n        <MenuItem value=\"Default\">Default</MenuItem>\r\n        <MenuItem value=\"Dark\">Dark</MenuItem>\r\n        <MenuItem value=\"Auto\">Auto</MenuItem>\r\n      </Select>\r\n    </Box>\r\n  );\r\n  return (\r\n    <Container>\r\n      <br />\r\n      <Typography variant=\"h5\" align=\"center\" gutterBottom>\r\n        Settings\r\n      </Typography>\r\n      <FormControl component=\"fieldset\">\r\n        <FormGroup row>\r\n          <FormControlLabel\r\n            labelPlacement=\"start\"\r\n            label=\"Select Theme \"\r\n            value=\"top\"\r\n            control={selectComp}\r\n          />\r\n        </FormGroup>\r\n      </FormControl>\r\n    </Container>\r\n  );\r\n};\r\nexport default SettingsPage;\r\n"]},"metadata":{},"sourceType":"module"}