{"ast":null,"code":"var _jsxFileName = \"C:\\\\myProJects\\\\Server\\\\weatherapp\\\\src\\\\components\\\\library\\\\AudioVisualiser.js\";\nimport React, { Component } from 'react';\n\nclass AudioVisualiser extends Component {\n  constructor(props) {\n    super(props);\n    this.canvas = React.createRef();\n  }\n\n  componentDidUpdate() {\n    this.draw();\n  }\n\n  draw() {\n    const {\n      audioData\n    } = this.props;\n    const canvas = this.canvas.current;\n    const height = canvas.height;\n    const width = canvas.width;\n    const context = canvas.getContext('2d');\n    let x = 0;\n    const sliceWidth = width * 1.0 / audioData.length;\n    context.lineWidth = 2;\n    context.strokeStyle = '#000000';\n    context.clearRect(0, 0, width, height);\n    context.beginPath();\n    context.moveTo(0, height / 2);\n\n    for (const item of audioData) {\n      const y = item / 255.0 * height;\n      context.lineTo(x, y);\n      x += sliceWidth;\n    }\n\n    context.lineTo(x, height / 2);\n    context.stroke();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"canvas\", {\n      width: \"300\",\n      height: \"300\",\n      ref: this.canvas,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 12\n      }\n    });\n  }\n\n}\n\nexport default AudioVisualiser;","map":{"version":3,"sources":["C:/myProJects/Server/weatherapp/src/components/library/AudioVisualiser.js"],"names":["React","Component","AudioVisualiser","constructor","props","canvas","createRef","componentDidUpdate","draw","audioData","current","height","width","context","getContext","x","sliceWidth","length","lineWidth","strokeStyle","clearRect","beginPath","moveTo","item","y","lineTo","stroke","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,eAAN,SAA8BD,SAA9B,CAAwC;AACtCE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,MAAL,GAAcL,KAAK,CAACM,SAAN,EAAd;AACD;;AAEDC,EAAAA,kBAAkB,GAAG;AACnB,SAAKC,IAAL;AACD;;AAEDA,EAAAA,IAAI,GAAG;AACL,UAAM;AAAEC,MAAAA;AAAF,QAAgB,KAAKL,KAA3B;AACA,UAAMC,MAAM,GAAG,KAAKA,MAAL,CAAYK,OAA3B;AACA,UAAMC,MAAM,GAAGN,MAAM,CAACM,MAAtB;AACA,UAAMC,KAAK,GAAGP,MAAM,CAACO,KAArB;AACA,UAAMC,OAAO,GAAGR,MAAM,CAACS,UAAP,CAAkB,IAAlB,CAAhB;AACA,QAAIC,CAAC,GAAG,CAAR;AACA,UAAMC,UAAU,GAAIJ,KAAK,GAAG,GAAT,GAAgBH,SAAS,CAACQ,MAA7C;AAEAJ,IAAAA,OAAO,CAACK,SAAR,GAAoB,CAApB;AACAL,IAAAA,OAAO,CAACM,WAAR,GAAsB,SAAtB;AACAN,IAAAA,OAAO,CAACO,SAAR,CAAkB,CAAlB,EAAqB,CAArB,EAAwBR,KAAxB,EAA+BD,MAA/B;AAEAE,IAAAA,OAAO,CAACQ,SAAR;AACAR,IAAAA,OAAO,CAACS,MAAR,CAAe,CAAf,EAAkBX,MAAM,GAAG,CAA3B;;AACA,SAAK,MAAMY,IAAX,IAAmBd,SAAnB,EAA8B;AAC5B,YAAMe,CAAC,GAAID,IAAI,GAAG,KAAR,GAAiBZ,MAA3B;AACAE,MAAAA,OAAO,CAACY,MAAR,CAAeV,CAAf,EAAkBS,CAAlB;AACAT,MAAAA,CAAC,IAAIC,UAAL;AACD;;AACDH,IAAAA,OAAO,CAACY,MAAR,CAAeV,CAAf,EAAkBJ,MAAM,GAAG,CAA3B;AACAE,IAAAA,OAAO,CAACa,MAAR;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,wBAAO;AAAQ,MAAA,KAAK,EAAC,KAAd;AAAoB,MAAA,MAAM,EAAC,KAA3B;AAAiC,MAAA,GAAG,EAAE,KAAKtB,MAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AApCqC;;AAuCxC,eAAeH,eAAf","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass AudioVisualiser extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.canvas = React.createRef();\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.draw();\r\n  }\r\n\r\n  draw() {\r\n    const { audioData } = this.props;\r\n    const canvas = this.canvas.current;\r\n    const height = canvas.height;\r\n    const width = canvas.width;\r\n    const context = canvas.getContext('2d');\r\n    let x = 0;\r\n    const sliceWidth = (width * 1.0) / audioData.length;\r\n\r\n    context.lineWidth = 2;\r\n    context.strokeStyle = '#000000';\r\n    context.clearRect(0, 0, width, height);\r\n\r\n    context.beginPath();\r\n    context.moveTo(0, height / 2);\r\n    for (const item of audioData) {\r\n      const y = (item / 255.0) * height;\r\n      context.lineTo(x, y);\r\n      x += sliceWidth;\r\n    }\r\n    context.lineTo(x, height / 2);\r\n    context.stroke();\r\n  }\r\n \r\n  render() {\r\n    return <canvas width=\"300\" height=\"300\" ref={this.canvas} />;\r\n  }\r\n}\r\n\r\nexport default AudioVisualiser;"]},"metadata":{},"sourceType":"module"}