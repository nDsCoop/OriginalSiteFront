{"ast":null,"code":"var _jsxFileName = \"C:\\\\myProJects\\\\WeatherApp\\\\weatherapp\\\\src\\\\components\\\\Detail1.js\";\nimport React, { useContext } from 'react';\nimport styled from 'styled-components';\nimport { WiThermometer, WiHumidity, WiBarometer, WiCloudyGusts } from 'react-icons/wi';\nimport Context1 from \"../Context1\";\n\nconst Detail1 = () => {\n  const {\n    coording,\n    city,\n    wind,\n    weathers\n  } = useContext(Context1);\n  const {\n    temp,\n    humidity,\n    pressure\n  } = weathers;\n  const {\n    lat,\n    lon\n  } = coording;\n  const {\n    speed\n  } = wind;\n  const {\n    name\n  } = city;\n  const items = [{\n    id: 2,\n    icon: /*#__PURE__*/React.createElement(WiThermometer, {\n      className: \"icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 16\n      }\n    }),\n    label: 'temp',\n    value: (temp - 273.15).toFixed(2),\n    color: 'pink',\n    unit: 'C'\n  }, {\n    id: 3,\n    icon: /*#__PURE__*/React.createElement(WiHumidity, {\n      className: \"icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 16\n      }\n    }),\n    label: 'humidity',\n    value: humidity,\n    color: 'green',\n    unit: '%'\n  }, {\n    id: 4,\n    icon: /*#__PURE__*/React.createElement(WiBarometer, {\n      className: \"icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 16\n      }\n    }),\n    label: 'pressure',\n    value: pressure,\n    color: 'purple',\n    unit: 'hPa'\n  }, {\n    id: 1,\n    icon: /*#__PURE__*/React.createElement(WiCloudyGusts, {\n      className: \"icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 16\n      }\n    }),\n    label: 'windspeed',\n    value: speed,\n    color: 'yellow',\n    unit: 'm/s'\n  }];\n  return /*#__PURE__*/React.createElement(\"section\", {\n    className: \"section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, \"Weather forecast for \", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"weather-city\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 34\n    }\n  }, name)), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, \"Coordinates: \", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"coord-city\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 25\n    }\n  }, lat, \",\", lon)), /*#__PURE__*/React.createElement(Wrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, items.map(item => {\n    return /*#__PURE__*/React.createElement(Item, Object.assign({\n      key: item.id\n    }, item, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 20\n      }\n    }));\n  })));\n};\n\nconst Item = ({\n  icon,\n  label,\n  value,\n  color,\n  unit\n}) => {\n  return /*#__PURE__*/React.createElement(\"article\", {\n    className: \"item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: color,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, icon), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, value, unit), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, label));\n};\n\nconst Wrapper = styled.section`\n    display: grid;\n    grid-template-columns: repeat( minmax(260px, 1fr));\n    gap: 1rem 2rem;\n    @media (max-width: 640px) {\n    grid-template-columns: repeat( minmax(260px, 1fr));\n    /* .item{\n        \n        padding: 1rem 2rem 1rem 2rem;\n    } */\n    }\n.item {\n    border-radius: var(--radius);\n    padding: 1rem 4rem 1rem 4rem;\n    background: var(--clr-white);\n    display: grid;\n    position: relative;\n    grid-template-columns: auto 1fr;\n    column-gap: 1rem;\n    align-items: center;\n    span {\n        width: 3rem;\n        height: 3rem;\n        display: grid;\n        place-items: center;\n        border-radius: 50%;\n    }\n    .icon {\n        font-size: 1.5rem;\n    }\n    h4 {\n        color: rgba(0, 0, 0, 0.5);\n        margin-bottom: 0;\n        letter-spacing: 0;\n        text-transform: capitalize;\n    }\n    p {\n        color: rgba(0, 0, 0, 0.5);\n        margin-bottom: 0;\n        margin-top: 0rem;\n        /* text-transform: capitalize; */\n    }\n    .pink {\n        background: #ffe0f0;\n        color: #da4a91;\n    }\n    .green {\n        background: var(--clr-primary-10);\n        color: var(--clr-primary-5);\n    }\n    .purple {\n        background: #e6e6ff;\n        color: #5d55fa;\n    }\n    .yellow {\n        background: var(--clr-primary-9) ;\n        color: rgb(221, 141, 37);\n    }\n    }\n`;\nexport default Detail1;","map":{"version":3,"sources":["C:/myProJects/WeatherApp/weatherapp/src/components/Detail1.js"],"names":["React","useContext","styled","WiThermometer","WiHumidity","WiBarometer","WiCloudyGusts","Context1","Detail1","coording","city","wind","weathers","temp","humidity","pressure","lat","lon","speed","name","items","id","icon","label","value","toFixed","color","unit","map","item","Item","Wrapper","section"],"mappings":"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","sourcesContent":["import React, {useContext} from 'react'\r\nimport styled from 'styled-components';\r\nimport { WiThermometer, WiHumidity, WiBarometer, WiCloudyGusts } from 'react-icons/wi';\r\n\r\nimport Context1 from \"../Context1\";\r\n\r\nconst Detail1 = () => {\r\n    \r\n    const {coording, city, wind, weathers} = useContext(Context1);\r\n    const { temp, humidity, pressure} = weathers;\r\n    const { lat, lon } = coording;\r\n    const { speed } = wind;\r\n    const { name } = city;\r\n\r\n\r\n    const items = [\r\n        {\r\n        id: 2,\r\n          icon:<WiThermometer className=\"icon\" />,\r\n          label:'temp',\r\n          value: (temp-273.15).toFixed(2),\r\n          color: 'pink',\r\n          unit: 'C',\r\n\r\n      },\r\n      {\r\n        id: 3,\r\n          icon:<WiHumidity className=\"icon\" />,\r\n          label:'humidity',\r\n          value: humidity,\r\n          color: 'green',\r\n          unit: '%',\r\n      },\r\n      {\r\n        id: 4,\r\n          icon:<WiBarometer className=\"icon\" />,\r\n          label:'pressure',\r\n          value: pressure,\r\n          color: 'purple',\r\n          unit: 'hPa',\r\n      },\r\n      {\r\n        id: 1,\r\n          icon:<WiCloudyGusts className=\"icon\" />,\r\n          label:'windspeed',\r\n          value: speed,\r\n          color: 'yellow',\r\n          unit: 'm/s',\r\n      },\r\n      ];\r\n    return (\r\n        <section className='section'>\r\n        <h4>Weather forecast for <span className=\"weather-city\">{ name }</span></h4>\r\n        <p>Coordinates: <span className=\"coord-city\">{lat},{lon}</span></p>\r\n        <Wrapper>\r\n            {items.map((item) => {\r\n            return <Item key={item.id} {...item}></Item>;\r\n            })}\r\n        </Wrapper>\r\n        </section>\r\n  );\r\n};\r\n\r\nconst Item = ({icon, label, value, color, unit}) => {\r\n    return <article className=\"item\">\r\n      <span className={color}>{icon}</span>\r\n        <p>{value}{unit}</p>\r\n        <h4>{label}</h4>\r\n\r\n    </article>\r\n  }\r\n\r\nconst Wrapper = styled.section`\r\n    display: grid;\r\n    grid-template-columns: repeat( minmax(260px, 1fr));\r\n    gap: 1rem 2rem;\r\n    @media (max-width: 640px) {\r\n    grid-template-columns: repeat( minmax(260px, 1fr));\r\n    /* .item{\r\n        \r\n        padding: 1rem 2rem 1rem 2rem;\r\n    } */\r\n    }\r\n.item {\r\n    border-radius: var(--radius);\r\n    padding: 1rem 4rem 1rem 4rem;\r\n    background: var(--clr-white);\r\n    display: grid;\r\n    position: relative;\r\n    grid-template-columns: auto 1fr;\r\n    column-gap: 1rem;\r\n    align-items: center;\r\n    span {\r\n        width: 3rem;\r\n        height: 3rem;\r\n        display: grid;\r\n        place-items: center;\r\n        border-radius: 50%;\r\n    }\r\n    .icon {\r\n        font-size: 1.5rem;\r\n    }\r\n    h4 {\r\n        color: rgba(0, 0, 0, 0.5);\r\n        margin-bottom: 0;\r\n        letter-spacing: 0;\r\n        text-transform: capitalize;\r\n    }\r\n    p {\r\n        color: rgba(0, 0, 0, 0.5);\r\n        margin-bottom: 0;\r\n        margin-top: 0rem;\r\n        /* text-transform: capitalize; */\r\n    }\r\n    .pink {\r\n        background: #ffe0f0;\r\n        color: #da4a91;\r\n    }\r\n    .green {\r\n        background: var(--clr-primary-10);\r\n        color: var(--clr-primary-5);\r\n    }\r\n    .purple {\r\n        background: #e6e6ff;\r\n        color: #5d55fa;\r\n    }\r\n    .yellow {\r\n        background: var(--clr-primary-9) ;\r\n        color: rgb(221, 141, 37);\r\n    }\r\n    }\r\n`;\r\nexport default Detail1\r\n"]},"metadata":{},"sourceType":"module"}