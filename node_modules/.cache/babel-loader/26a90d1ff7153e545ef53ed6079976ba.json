{"ast":null,"code":"var _jsxFileName = \"C:\\\\myProJects\\\\Server\\\\weatherapp\\\\src\\\\components\\\\UserBar.js\";\nimport React, { Component } from 'react';\nimport defaultImg from \"../images/logoSvg.svg\";\nimport _ from 'lodash';\nimport classNames from 'classnames';\nimport { IconButton } from '@material-ui/core';\nimport { MdSettings } from 'react-icons/md';\nimport axios from \"axios\";\nimport fetchJsonp from \"fetch-jsonp\";\nconst GeoAPI = \"https://ipapi.co/jsonp\";\nexport class UserBar extends Component {\n  constructor() {\n    super();\n\n    this.fetchIPclient = () => {\n      try {\n        fetchJsonp(`${GeoAPI}`).then(function (response) {\n          return response.json();\n        }).then(json => {\n          let {\n            user\n          } = this.state;\n          const field = 'ipClient';\n          user[field] = json;\n          this.setState({\n            user: user\n          });\n        }).catch(function (ex) {\n          console.log(\"parsing failed\", ex);\n        });\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    this.onClickOutSide = e => {\n      if (this.ref && !this.ref.contains(e.target)) {\n        console.log(\"Here click out side login form!\");\n        this.setState({\n          showUserFrom: false,\n          showUserMenu: false\n        });\n      }\n    };\n\n    this.onSubmit = e => {\n      const {\n        store\n      } = this.props;\n      const {\n        user,\n        isLogin\n      } = this.state; // console.log(user)\n\n      e.preventDefault();\n      this.setState({\n        message: null\n      }, () => {\n        if (isLogin) {\n          store.login(user.email, user.password, user.ipClient.ip).then(user => {\n            this.setState({\n              message: null,\n              showUserFrom: false,\n              showUserMenu: false\n            });\n          }).catch(err => {\n            console.log(err);\n            this.setState({\n              message: {\n                body: err,\n                type: 'error'\n              }\n            });\n          });\n        } else {\n          if (user.password === user.repassword) {\n            store.register(user).then(_ => {\n              this.setState({\n                message: {\n                  body: 'User created',\n                  type: 'Success'\n                }\n              }, () => {\n                // now login this user\n                store.login(user.email, user.password).then(user => {\n                  //\n                  this.setState({\n                    message: null,\n                    showUserFrom: false,\n                    showUserMenu: false\n                  });\n                }).catch(err => {\n                  console.log(err);\n                  this.setState({\n                    message: {\n                      body: err,\n                      type: 'error'\n                    }\n                  });\n                });\n              });\n            }).catch(err => {\n              console.log(err);\n              this.setState({\n                message: {\n                  body: err,\n                  type: 'error'\n                }\n              });\n            });\n          } else {\n            console.log(user.repassword, 'and', user.password);\n            this.setState({\n              message: {\n                body: 'Password not Comfirm',\n                type: 'error'\n              }\n            });\n          }\n        }\n      });\n    };\n\n    this.onTxtfieldChange = e => {\n      let {\n        user\n      } = this.state;\n      const field = e.target.name;\n      user[field] = e.target.value;\n      this.setState({\n        user: user\n      });\n    };\n\n    this.state = {\n      message: null,\n      showUserFrom: false,\n      isLogin: true,\n      user: {\n        email: '',\n        password: '',\n        repassword: '',\n        name: '',\n        ipClient: null\n      }\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener('mousedown', this.onClickOutSide);\n    this.fetchIPclient();\n    console.log('Didmount and fetch ipClient');\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('mousedown', this.onClickOutSide);\n    console.log('Unmount');\n  }\n\n  render() {\n    const {\n      user,\n      message,\n      isLogin\n    } = this.state;\n    const {\n      store\n    } = this.props;\n    const me = store.getCurrentUser();\n\n    const profileImg = _.get(me, 'avatar');\n\n    const name = _.get(me, 'name');\n\n    const email = _.get(me, 'email');\n\n    const avatar = _.get(me, 'avatar');\n\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"user-bar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }\n    }, !me ? /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      onClick: e => this.setState({\n        showUserFrom: true\n      }),\n      className: \"login-btn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 21\n      }\n    }, \"Sign In\") : null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"name-user\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 13\n      }\n    }, _.get(me, 'name')), /*#__PURE__*/React.createElement(\"img\", {\n      src: profileImg ? profileImg : defaultImg,\n      onClick: e => this.setState({\n        showUserMenu: true\n      }),\n      alt: \"user-img\",\n      className: \"img-user\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 13\n      }\n    }), me && this.state.showUserMenu ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"user-form\",\n      ref: ref => this.ref = ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 48\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"form-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 25\n      }\n    }, \"Your Account\")), /*#__PURE__*/React.createElement(\"li\", {\n      className: \"header-menu\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: avatar,\n      alt: \"user-img\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 25\n      }\n    }, name)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"body-menu\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      htmlFor: \"email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 25\n      }\n    }, \"Name: \", name), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      style: {\n        color: \"rgba(0, 0, 0, 0.5)\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(MdSettings, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 29\n      }\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"body-menu\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      htmlFor: \"email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 25\n      }\n    }, \"Eamil: \", email), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 25\n      }\n    }, \" \", /*#__PURE__*/React.createElement(IconButton, {\n      style: {\n        color: \"rgba(0, 0, 0, 0.5)\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(MdSettings, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 29\n      }\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"footer-menu\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"img\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      style: {\n        maxHeight: \"5rem\",\n        maxWidth: \"5rem\"\n      },\n      src: defaultImg,\n      alt: \"nds\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"btn-cc\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => store.signOut(),\n      type: \"button\",\n      className: \"login-btn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 25\n      }\n    }, \"Signout\"))))))) : null, !me && this.state.showUserFrom ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"user-form\",\n      ref: ref => this.ref = ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"form-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 25\n      }\n    }, \"Sign In / Register Your Account\")), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 21\n      }\n    }, message ? /*#__PURE__*/React.createElement(\"p\", {\n      className: classNames('app-msg', _.get(message, 'type')),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 37\n      }\n    }, _.get(message, 'body')) : null), !isLogin ? /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 36\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 25\n      }\n    }, \"Name\"), /*#__PURE__*/React.createElement(\"input\", {\n      onChange: e => this.onTxtfieldChange(e),\n      placeholder: \"Your-Name\",\n      required: true,\n      type: \"text\",\n      name: \"name\",\n      value: _.get(user, 'name'),\n      id: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 25\n      }\n    })) : null, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 25\n      }\n    }, \"Email\"), /*#__PURE__*/React.createElement(\"input\", {\n      onChange: e => this.onTxtfieldChange(e),\n      placeholder: \"example.vn@nds.com\",\n      required: true,\n      type: \"email\",\n      name: \"email\",\n      value: _.get(user, 'email'),\n      id: \"email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 25\n      }\n    }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n      onChange: e => this.onTxtfieldChange(e),\n      autoComplete: 'off',\n      placeholder: \"Your-password\",\n      required: true,\n      type: \"password\",\n      value: _.get(user, 'password'),\n      id: \"password\",\n      name: \"password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 25\n      }\n    })), !isLogin ? /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 36\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"repassword\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 25\n      }\n    }, \"Comfirm Password\"), /*#__PURE__*/React.createElement(\"input\", {\n      onChange: e => this.onTxtfieldChange(e),\n      placeholder: \"Re-password\",\n      required: true,\n      type: \"password\",\n      name: \"repassword\",\n      value: _.get(user, 'repassword'),\n      id: \"repassword\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 25\n      }\n    })) : null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"footer-login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"img\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      style: {\n        maxHeight: \"5rem\",\n        maxWidth: \"5rem\"\n      },\n      src: defaultImg,\n      alt: \"nds\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"btn-cc\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"login-btn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 29\n      }\n    }, isLogin ? 'Log In' : 'Create Now')), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      onClick: () => {\n        this.setState({\n          isLogin: !isLogin\n        });\n      },\n      className: \"login-btn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 25\n      }\n    }, \" \", isLogin ? 'Create New Account?' : 'Already have an account?', \" \"))))))) : null));\n  }\n\n}\nexport default UserBar;","map":{"version":3,"sources":["C:/myProJects/Server/weatherapp/src/components/UserBar.js"],"names":["React","Component","_","classNames","IconButton","MdSettings","axios","fetchJsonp","GeoAPI","UserBar","constructor","fetchIPclient","then","response","json","user","state","field","setState","catch","ex","console","log","err","onClickOutSide","e","ref","contains","target","showUserFrom","showUserMenu","onSubmit","store","props","isLogin","preventDefault","message","login","email","password","ipClient","ip","body","type","repassword","register","onTxtfieldChange","name","value","componentDidMount","window","addEventListener","componentWillUnmount","removeEventListener","render","me","getCurrentUser","profileImg","get","avatar","defaultImg","color","maxHeight","maxWidth","signOut"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport defaultImg from '../images/logoSvg.svg';\r\nimport _ from 'lodash';\r\nimport classNames from 'classnames';\r\nimport { IconButton } from '@material-ui/core';\r\nimport { MdSettings } from 'react-icons/md';\r\nimport axios from \"axios\";\r\nimport fetchJsonp from \"fetch-jsonp\";\r\nconst GeoAPI = \"https://ipapi.co/jsonp\";\r\n\r\nexport class UserBar extends Component {\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            message: null,\r\n            showUserFrom : false,\r\n            isLogin: true,\r\n            user: {\r\n                email: '',\r\n                password: '',\r\n                repassword: '',\r\n                name: '',\r\n                ipClient: null\r\n            }\r\n        }\r\n       \r\n    }\r\n    fetchIPclient = () => {\r\n        try{\r\n            fetchJsonp(`${GeoAPI}`)\r\n            .then(function(response) {\r\n                return response.json();\r\n               \r\n              })\r\n              .then(json => {\r\n                let { user } = this.state;\r\n                const field = 'ipClient';\r\n                user[field] = json;\r\n                this.setState({ user: user})\r\n              })\r\n              .catch(function(ex) {\r\n                console.log(\"parsing failed\", ex);\r\n              });\r\n        }\r\n        catch (err){ console.log(err) }\r\n\r\n      };\r\n    onClickOutSide = (e) => {\r\n        if(this.ref && !this.ref.contains(e.target)){\r\n            console.log(\"Here click out side login form!\");\r\n            this.setState({\r\n                showUserFrom: false,\r\n                showUserMenu: false\r\n            })\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        window.addEventListener('mousedown', this.onClickOutSide);\r\n        this.fetchIPclient();\r\n        console.log('Didmount and fetch ipClient');\r\n    }\r\n    componentWillUnmount(){\r\n        window.removeEventListener('mousedown', this.onClickOutSide);\r\n        console.log('Unmount');\r\n    }\r\n    onSubmit = (e) => {\r\n\r\n        const { store } = this.props;\r\n        const { user , isLogin } = this.state;\r\n        // console.log(user)\r\n        e.preventDefault();\r\n        this.setState({\r\n            message: null\r\n        }, () => {\r\n            if(isLogin){\r\n                store.login(user.email, user.password, user.ipClient.ip).then((user) => {\r\n\r\n                    this.setState({\r\n                        message: null,\r\n                        showUserFrom: false,\r\n                        showUserMenu: false\r\n                    })\r\n    \r\n                }).catch((err) => {\r\n                    console.log(err);\r\n                    this.setState({\r\n                        message: {\r\n                            body: err,\r\n                            type: 'error'\r\n                        }\r\n                    })\r\n                });\r\n            } else {\r\n                if(user.password === user.repassword){\r\n                    store.register(user).then((_) => {\r\n                        this.setState({\r\n                            message: {\r\n                                body: 'User created',\r\n                                type: 'Success'\r\n                            }\r\n                        }, () => {\r\n                            // now login this user\r\n                            store.login(user.email, user.password).then((user) => { \r\n                            //\r\n                            this.setState({\r\n                                message: null,\r\n                                showUserFrom: false,\r\n                                showUserMenu: false\r\n                            })\r\n            \r\n                        }).catch((err) => {\r\n                            console.log(err);\r\n                            this.setState({\r\n                                message: {\r\n                                    body: err,\r\n                                    type: 'error'\r\n                                }\r\n                            })\r\n                            });\r\n                        })\r\n                    }).catch((err) => {\r\n                        console.log(err);\r\n                        this.setState({\r\n                            message: {\r\n                                body: err,\r\n                                type: 'error'\r\n                            }\r\n                        })\r\n                    });\r\n                }else{\r\n                    console.log(user.repassword, 'and' , user.password);\r\n                    this.setState({\r\n                        message: {\r\n                            body: 'Password not Comfirm',\r\n                            type: 'error'\r\n                        }\r\n                    })\r\n                }\r\n                \r\n            }\r\n           \r\n        })\r\n\r\n    }\r\n\r\n    onTxtfieldChange = (e) => {\r\n        let { user } = this.state;\r\n        const field = e.target.name;\r\n        user[field] = e.target.value;\r\n        this.setState({\r\n            user: user\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { user, message, isLogin } = this.state;\r\n        const { store } = this.props;\r\n        const me = store.getCurrentUser();\r\n        const profileImg = _.get(me, 'avatar');\r\n        const name = _.get(me,'name');\r\n        const email = _.get(me, 'email');\r\n        const avatar = _.get(me , 'avatar');\r\n        return (\r\n    <>\r\n        <div className=\"user-bar\">\r\n            { !me ? <button type=\"button\" onClick={(e) => this.setState({showUserFrom: true})} className=\"login-btn\">Sign In</button> : null}\r\n            <div className=\"name-user\">{_.get(me, 'name')}</div>\r\n            <img src={profileImg ? profileImg : defaultImg} onClick={(e) => this.setState({showUserMenu: true})}  alt=\"user-img\" className=\"img-user\"></img>\r\n\r\n            { me && this.state.showUserMenu ?  <div className=\"user-form\" ref = {(ref) => this.ref = ref}>\r\n                <form onSubmit= {this.onSubmit}>\r\n                <ul className=\"form-container\">\r\n                    <li>\r\n                        <h4>Your Account</h4>\r\n                    </li>\r\n                    {/* <li>\r\n                        { message ? <p className={classNames('app-msg', _.get(message, 'type'))}>\r\n                            {_.get(message, 'body')}\r\n                        </p> : null } \r\n                    </li> */}\r\n                    <li className =\"header-menu\">\r\n                        <img src={avatar} alt=\"user-img\" />\r\n                        <span>{name}</span>\r\n                    </li>\r\n                    <div className =\"body-menu\">\r\n                        <p htmlFor=\"email\">Name: {name}</p>\r\n                        <div>\r\n                        <IconButton  style={{ color: \"rgba(0, 0, 0, 0.5)\"}}>\r\n                            <MdSettings />\r\n                        </IconButton>\r\n                        </div>\r\n                    </div>\r\n                    <div className =\"body-menu\">\r\n                        <p htmlFor=\"email\">Eamil: {email}</p>\r\n                        <div> <IconButton  style={{ color: \"rgba(0, 0, 0, 0.5)\"}}>\r\n                            <MdSettings />\r\n                        </IconButton></div>\r\n                    </div>\r\n                    {/* <li>\r\n                        <label htmlFor=\"text\">\r\n                        UserName\r\n                        </label>\r\n                        <input onChange={(e) => this.onTxtfieldChange(e) } \r\n                        required type=\"text\" name=\"name\"\r\n                        value = {_.get(user, 'name')} \r\n                        id=\"name\" ></input>\r\n                        <button type=\"button\" className=\"login-btn\">Change</button>\r\n                    </li> */}\r\n                    {/* <li>\r\n                        <label htmlFor=\"email\">\r\n                        Email\r\n                        </label>\r\n                        <input onChange={(e) => this.onTxtfieldChange(e) } \r\n                        autoComplete = {email}\r\n                        required type=\"email\" name=\"email\"\r\n                        value = {_.get(user, 'email')} \r\n                        id=\"email\" ></input>\r\n                    </li> */}\r\n                    {/* <li>\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input onChange={(e) => this.onTxtfieldChange(e) }\r\n                        autoComplete = {'off'}  \r\n                        required type=\"password\"\r\n                        value = {_.get(user, 'password')} \r\n                        id=\"password\" name=\"password\" ></input>\r\n                        <button type=\"button\" className=\"login-btn\">Change</button>\r\n                    </li> */}\r\n                    \r\n                    <div className=\"footer-menu\">\r\n                        <div className=\"img\">\r\n                            <img style={{maxHeight: \"5rem\", maxWidth: \"5rem\"}} src={defaultImg} alt=\"nds\"/>\r\n                        </div>\r\n                        <div className=\"btn-cc\">\r\n                        <li>\r\n                        <button onClick = { () => store.signOut()}\r\n                        type=\"button\" className=\"login-btn\">Signout</button>\r\n                        </li>\r\n                    {/* <li>\r\n                        <button className=\"login-btn\" >Create new account?</button>\r\n                    </li> */}\r\n                        </div>\r\n                    </div>\r\n                </ul>\r\n                </form>\r\n                </div>\r\n                :\r\n                null\r\n            }\r\n             { !me && this.state.showUserFrom ? <div className=\"user-form\" ref = {(ref) => this.ref = ref}>\r\n                <form onSubmit= {this.onSubmit}>\r\n                <ul className=\"form-container\">\r\n                    <li>\r\n                        <h4>Sign In / Register Your Account</h4>\r\n                    </li>\r\n                    <li>\r\n                        { message ? <p className={classNames('app-msg', _.get(message, 'type'))}>\r\n                            {_.get(message, 'body')}\r\n                        </p> : null } \r\n                    </li>\r\n                    {\r\n                        !isLogin ? <li>\r\n                        <label htmlFor=\"name\">\r\n                        Name\r\n                        </label>\r\n                        <input onChange={(e) => this.onTxtfieldChange(e) } \r\n                        placeholder=\"Your-Name\" \r\n                        required type=\"text\" name=\"name\"\r\n                        value = {_.get(user, 'name')} \r\n                        id=\"name\" ></input>\r\n                    </li>\r\n                    :\r\n                    null\r\n                    }\r\n                    \r\n                    <li>\r\n                        <label htmlFor=\"email\">\r\n                        Email\r\n                        </label>\r\n                        <input onChange={(e) => this.onTxtfieldChange(e) } \r\n                        placeholder=\"example.vn@nds.com\" \r\n                        required type=\"email\" name=\"email\"\r\n                        value = {_.get(user, 'email')} \r\n                        id=\"email\" ></input>\r\n                    </li>\r\n                    <li>\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input onChange={(e) => this.onTxtfieldChange(e) }\r\n                        autoComplete = {'off'} \r\n                        placeholder=\"Your-password\" \r\n                        required type=\"password\"\r\n                        value = {_.get(user, 'password')} \r\n                        id=\"password\" name=\"password\" ></input>\r\n                    </li>\r\n                    {\r\n                        !isLogin ? <li>\r\n                        <label htmlFor=\"repassword\">\r\n                        Comfirm Password\r\n                        </label>\r\n                        <input onChange={(e) => this.onTxtfieldChange(e) } \r\n                        placeholder=\"Re-password\" \r\n                        required type=\"password\" name=\"repassword\"\r\n                        value = {_.get(user, 'repassword')} \r\n                        id=\"repassword\" ></input>\r\n                    </li>\r\n                    :\r\n                    null\r\n                    }\r\n                    <div className=\"footer-login\">\r\n                        <div className=\"img\">\r\n                            <img style={{maxHeight: \"5rem\", maxWidth: \"5rem\"}} src={defaultImg} alt=\"nds\"/>\r\n                        </div>\r\n                        <div className=\"btn-cc\">\r\n                        <li>\r\n                            <button type=\"submit\" className=\"login-btn\">{isLogin ? 'Log In' : 'Create Now'}</button>\r\n                        </li>\r\n                        <li>\r\n                        <button type=\"button\" onClick = {() => {\r\n                          this.setState({\r\n                              isLogin: !isLogin,\r\n                          })\r\n                      }}\r\n                      className=\"login-btn\" > { isLogin ? 'Create New Account?' : 'Already have an account?' } </button>\r\n                      </li>\r\n                        </div>\r\n                    </div>\r\n                </ul>\r\n                </form>\r\n                </div>\r\n                :\r\n                null\r\n        }\r\n \r\n           \r\n           \r\n        \r\n        </div>\r\n    </>\r\n    )\r\n    }\r\n}\r\n\r\nexport default UserBar\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}