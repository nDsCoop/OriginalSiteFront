{"ast":null,"code":"var _jsxFileName = \"C:\\\\myProJects\\\\WeatherApp\\\\weatherapp\\\\src\\\\components\\\\player\\\\PlayPauseButton.js\";\nimport React, { useState } from \"react\";\nimport { IconButton, CircularProgress } from \"@material-ui/core/\";\nimport { PauseCircleFilled, PlayCircleFilled, Pause, PlayArrow } from \"@material-ui/icons/\";\n\nconst PlayPauseButton = ({\n  player,\n  audioState,\n  minimized\n}) => {\n  const togglePlayPause = e => {\n    if (audioState === \"playing\") {\n      player.pause();\n    } else if (audioState === \"paused\") {\n      player.play();\n    }\n\n    e.stopPropagation();\n  };\n\n  const showPlayPause = () => {\n    if (audioState === \"playing\") {\n      // if the state will be minimized then we will return the nromal pause button\n      if (minimized) {\n        return /*#__PURE__*/React.createElement(Pause, {\n          style: {\n            fontSize: \"3em\",\n            opacity: \".8\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 16\n          }\n        });\n      }\n\n      return /*#__PURE__*/React.createElement(PauseCircleFilled, {\n        style: {\n          fontSize: \"4em\"\n        },\n        color: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 14\n        }\n      });\n    } else if (audioState === \"paused\" || audioState === \"loaded\") {\n      if (minimized) {\n        return /*#__PURE__*/React.createElement(PlayArrow, {\n          style: {\n            fontSize: \"3em\",\n            opacity: \".8\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 16\n          }\n        });\n      }\n\n      return /*#__PURE__*/React.createElement(PlayCircleFilled, {\n        style: {\n          fontSize: \"4em\"\n        },\n        color: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 14\n        }\n      });\n    } else if (audioState === \"loading\") {\n      return /*#__PURE__*/React.createElement(CircularProgress, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 14\n        }\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(IconButton, {\n    size: \"small\",\n    color: minimized ? \"secondary\" : \"primary\",\n    \"aria-label\": \"Pause\",\n    onClick: togglePlayPause,\n    disableFocusRipple: true,\n    disableRipple: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, showPlayPause());\n};\n\nexport default PlayPauseButton;","map":{"version":3,"sources":["C:/myProJects/WeatherApp/weatherapp/src/components/player/PlayPauseButton.js"],"names":["React","useState","IconButton","CircularProgress","PauseCircleFilled","PlayCircleFilled","Pause","PlayArrow","PlayPauseButton","player","audioState","minimized","togglePlayPause","e","pause","play","stopPropagation","showPlayPause","fontSize","opacity"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,UAAT,EAAqBC,gBAArB,QAA6C,oBAA7C;AACA,SACEC,iBADF,EAEEC,gBAFF,EAGEC,KAHF,EAIEC,SAJF,QAKO,qBALP;;AAOA,MAAMC,eAAe,GAAG,CAAC;AAAEC,EAAAA,MAAF;AAAUC,EAAAA,UAAV;AAAsBC,EAAAA;AAAtB,CAAD,KAAuC;AAC7D,QAAMC,eAAe,GAAGC,CAAC,IAAI;AAC3B,QAAIH,UAAU,KAAK,SAAnB,EAA8B;AAC5BD,MAAAA,MAAM,CAACK,KAAP;AACD,KAFD,MAEO,IAAIJ,UAAU,KAAK,QAAnB,EAA6B;AAClCD,MAAAA,MAAM,CAACM,IAAP;AACD;;AACDF,IAAAA,CAAC,CAACG,eAAF;AACD,GAPD;;AASA,QAAMC,aAAa,GAAG,MAAM;AAC1B,QAAIP,UAAU,KAAK,SAAnB,EAA8B;AAC5B;AACA,UAAIC,SAAJ,EAAe;AACb,4BAAO,oBAAC,KAAD;AAAO,UAAA,KAAK,EAAE;AAAEO,YAAAA,QAAQ,EAAE,KAAZ;AAAmBC,YAAAA,OAAO,EAAE;AAA5B,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;AACD,0BAAO,oBAAC,iBAAD;AAAmB,QAAA,KAAK,EAAE;AAAED,UAAAA,QAAQ,EAAE;AAAZ,SAA1B;AAA+C,QAAA,KAAK,EAAC,SAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD,KAND,MAMO,IAAIR,UAAU,KAAK,QAAf,IAA2BA,UAAU,KAAK,QAA9C,EAAwD;AAC7D,UAAIC,SAAJ,EAAe;AACb,4BAAO,oBAAC,SAAD;AAAW,UAAA,KAAK,EAAE;AAAEO,YAAAA,QAAQ,EAAE,KAAZ;AAAmBC,YAAAA,OAAO,EAAE;AAA5B,WAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;AACD,0BAAO,oBAAC,gBAAD;AAAkB,QAAA,KAAK,EAAE;AAAED,UAAAA,QAAQ,EAAE;AAAZ,SAAzB;AAA8C,QAAA,KAAK,EAAC,SAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD,KALM,MAKA,IAAIR,UAAU,KAAK,SAAnB,EAA8B;AACnC,0BAAO,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;AACF,GAfD;;AAiBA,sBACE,oBAAC,UAAD;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,KAAK,EAAEC,SAAS,GAAG,WAAH,GAAiB,SAFnC;AAGE,kBAAW,OAHb;AAIE,IAAA,OAAO,EAAEC,eAJX;AAKE,IAAA,kBAAkB,EAAE,IALtB;AAME,IAAA,aAAa,EAAE,IANjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQGK,aAAa,EARhB,CADF;AAYD,CAvCD;;AAyCA,eAAeT,eAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport { IconButton, CircularProgress } from \"@material-ui/core/\";\r\nimport {\r\n  PauseCircleFilled,\r\n  PlayCircleFilled,\r\n  Pause,\r\n  PlayArrow\r\n} from \"@material-ui/icons/\";\r\n\r\nconst PlayPauseButton = ({ player, audioState, minimized }) => {\r\n  const togglePlayPause = e => {\r\n    if (audioState === \"playing\") {\r\n      player.pause();\r\n    } else if (audioState === \"paused\") {\r\n      player.play();\r\n    }\r\n    e.stopPropagation();\r\n  };\r\n\r\n  const showPlayPause = () => {\r\n    if (audioState === \"playing\") {\r\n      // if the state will be minimized then we will return the nromal pause button\r\n      if (minimized) {\r\n        return <Pause style={{ fontSize: \"3em\", opacity: \".8\" }} />;\r\n      }\r\n      return <PauseCircleFilled style={{ fontSize: \"4em\" }} color=\"primary\" />;\r\n    } else if (audioState === \"paused\" || audioState === \"loaded\") {\r\n      if (minimized) {\r\n        return <PlayArrow style={{ fontSize: \"3em\", opacity: \".8\" }} />;\r\n      }\r\n      return <PlayCircleFilled style={{ fontSize: \"4em\" }} color=\"primary\" />;\r\n    } else if (audioState === \"loading\") {\r\n      return <CircularProgress />;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <IconButton\r\n      size=\"small\"\r\n      color={minimized ? \"secondary\" : \"primary\"}\r\n      aria-label=\"Pause\"\r\n      onClick={togglePlayPause}\r\n      disableFocusRipple={true}\r\n      disableRipple={true}\r\n    >\r\n      {showPlayPause()}\r\n    </IconButton>\r\n  );\r\n};\r\n\r\nexport default PlayPauseButton;\r\n"]},"metadata":{},"sourceType":"module"}