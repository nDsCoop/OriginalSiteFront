{"ast":null,"code":"import _slicedToArray from\"C:\\\\myProJects\\\\Server\\\\weatherapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState,useContext,useEffect}from\"react\";import{IconButton,Grid,Slider,LinearProgress,makeStyles,withStyles}from\"@material-ui/core/\";import{ExpandMore,GetApp,Reply,DoneOutline,Done,AlarmOff}from\"@material-ui/icons/\";import VolumeController from\"./VolumeController\";import{useSongMethods}from\"../RenderDatabase\";import{downloadSong}from\"../../external/saveSong\";import SleepTimer from'./SleepTimer';import{GlobalContext}from\"../GlobalState\";var DownloadLoader=withStyles({root:{height:2,width:\"70%\",margin:\"0 auto\",transform:\"translateY(-10px)\"}})(LinearProgress);var TopBar=function TopBar(_ref){var song=_ref.song,player=_ref.player,setPlayerState=_ref.setPlayerState,history=_ref.history;var _useContext=useContext(GlobalContext),snackbarMsg=_useContext.snackbarMsg;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isSongDownloaded=_useState2[0],setSongDownloaded=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),isSongDownloading=_useState4[0],setSongDownloading=_useState4[1];var _useSongMethods=useSongMethods(),handleDownload=_useSongMethods.handleDownload,handleRemoveSong=_useSongMethods.handleRemoveSong,deleteDialogComponent=_useSongMethods.deleteDialogComponent;useEffect(function(){if(snackbarMsg===\"Song Downloaded\"||song.audio){setSongDownloaded(true);setSongDownloading(false);}},[snackbarMsg]);// if the song is downloaded we will change\n// share prompt using chrome web api\nvar shareSong=function shareSong(){if(navigator.share){navigator.share({title:\"Share This Song\",text:\"Hey Listen to \".concat(song.title,\" on nDs Music\"),url:window.location.href//get the current window url\n}).then(function(){return console.log(\"Successful share\");}).catch(function(error){return console.log(\"Error sharing\",error);});}};var minimizePlayer=function minimizePlayer(){setPlayerState(\"minimized\");};return/*#__PURE__*/React.createElement(Grid,{container:true,justify:\"space-between\",direction:\"row\",style:{padding:\" 0 10px\",marginTop:\"10px\",position:\"absolute\",top:\"0\"}},/*#__PURE__*/React.createElement(VolumeController,{player:player}),deleteDialogComponent,/*#__PURE__*/React.createElement(Reply,{style:{transform:\" scaleX(-1) translateY(-2px)\"},onClick:shareSong,color:\"primary\"}),/*#__PURE__*/React.createElement(SleepTimer,{player:player}),/*#__PURE__*/React.createElement(\"div\",null,isSongDownloaded?/*#__PURE__*/React.createElement(DoneOutline,{color:\"primary\",onClick:function onClick(){return handleRemoveSong(song.id);}})//song will be removed\n:/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(GetApp,{color:\"primary\",onClick:function onClick(){handleDownload(song.id);setSongDownloading(true);}})),isSongDownloading?/*#__PURE__*/React.createElement(DownloadLoader,{color:\"primary\"}):null),/*#__PURE__*/React.createElement(ExpandMore,{onClick:minimizePlayer,color:\"primary\",fontSize:\"large\",style:{transform:\"translateY(-7px)\"}}));};export default TopBar;","map":{"version":3,"sources":["C:/myProJects/Server/weatherapp/src/components/player/TopBar.js"],"names":["React","useState","useContext","useEffect","IconButton","Grid","Slider","LinearProgress","makeStyles","withStyles","ExpandMore","GetApp","Reply","DoneOutline","Done","AlarmOff","VolumeController","useSongMethods","downloadSong","SleepTimer","GlobalContext","DownloadLoader","root","height","width","margin","transform","TopBar","song","player","setPlayerState","history","snackbarMsg","isSongDownloaded","setSongDownloaded","isSongDownloading","setSongDownloading","handleDownload","handleRemoveSong","deleteDialogComponent","audio","shareSong","navigator","share","title","text","url","window","location","href","then","console","log","catch","error","minimizePlayer","padding","marginTop","position","top","id"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from \"react\";\r\nimport {\r\n  IconButton,\r\n  Grid,\r\n  Slider,\r\n  LinearProgress,\r\n  makeStyles,\r\n  withStyles\r\n} from \"@material-ui/core/\";\r\n\r\nimport {\r\n  ExpandMore,\r\n  GetApp,\r\n  Reply,\r\n  DoneOutline,\r\n  Done,\r\n  AlarmOff\r\n} from \"@material-ui/icons/\";\r\nimport VolumeController from \"./VolumeController\";\r\nimport { useSongMethods } from \"../RenderDatabase\";\r\nimport { downloadSong } from \"../../external/saveSong\";\r\nimport SleepTimer from './SleepTimer'\r\nimport { GlobalContext } from \"../GlobalState\";\r\n\r\nconst DownloadLoader = withStyles({\r\n  root: {\r\n    height: 2,\r\n    width: \"70%\",\r\n    margin: \"0 auto\",\r\n    transform: \"translateY(-10px)\"\r\n  }\r\n})(LinearProgress);\r\n\r\nconst TopBar = ({ song, player, setPlayerState, history }) => {\r\n  const { snackbarMsg } = useContext(GlobalContext);\r\n  const [isSongDownloaded, setSongDownloaded] = useState(false);\r\n  const [isSongDownloading, setSongDownloading] = useState(false);\r\n\r\n  const {\r\n    handleDownload,\r\n    handleRemoveSong,\r\n    deleteDialogComponent\r\n  } = useSongMethods();\r\n\r\n  useEffect(() => {\r\n    if (snackbarMsg === \"Song Downloaded\" || song.audio) {\r\n      setSongDownloaded(true);\r\n      setSongDownloading(false);\r\n    }\r\n  }, [snackbarMsg]);\r\n  // if the song is downloaded we will change\r\n\r\n  // share prompt using chrome web api\r\n  const shareSong = () => {\r\n    if (navigator.share) {\r\n      navigator\r\n        .share({\r\n          title: \"Share This Song\",\r\n          text: `Hey Listen to ${song.title} on nDs Music`,\r\n          url: window.location.href //get the current window url\r\n        })\r\n        .then(() => console.log(\"Successful share\"))\r\n        .catch(error => console.log(\"Error sharing\", error));\r\n    }\r\n  };\r\n\r\n  const minimizePlayer = () => {\r\n    setPlayerState(\"minimized\");\r\n  };\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      justify=\"space-between\"\r\n      direction=\"row\"\r\n      style={{\r\n        padding: \" 0 10px\",\r\n        marginTop: \"10px\",\r\n        position: \"absolute\",\r\n        top: \"0\"\r\n      }}\r\n    >\r\n      <VolumeController player={player} />\r\n      {deleteDialogComponent}\r\n      <Reply\r\n        style={{ transform: \" scaleX(-1) translateY(-2px)\" }}\r\n        onClick={shareSong}\r\n        color=\"primary\"\r\n      />\r\n      \r\n      <SleepTimer player={player}/>\r\n\r\n      <div>\r\n        {isSongDownloaded ? (\r\n          <DoneOutline\r\n            color=\"primary\"\r\n            onClick={() => handleRemoveSong(song.id)}\r\n          /> //song will be removed\r\n        ) : (\r\n          <>\r\n            <GetApp\r\n              color=\"primary\"\r\n              onClick={() => {\r\n                handleDownload(song.id);\r\n                setSongDownloading(true);\r\n              }}\r\n            />\r\n          </>\r\n        )}\r\n        {isSongDownloading ? <DownloadLoader color=\"primary\" /> : null}\r\n        {/* if the song is downloading we will show loading */}\r\n      </div>\r\n\r\n      <ExpandMore\r\n        onClick={minimizePlayer}\r\n        color=\"primary\"\r\n        fontSize=\"large\"\r\n        style={{ transform: \"translateY(-7px)\" }}\r\n      />\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default TopBar;\r\n"]},"metadata":{},"sourceType":"module"}