{"ast":null,"code":"var _jsxFileName = \"C:\\\\myProJects\\\\Server\\\\weatherapp\\\\src\\\\components\\\\UserBar.js\";\nimport React, { Component } from 'react';\nimport defaultImg from '../images/svgnds.png';\nimport _ from 'lodash';\nimport classNames from 'classnames';\nimport { IconButton } from '@material-ui/core';\nimport { MdEdit, MdCheck } from 'react-icons/md';\nimport { RiImageEditFill } from 'react-icons/ri';\nimport Dropzone from \"react-dropzone\"; // import axios from \"axios\";\n\nimport fetchJsonp from \"fetch-jsonp\";\nimport crypto from 'crypto';\nimport CryptoJS from 'crypto-js';\nconst keySecret = '3zTvzr3p67VC61jmV54rIYu1545x4TlY';\nconst algorithm = 'aes-256-ctr';\nconst keySecret2 = 'vOVH6sdmpNWjRRIqCc7rdxs01lwHzfr3';\nconst iv = crypto.randomBytes(16);\nconst GeoAPI = \"https://ipapi.co/jsonp\";\nexport class UserBar extends Component {\n  constructor() {\n    super();\n\n    this.handleEditPassword = e => {\n      e.preventDefault();\n      const {\n        store\n      } = this.props;\n      const {\n        oldPassword,\n        newPassword,\n        reNewPassword\n      } = this.state;\n      this.setState({\n        message: null\n      }, () => {\n        if (newPassword === reNewPassword) {\n          store.editPassword().then(_ => {\n            this.setState({\n              message: {\n                body: 'Password changed',\n                type: 'Success'\n              }\n            });\n          }).catch(err => {\n            console.log(err);\n            this.setState({\n              message: {\n                body: err,\n                type: 'error'\n              }\n            });\n          });\n        } else {\n          this.setState({\n            message: {\n              body: 'Password not Comfirm',\n              type: 'error'\n            }\n          });\n        }\n      });\n    };\n\n    this.changeFormEdit = e => {\n      e.preventDefault();\n      this.setState({\n        showUserMenu: false,\n        editPassword: true\n      });\n    };\n\n    this.handleCreateR = () => {\n      const userId = this.generateId(12);\n      let {\n        user\n      } = this.state;\n      const field = 'ID';\n      user[field] = userId;\n      this.setState({\n        user: user\n      });\n      console.log('ID of user random: ', userId);\n    };\n\n    this.dec2hex = dec => {\n      return dec < 10 ? '0' + _.toString(dec) : dec.toString(16);\n    };\n\n    this.generateId = len => {\n      var arr = new Uint8Array((len || 40) / 2);\n      window.crypto.getRandomValues(arr);\n      return Array.from(arr, this.dec2hex).join('');\n    };\n\n    this.changeControl = e => {\n      e.preventDefault();\n      this.handleCreateR();\n      let {\n        isLogin\n      } = this.state;\n      this.setState({\n        isLogin: !isLogin\n      });\n    };\n\n    this.onDrop = files => {\n      const {\n        store\n      } = this.props; // console.log(\"file goc: \",files);\n\n      let formData = new FormData();\n      formData.append(\"myImage\", files[0]);\n      store.uploadUserAvatar(formData); // console.log(\"file format: \",formData);\n    };\n\n    this.handleEditNow = e => {\n      e.preventDefault();\n      const {\n        store\n      } = this.props;\n      const {\n        user,\n        edit\n      } = this.state;\n      store.editUser(edit, user[edit]);\n      this.setState({\n        edit: '',\n        editAcc: false\n      });\n    };\n\n    this.fetchIPclient = () => {\n      try {\n        fetchJsonp(`${GeoAPI}`).then(function (response) {\n          return response.json();\n        }).then(json => {\n          let {\n            user\n          } = this.state;\n          const field = 'ipClient';\n          user[field] = json;\n          this.setState({\n            user: user\n          });\n        }).catch(function (ex) {\n          console.log(\"parsing failed\", ex);\n        });\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    this.onClickOutSide = e => {\n      if (this.ref && !this.ref.contains(e.target)) {\n        console.log(\"Here click out side login form!\");\n        this.setState({\n          showUserFrom: false,\n          showUserMenu: false\n        });\n      }\n    };\n\n    this.encrypt2 = text => {\n      const cipher = crypto.createCipheriv(algorithm, keySecret2, iv);\n      const encrypted = Buffer.concat([cipher.update(text), cipher.final()]);\n      return {\n        iv: iv.toString('hex'),\n        content: encrypted.toString('hex')\n      };\n    };\n\n    this.decrypt2 = hash => {\n      const decipher = crypto.createDecipheriv(algorithm, keySecret2, Buffer.from(hash.iv, 'hex'));\n      const decrpyted = Buffer.concat([decipher.update(Buffer.from(hash.content, 'hex')), decipher.final()]);\n      return decrpyted.toString();\n    };\n\n    this.onSubmit = e => {\n      const {\n        store\n      } = this.props;\n      const {\n        user,\n        isLogin\n      } = this.state;\n      e.preventDefault();\n      this.setState({\n        message: null\n      }, () => {\n        if (isLogin) {\n          try {\n            store.login(user.email, user.password, user.ipClient.ip).then(_ => {\n              this.setState({\n                message: null,\n                showUserFrom: false,\n                showUserMenu: false\n              });\n            }).catch(err => {\n              console.log(err);\n              this.setState({\n                message: {\n                  body: err,\n                  type: 'error'\n                }\n              });\n            });\n          } catch (err) {\n            console.log(err);\n            this.setState({\n              message: {\n                body: 'An error occurred, please try again later!',\n                type: 'error'\n              }\n            });\n          }\n        } else {\n          if (user.password === user.repassword) {\n            store.register(user).then(_ => {\n              this.setState({\n                message: {\n                  body: 'User created',\n                  type: 'Success'\n                }\n              }, () => {\n                // now login this user\n                store.login(user.email, user.password).then(_ => {\n                  //\n                  const {\n                    user\n                  } = this.state;\n                  user.ipClient = null;\n                  user.password = null;\n                  user.repassword = null;\n                  user.phone = null;\n                  this.setState({\n                    message: null,\n                    showUserFrom: false,\n                    showUserMenu: false,\n                    user: user\n                  });\n                }).catch(err => {\n                  console.log(err);\n                  this.setState({\n                    message: {\n                      body: err,\n                      type: 'error'\n                    }\n                  });\n                });\n              });\n            }).catch(err => {\n              console.log(err);\n              this.setState({\n                message: {\n                  body: err,\n                  type: 'error'\n                }\n              });\n            });\n          } else {\n            console.log(user.repassword, 'and', user.password);\n            this.setState({\n              message: {\n                body: 'Password not Comfirm',\n                type: 'error'\n              }\n            });\n          }\n        }\n      });\n    };\n\n    this.onTxtfieldChange = e => {\n      let {\n        user\n      } = this.state;\n      const field = e.target.name;\n      user[field] = e.target.value;\n      this.setState({\n        user: user\n      });\n    };\n\n    this.onTxtfieldEChange = e => {\n      let {\n        user\n      } = this.state;\n      const field = e.target.name;\n      user[field] = e.target.value;\n      this.setState({\n        user: user\n      });\n    };\n\n    this.state = {\n      message: null,\n      showUserFrom: false,\n      isLogin: true,\n      editAcc: false,\n      editPassword: false,\n      edit: '',\n      type: 'text',\n      oldPassword: '',\n      newPassword: '',\n      reNewPassword: '',\n      userId: '',\n      user: {\n        email: '',\n        password: '',\n        repassword: '',\n        name: '',\n        ipClient: null,\n        birthday: '',\n        country: '',\n        phone: '',\n        ID: ''\n      }\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener('mousedown', this.onClickOutSide);\n    this.fetchIPclient();\n    var password = this.encrypt('Hippo956592#'); // const dehash = this.encrypt2(password);\n    // console.log(dehash)\n    // const rehash = this.decrypt2(dehash);\n\n    console.log(\"hash origin is : \", this.decrypt(password)); // console.log('Didmount and fetch ipClient');\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('mousedown', this.onClickOutSide);\n    console.log('Unmount');\n  }\n\n  encrypt(text) {\n    var salt = CryptoJS.lib.WordArray.random(128 / 8);\n    var iv = CryptoJS.lib.WordArray.random(128 / 8);\n    var encrypted = CryptoJS.AES.encrypt(text, CryptoJS.PBKDF2(keySecret, salt, {\n      keySize: 256 / 32,\n      iterations: 100\n    })\n    /* key */\n    , {\n      iv: iv,\n      padding: CryptoJS.pad.Pkcs7,\n      mode: CryptoJS.mode.CBC\n    });\n    var transitmessage = salt.toString() + iv.toString() + encrypted.toString();\n    console.log(transitmessage);\n    return transitmessage;\n  }\n\n  decrypt(text) {\n    var key = CryptoJS.PBKDF2(keySecret, CryptoJS.enc.Hex.parse(text.substr(0, 32))\n    /* Salt */\n    , {\n      keySize: 256 / 32,\n      iterations: 100\n    });\n    var decrypted = CryptoJS.AES.decrypt(text.substring(64)\n    /* encrypted */\n    , key, {\n      iv: CryptoJS.enc.Hex.parse(text.substr(32, 32))\n      /* iv */\n      ,\n      padding: CryptoJS.pad.Pkcs7,\n      mode: CryptoJS.mode.CBC\n    });\n    return decrypted.toString(CryptoJS.enc.Utf8);\n  }\n\n  render() {\n    const {\n      user,\n      message,\n      isLogin,\n      edit,\n      type,\n      editAcc\n    } = this.state;\n    const {\n      store\n    } = this.props;\n    const me = store.getCurrentUser();\n\n    const profileImg = _.get(me, 'avatar');\n\n    const name = _.get(me, 'name');\n\n    const ID = _.get(me, 'ID');\n\n    const email = _.get(me, 'email');\n\n    const country = _.get(me, 'country');\n\n    const phone = _.get(me, 'phone');\n\n    const birthday = _.get(me, 'birthday');\n\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"user-bar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 9\n      }\n    }, !me ? /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      onClick: e => this.setState({\n        showUserFrom: true\n      }),\n      className: \"login-btn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 21\n      }\n    }, \"Sign In\") : null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"name-user\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 13\n      }\n    }, _.get(me, 'name')), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"img-user\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"img-profile\",\n      src: profileImg ? `http://localhost:8080/${profileImg}` : defaultImg,\n      onClick: e => this.setState({\n        showUserMenu: true\n      }),\n      alt: \"user-img\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 17\n      }\n    })), me && this.state.showUserMenu ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"user-form\",\n      ref: ref => this.ref = ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 48\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"form-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 25\n      }\n    }, \"Your Account\")), editAcc ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 374,\n        columnNumber: 35\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      style: {\n        textTransform: 'capitalize'\n      },\n      htmlFor: edit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 25\n      }\n    }, edit), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-edit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-edit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      onChange: e => this.onTxtfieldEChange(e),\n      placeholder: \"type your change here\",\n      required: true,\n      type: type,\n      name: edit,\n      value: _.get(user, {\n        edit\n      }),\n      id: edit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"btn-edit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(MdCheck, {\n      style: {\n        color: \"rgba(23, 138, 8, 0.959)\"\n      },\n      onClick: this.handleEditNow,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 33\n      }\n    }))))) : null, /*#__PURE__*/React.createElement(\"li\", {\n      className: \"header-menu\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: `http://localhost:8080/${profileImg}`,\n      alt: \"user-img\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 398,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"edit-avatar-icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 399,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Dropzone, {\n      onDrop: this.onDrop,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 400,\n        columnNumber: 29\n      }\n    }, ({\n      getRootProps,\n      getInputProps\n    }) => /*#__PURE__*/React.createElement(\"section\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 402,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", Object.assign({}, getRootProps(), {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", Object.assign({}, getInputProps(), {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 404,\n        columnNumber: 41\n      }\n    })), /*#__PURE__*/React.createElement(RiImageEditFill, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 405,\n        columnNumber: 45\n      }\n    }))))), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 411,\n        columnNumber: 25\n      }\n    }, name)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"body-menu\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 413,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      htmlFor: \"email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 414,\n        columnNumber: 25\n      }\n    }, \"Your Name: \", name), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 415,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      style: {\n        color: \"rgba(0, 0, 0, 0.5)\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 416,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(MdEdit, {\n      onClick: () => this.setState({\n        editAcc: true,\n        edit: 'name'\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 417,\n        columnNumber: 29\n      }\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"body-menu\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 421,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      htmlFor: \"email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 422,\n        columnNumber: 25\n      }\n    }, \"Birthday: \", birthday), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 423,\n        columnNumber: 25\n      }\n    }, \" \", /*#__PURE__*/React.createElement(IconButton, {\n      style: {\n        color: \"rgba(0, 0, 0, 0.5)\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 423,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(MdEdit, {\n      onClick: () => this.setState({\n        editAcc: true,\n        edit: 'birthday',\n        type: 'date'\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 424,\n        columnNumber: 29\n      }\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"body-menu\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 427,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      htmlFor: \"email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 428,\n        columnNumber: 25\n      }\n    }, \"ID User: \", ID), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 429,\n        columnNumber: 25\n      }\n    }, \" \", /*#__PURE__*/React.createElement(IconButton, {\n      style: {\n        color: \"rgba(0, 0, 0, 0.5)\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 429,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(MdEdit, {\n      onClick: () => alert(\"You can't edit your ID!\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 430,\n        columnNumber: 29\n      }\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"body-menu\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 433,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      htmlFor: \"email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 434,\n        columnNumber: 25\n      }\n    }, \"Email Address: \", email), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 435,\n        columnNumber: 25\n      }\n    }, \" \", /*#__PURE__*/React.createElement(IconButton, {\n      style: {\n        color: \"rgba(0, 0, 0, 0.5)\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 435,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(MdEdit, {\n      onClick: () => alert(\"You can't edit your email address!\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 436,\n        columnNumber: 29\n      }\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"body-menu\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 439,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      htmlFor: \"email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 440,\n        columnNumber: 25\n      }\n    }, \"Contact Number: \", phone), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 441,\n        columnNumber: 25\n      }\n    }, \" \", /*#__PURE__*/React.createElement(IconButton, {\n      style: {\n        color: \"rgba(0, 0, 0, 0.5)\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 441,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(MdEdit, {\n      onClick: () => this.setState({\n        editAcc: true,\n        edit: 'phone',\n        type: 'number'\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 442,\n        columnNumber: 29\n      }\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"body-menu\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 445,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      htmlFor: \"email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 446,\n        columnNumber: 25\n      }\n    }, \"Country: \", country), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 447,\n        columnNumber: 25\n      }\n    }, \" \", /*#__PURE__*/React.createElement(IconButton, {\n      style: {\n        color: \"rgba(0, 0, 0, 0.5)\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 447,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(MdEdit, {\n      onClick: () => this.setState({\n        editAcc: true,\n        edit: 'country'\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 448,\n        columnNumber: 29\n      }\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"footer-menu\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 452,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"img\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 453,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      style: {\n        maxHeight: \"5rem\",\n        maxWidth: \"5rem\"\n      },\n      src: defaultImg,\n      alt: \"nds\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 454,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"btn-cc\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 456,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 457,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => store.signOut(),\n      type: \"button\",\n      className: \"login-btn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 458,\n        columnNumber: 25\n      }\n    }, \"Signout\")), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 461,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"login-btn\",\n      onClick: this.changeFormEdit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 462,\n        columnNumber: 25\n      }\n    }, \"Change Password\"))))))) : null, !me && this.state.showUserFrom ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"user-form\",\n      ref: ref => this.ref = ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 472,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 473,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"form-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 474,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 475,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 476,\n        columnNumber: 25\n      }\n    }, \"Sign In / Register Your Account\")), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 478,\n        columnNumber: 21\n      }\n    }, message ? /*#__PURE__*/React.createElement(\"p\", {\n      className: classNames('app-msg', _.get(message, 'type')),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 479,\n        columnNumber: 37\n      }\n    }, _.get(message, 'body')) : null), !isLogin ? /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 484,\n        columnNumber: 36\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 485,\n        columnNumber: 25\n      }\n    }, \"Name\"), /*#__PURE__*/React.createElement(\"input\", {\n      onChange: e => this.onTxtfieldChange(e),\n      placeholder: \"Your-Name\",\n      required: true,\n      type: \"text\",\n      name: \"name\",\n      value: _.get(user, 'name'),\n      id: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 488,\n        columnNumber: 25\n      }\n    })) : null, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 498,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 499,\n        columnNumber: 25\n      }\n    }, \"Email\"), /*#__PURE__*/React.createElement(\"input\", {\n      onChange: e => this.onTxtfieldChange(e),\n      placeholder: \"example.vn@nds.com\",\n      required: true,\n      type: \"email\",\n      name: \"email\",\n      value: _.get(user, 'email'),\n      id: \"email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 502,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 508,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 509,\n        columnNumber: 25\n      }\n    }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n      onChange: e => this.onTxtfieldChange(e),\n      autoComplete: 'off',\n      placeholder: \"Your-password\",\n      required: true,\n      type: \"password\",\n      value: _.get(user, 'password'),\n      id: \"password\",\n      name: \"password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 510,\n        columnNumber: 25\n      }\n    })), !isLogin ? /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 518,\n        columnNumber: 36\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"repassword\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 519,\n        columnNumber: 25\n      }\n    }, \"Comfirm Password\"), /*#__PURE__*/React.createElement(\"input\", {\n      onChange: e => this.onTxtfieldChange(e),\n      placeholder: \"Re-password\",\n      required: true,\n      type: \"password\",\n      name: \"repassword\",\n      value: _.get(user, 'repassword'),\n      id: \"repassword\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 522,\n        columnNumber: 25\n      }\n    })) : null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"footer-login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 531,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"img\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 532,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      style: {\n        maxHeight: \"5rem\",\n        maxWidth: \"5rem\"\n      },\n      src: defaultImg,\n      alt: \"nds\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 533,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"btn-cc\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 535,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 536,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"login-btn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 537,\n        columnNumber: 29\n      }\n    }, isLogin ? 'Log In' : 'Create Now')), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 539,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      onClick: this.changeControl,\n      className: \"login-btn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 540,\n        columnNumber: 25\n      }\n    }, \" \", isLogin ? 'Create New Account?' : 'Already have an account?', \" \"))))))) : null, this.state.editPassword ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"user-form\",\n      ref: ref => this.ref = ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 551,\n        columnNumber: 46\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleEditPassword,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 552,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"form-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 553,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 554,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 555,\n        columnNumber: 25\n      }\n    }, \"Change Password\")), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 557,\n        columnNumber: 21\n      }\n    }, message ? /*#__PURE__*/React.createElement(\"p\", {\n      className: classNames('app-msg', _.get(message, 'type')),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 558,\n        columnNumber: 37\n      }\n    }, _.get(message, 'body')) : null), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 562,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 563,\n        columnNumber: 25\n      }\n    }, \"Current Password\"), /*#__PURE__*/React.createElement(\"input\", {\n      onChange: e => this.setState({\n        oldPassword: e.value\n      }),\n      placeholder: \"current password\",\n      required: true,\n      type: \"password\",\n      name: \"password\",\n      value: this.state.oldPassword,\n      id: \"password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 564,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 570,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 571,\n        columnNumber: 25\n      }\n    }, \"New Password\"), /*#__PURE__*/React.createElement(\"input\", {\n      onChange: e => this.setState({\n        newPassword: e.value\n      }),\n      autoComplete: 'off',\n      placeholder: \"New-password\",\n      required: true,\n      type: \"password\",\n      value: this.state.newPassword,\n      id: \"password\",\n      name: \"password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 572,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 579,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"repassword\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 580,\n        columnNumber: 25\n      }\n    }, \"Comfirm new Password\"), /*#__PURE__*/React.createElement(\"input\", {\n      onChange: e => this.setState({\n        reNewPassword: e.value\n      }),\n      placeholder: \"Re-password\",\n      required: true,\n      type: \"password\",\n      name: \"repassword\",\n      value: this.state.reNewPassword,\n      id: \"repassword\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 581,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"footer-menu\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 587,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"img\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 588,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      style: {\n        maxHeight: \"5rem\",\n        maxWidth: \"5rem\"\n      },\n      src: defaultImg,\n      alt: \"nds\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 589,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"btn-cc\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 591,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 592,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"login-btn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 593,\n        columnNumber: 25\n      }\n    }, \"Change\"))))))) : null));\n  }\n\n}\nexport default UserBar;","map":{"version":3,"sources":["C:/myProJects/Server/weatherapp/src/components/UserBar.js"],"names":["React","Component","defaultImg","_","classNames","IconButton","MdEdit","MdCheck","RiImageEditFill","Dropzone","fetchJsonp","crypto","CryptoJS","keySecret","algorithm","keySecret2","iv","randomBytes","GeoAPI","UserBar","constructor","handleEditPassword","e","preventDefault","store","props","oldPassword","newPassword","reNewPassword","state","setState","message","editPassword","then","body","type","catch","err","console","log","changeFormEdit","showUserMenu","handleCreateR","userId","generateId","user","field","dec2hex","dec","toString","len","arr","Uint8Array","window","getRandomValues","Array","from","join","changeControl","isLogin","onDrop","files","formData","FormData","append","uploadUserAvatar","handleEditNow","edit","editUser","editAcc","fetchIPclient","response","json","ex","onClickOutSide","ref","contains","target","showUserFrom","encrypt2","text","cipher","createCipheriv","encrypted","Buffer","concat","update","final","content","decrypt2","hash","decipher","createDecipheriv","decrpyted","onSubmit","login","email","password","ipClient","ip","repassword","register","phone","onTxtfieldChange","name","value","onTxtfieldEChange","birthday","country","ID","componentDidMount","addEventListener","encrypt","decrypt","componentWillUnmount","removeEventListener","salt","lib","WordArray","random","AES","PBKDF2","keySize","iterations","padding","pad","Pkcs7","mode","CBC","transitmessage","key","enc","Hex","parse","substr","decrypted","substring","Utf8","render","me","getCurrentUser","profileImg","get","textTransform","color","getRootProps","getInputProps","alert","maxHeight","maxWidth","signOut"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport defaultImg from '../images/svgnds.png';\r\nimport _ from 'lodash';\r\nimport classNames from 'classnames';\r\nimport { IconButton } from '@material-ui/core';\r\nimport { MdEdit, MdCheck } from 'react-icons/md';\r\nimport { RiImageEditFill } from 'react-icons/ri';\r\nimport Dropzone from \"react-dropzone\";\r\n// import axios from \"axios\";\r\n\r\nimport fetchJsonp from \"fetch-jsonp\";\r\nimport crypto from 'crypto';\r\nimport CryptoJS from 'crypto-js';\r\n\r\nconst keySecret = '3zTvzr3p67VC61jmV54rIYu1545x4TlY';\r\nconst algorithm = 'aes-256-ctr';\r\nconst keySecret2 = 'vOVH6sdmpNWjRRIqCc7rdxs01lwHzfr3';\r\nconst iv = crypto.randomBytes(16);\r\nconst GeoAPI = \"https://ipapi.co/jsonp\";\r\n\r\n\r\n\r\nexport class UserBar extends Component {\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            message: null,\r\n            showUserFrom : false,\r\n            isLogin: true,\r\n            editAcc: false,\r\n            editPassword: false,\r\n            edit: '',\r\n            type:'text',\r\n            oldPassword: '',\r\n            newPassword: '',\r\n            reNewPassword: '',\r\n            userId: '',\r\n            user: {\r\n                email: '',\r\n                password: '',\r\n                repassword: '',\r\n                name: '',\r\n                ipClient: null,\r\n                birthday: '',\r\n                country: '',\r\n                phone: '',\r\n                ID: '',\r\n            }\r\n        }\r\n       \r\n    }\r\n\r\n    handleEditPassword = (e) => {\r\n        e.preventDefault();\r\n        const {store} = this.props;\r\n        const {oldPassword, newPassword, reNewPassword} = this.state;\r\n        this.setState({\r\n            message: null\r\n        }, () => {\r\n            if(newPassword === reNewPassword){\r\n\r\n\r\n\r\n                store.editPassword().then((_) => {\r\n                    this.setState({\r\n                        message: {\r\n                            body: 'Password changed',\r\n                            type: 'Success'\r\n                        }\r\n                    })\r\n                }).catch((err) => {\r\n                    console.log(err);\r\n                    this.setState({\r\n                        message: {\r\n                            body: err,\r\n                            type: 'error'\r\n                        }\r\n                    })\r\n                    });\r\n\r\n            }else{\r\n                this.setState({\r\n                    message: {\r\n                        body: 'Password not Comfirm',\r\n                        type: 'error'\r\n                    }\r\n                })\r\n            }\r\n\r\n\r\n        })\r\n    }\r\n\r\n    changeFormEdit = (e) => {\r\n        e.preventDefault();\r\n        this.setState({\r\n            showUserMenu: false,\r\n            editPassword: true\r\n        })\r\n\r\n    }\r\n\r\n    handleCreateR = () => {\r\n       \r\n        const userId = this.generateId(12);\r\n        let { user } = this.state;\r\n        const field = 'ID';\r\n        user[field] = userId;\r\n        this.setState({ user: user})\r\n        console.log('ID of user random: ', userId);\r\n      }\r\n    dec2hex = (dec) => {\r\n        return dec < 10\r\n        ? '0' + _.toString(dec)\r\n        : dec.toString(16)\r\n    }\r\n    generateId = (len) => {\r\n        var arr = new Uint8Array((len || 40) / 2)\r\n        window.crypto.getRandomValues(arr)\r\n        return Array.from(arr, this.dec2hex).join('')\r\n    }\r\n\r\n    changeControl = (e) => {\r\n        e.preventDefault();\r\n        this.handleCreateR();\r\n        let {isLogin} = this.state;\r\n        this.setState({\r\n            isLogin: !isLogin,\r\n        })\r\n      \r\n    }\r\n\r\n    onDrop = (files) => {\r\n        const {store} = this.props;\r\n        // console.log(\"file goc: \",files);\r\n        let formData = new FormData();\r\n        formData.append(\"myImage\", files[0]);\r\n        store.uploadUserAvatar(formData);\r\n        // console.log(\"file format: \",formData);\r\n    }\r\n    handleEditNow = (e) => {\r\n        e.preventDefault();\r\n        const { store } = this.props;\r\n        const { user, edit } = this.state;\r\n        store.editUser(edit, user[edit])\r\n\r\n\r\n        this.setState({\r\n            edit: '',\r\n            editAcc: false\r\n        })\r\n    }\r\n    fetchIPclient = () => {\r\n        try{\r\n            fetchJsonp(`${GeoAPI}`)\r\n            .then(function(response) {\r\n                return response.json();\r\n              })\r\n              .then(json => {\r\n                let { user } = this.state;\r\n                const field = 'ipClient';\r\n                user[field] = json;\r\n                this.setState({ user: user})\r\n              })\r\n              .catch(function(ex) {\r\n                console.log(\"parsing failed\", ex);\r\n              });\r\n        }\r\n        catch (err){ console.log(err) }\r\n\r\n      };\r\n    onClickOutSide = (e) => {\r\n        if(this.ref && !this.ref.contains(e.target)){\r\n            console.log(\"Here click out side login form!\");\r\n            this.setState({\r\n                showUserFrom: false,\r\n                showUserMenu: false\r\n            })\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        window.addEventListener('mousedown', this.onClickOutSide);\r\n        this.fetchIPclient();\r\n        var password = this.encrypt('Hippo956592#');\r\n        // const dehash = this.encrypt2(password);\r\n        // console.log(dehash)\r\n        // const rehash = this.decrypt2(dehash);\r\n        console.log(\"hash origin is : \" , this.decrypt(password));\r\n\r\n        // console.log('Didmount and fetch ipClient');\r\n    }\r\n    componentWillUnmount(){\r\n        window.removeEventListener('mousedown', this.onClickOutSide);\r\n        console.log('Unmount');\r\n    }\r\n\r\n    encrypt(text) {\r\n        var salt = CryptoJS.lib.WordArray.random(128 / 8)\r\n        var iv = CryptoJS.lib.WordArray.random(128 / 8)\r\n        var encrypted = CryptoJS.AES.encrypt(text, CryptoJS.PBKDF2(keySecret, salt, { keySize: 256 / 32, iterations: 100 }) /* key */, { iv: iv, padding: CryptoJS.pad.Pkcs7, mode: CryptoJS.mode.CBC })\r\n        var transitmessage = salt.toString() + iv.toString() + encrypted.toString();\r\n        console.log(transitmessage);\r\n        return transitmessage\r\n    }\r\n\r\n    decrypt(text) {\r\n        var key = CryptoJS.PBKDF2(keySecret, CryptoJS.enc.Hex.parse(text.substr(0, 32)) /* Salt */, { keySize: 256 / 32, iterations: 100 })\r\n        var decrypted = CryptoJS.AES.decrypt(text.substring(64) /* encrypted */, key, { iv: CryptoJS.enc.Hex.parse(text.substr(32, 32)) /* iv */, padding: CryptoJS.pad.Pkcs7, mode: CryptoJS.mode.CBC })\r\n        return decrypted.toString(CryptoJS.enc.Utf8)\r\n    }\r\n\r\n    encrypt2 = (text) => {\r\n\r\n        const cipher = crypto.createCipheriv(algorithm, keySecret2, iv);\r\n    \r\n        const encrypted = Buffer.concat([cipher.update(text), cipher.final()]);\r\n    \r\n        return {\r\n            iv: iv.toString('hex'),\r\n            content: encrypted.toString('hex')\r\n        };\r\n    };\r\n    decrypt2 = (hash) => {\r\n\r\n        const decipher = crypto.createDecipheriv(algorithm, keySecret2, Buffer.from(hash.iv, 'hex'));\r\n    \r\n        const decrpyted = Buffer.concat([decipher.update(Buffer.from(hash.content, 'hex')), decipher.final()]);\r\n    \r\n        return decrpyted.toString();\r\n    };\r\n\r\n    onSubmit = (e) => {\r\n\r\n        const { store } = this.props;\r\n        const { user , isLogin } = this.state;\r\n        e.preventDefault();\r\n        this.setState({\r\n            message: null\r\n        }, () => {\r\n            if(isLogin){\r\n                try{\r\n                    store.login(user.email, user.password, user.ipClient.ip).then((_) => {\r\n\r\n                        this.setState({\r\n                            message: null,\r\n                            showUserFrom: false,\r\n                            showUserMenu: false\r\n                        })\r\n        \r\n                    }).catch((err) => {\r\n                        console.log(err);\r\n                        this.setState({\r\n                            message: {\r\n                                body: err,\r\n                                type: 'error'\r\n                            }\r\n                        })\r\n                    });\r\n                }\r\n                catch (err) {\r\n                    console.log(err);\r\n                    this.setState({\r\n                        message: {\r\n                            body: 'An error occurred, please try again later!',\r\n                            type: 'error'\r\n                        }\r\n                    })\r\n                }\r\n               \r\n            } else {\r\n                if(user.password === user.repassword){\r\n                    store.register(user).then((_) => {\r\n                        this.setState({\r\n                            message: {\r\n                                body: 'User created',\r\n                                type: 'Success'\r\n                            }\r\n                        }, () => {\r\n                            // now login this user\r\n                            store.login(user.email, user.password).then((_) => { \r\n                            //\r\n                            const {user} = this.state;\r\n                            user.ipClient = null;\r\n                            user.password = null;\r\n                            user.repassword = null;\r\n                            user.phone = null;\r\n                            this.setState({\r\n                                message: null,\r\n                                showUserFrom: false,\r\n                                showUserMenu: false,\r\n                                user : user,\r\n\r\n                            })\r\n            \r\n                        }).catch((err) => {\r\n                            console.log(err);\r\n                            this.setState({\r\n                                message: {\r\n                                    body: err,\r\n                                    type: 'error'\r\n                                }\r\n                            })\r\n                            });\r\n                        })\r\n                    }).catch((err) => {\r\n                        console.log(err);\r\n                        this.setState({\r\n                            message: {\r\n                                body: err,\r\n                                type: 'error'\r\n                            }\r\n                        })\r\n                    });\r\n                }else{\r\n                    console.log(user.repassword, 'and' , user.password);\r\n                    this.setState({\r\n                        message: {\r\n                            body: 'Password not Comfirm',\r\n                            type: 'error'\r\n                        }\r\n                    })\r\n                }\r\n                \r\n            }\r\n           \r\n        })\r\n\r\n    }\r\n\r\n    onTxtfieldChange = (e) => {\r\n        let { user } = this.state;\r\n        const field = e.target.name;\r\n        user[field] = e.target.value;\r\n        this.setState({\r\n            user: user\r\n        });\r\n    }\r\n    onTxtfieldEChange = (e) => {\r\n        let { user } = this.state;\r\n        const field = e.target.name;\r\n        user[field] = e.target.value;\r\n        this.setState({\r\n            user: user\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { user, message, isLogin, edit, type, editAcc } = this.state;\r\n        const { store } = this.props;\r\n        const me = store.getCurrentUser();\r\n        const profileImg = _.get(me, 'avatar');\r\n        const name = _.get(me,'name');\r\n        const ID = _.get(me, 'ID');\r\n        const email = _.get(me, 'email');\r\n        const country = _.get(me, 'country');\r\n        const phone = _.get(me, 'phone');\r\n        const birthday = _.get(me, 'birthday');\r\n        return (\r\n    <>\r\n        <div className=\"user-bar\">\r\n            { !me ? <button type=\"button\" onClick={(e) => this.setState({showUserFrom: true})} className=\"login-btn\">Sign In</button> : null}\r\n            <div className=\"name-user\">{_.get(me, 'name')}</div>\r\n            <div className=\"img-user\">\r\n                <img className=\"img-profile\" src={profileImg ? `http://localhost:8080/${profileImg}` : defaultImg} onClick={(e) => this.setState({showUserMenu: true})}  alt=\"user-img\"></img>\r\n            </div>\r\n\r\n            { me && this.state.showUserMenu ?  <div className=\"user-form\" ref = {(ref) => this.ref = ref}>\r\n                <form>\r\n                <ul className=\"form-container\">\r\n                    <li>\r\n                        <h4>Your Account</h4>\r\n                    </li>\r\n                    {\r\n                        editAcc ? <div>\r\n                        <label style={{textTransform: 'capitalize'}} htmlFor={edit}>\r\n                            {edit}\r\n                        </label>\r\n                        <div className=\"form-edit\">\r\n                            <div className=\"input-edit\">\r\n                            <input onChange={(e) => this.onTxtfieldEChange(e) } \r\n                            placeholder=\"type your change here\"\r\n                            required type={type} name={edit}\r\n                            value = {_.get(user, {edit})} \r\n                            id={edit} ></input>\r\n                            </div>\r\n                        <div className=\"btn-edit\">\r\n                            <IconButton>\r\n                                <MdCheck style={{ color: \"rgba(23, 138, 8, 0.959)\"}} onClick={this.handleEditNow} />\r\n                            </IconButton>\r\n                        </div>\r\n                        </div>\r\n                       \r\n                    </div>\r\n                    :\r\n                    null\r\n                    }\r\n                    <li className =\"header-menu\">\r\n                        <img src={`http://localhost:8080/${profileImg}`} alt=\"user-img\" />\r\n                        <div className=\"edit-avatar-icon\">\r\n                            <Dropzone onDrop={this.onDrop}>\r\n                                {({getRootProps, getInputProps}) => (\r\n                                    <section>\r\n                                    <div {...getRootProps()}>\r\n                                        <input {...getInputProps()} />\r\n                                            <RiImageEditFill />\r\n                                    </div>\r\n                                    </section>\r\n                                )}\r\n                            </Dropzone>\r\n                        </div>\r\n                        <span>{name}</span>\r\n                    </li>\r\n                    <div className =\"body-menu\">\r\n                        <p htmlFor=\"email\">Your Name: {name}</p>\r\n                        <div>\r\n                        <IconButton  style={{ color: \"rgba(0, 0, 0, 0.5)\"}}>\r\n                            <MdEdit onClick = {() => this.setState({editAcc: true, edit: 'name'})} />\r\n                        </IconButton>\r\n                        </div>\r\n                    </div>\r\n                    <div className =\"body-menu\">\r\n                        <p htmlFor=\"email\">Birthday: {birthday}</p>\r\n                        <div> <IconButton  style={{ color: \"rgba(0, 0, 0, 0.5)\"}}>\r\n                            <MdEdit  onClick = {() => this.setState({editAcc: true, edit: 'birthday', type: 'date'})} />\r\n                        </IconButton></div>\r\n                    </div>\r\n                    <div className =\"body-menu\">\r\n                        <p htmlFor=\"email\">ID User: {ID}</p>\r\n                        <div> <IconButton  style={{ color: \"rgba(0, 0, 0, 0.5)\"}}>\r\n                            <MdEdit  onClick = {() =>alert(\"You can't edit your ID!\")} />\r\n                        </IconButton></div>\r\n                    </div>\r\n                    <div className =\"body-menu\">\r\n                        <p htmlFor=\"email\">Email Address: {email}</p>\r\n                        <div> <IconButton  style={{ color: \"rgba(0, 0, 0, 0.5)\"}}>\r\n                            <MdEdit  onClick = {() =>alert(\"You can't edit your email address!\")} />\r\n                        </IconButton></div>\r\n                    </div>\r\n                    <div className =\"body-menu\">\r\n                        <p htmlFor=\"email\">Contact Number: {phone}</p>\r\n                        <div> <IconButton  style={{ color: \"rgba(0, 0, 0, 0.5)\"}}>\r\n                            <MdEdit  onClick = {() => this.setState({editAcc: true, edit: 'phone', type: 'number'})} />\r\n                        </IconButton></div>\r\n                    </div>\r\n                    <div className =\"body-menu\">\r\n                        <p htmlFor=\"email\">Country: {country}</p>\r\n                        <div> <IconButton  style={{ color: \"rgba(0, 0, 0, 0.5)\"}}>\r\n                            <MdEdit  onClick = {() => this.setState({editAcc: true, edit: 'country'})} />\r\n                        </IconButton></div>\r\n                    </div>\r\n                   \r\n                    <div className=\"footer-menu\">\r\n                        <div className=\"img\">\r\n                            <img style={{maxHeight: \"5rem\", maxWidth: \"5rem\"}} src={defaultImg} alt=\"nds\"/>\r\n                        </div>\r\n                        <div className=\"btn-cc\">\r\n                        <li>\r\n                        <button onClick = { () => store.signOut()}\r\n                        type=\"button\" className=\"login-btn\">Signout</button>\r\n                        </li>\r\n                    <li>\r\n                        <button className=\"login-btn\" onClick={this.changeFormEdit} >Change Password</button>\r\n                    </li>\r\n                        </div>\r\n                    </div>\r\n                </ul>\r\n                </form>\r\n                </div>\r\n                :\r\n                null\r\n            }\r\n             { !me && this.state.showUserFrom ? <div className=\"user-form\" ref = {(ref) => this.ref = ref}>\r\n                <form onSubmit= {this.onSubmit}>\r\n                <ul className=\"form-container\">\r\n                    <li>\r\n                        <h4>Sign In / Register Your Account</h4>\r\n                    </li>\r\n                    <li>\r\n                        { message ? <p className={classNames('app-msg', _.get(message, 'type'))}>\r\n                            {_.get(message, 'body')}\r\n                        </p> : null } \r\n                    </li>\r\n                    {\r\n                        !isLogin ? <li>\r\n                        <label htmlFor=\"name\">\r\n                        Name\r\n                        </label>\r\n                        <input onChange={(e) => this.onTxtfieldChange(e) } \r\n                        placeholder=\"Your-Name\" \r\n                        required type=\"text\" name=\"name\"\r\n                        value = {_.get(user, 'name')} \r\n                        id=\"name\" ></input>\r\n                    </li>\r\n                    :\r\n                    null\r\n                    }\r\n                    \r\n                    <li>\r\n                        <label htmlFor=\"email\">\r\n                        Email\r\n                        </label>\r\n                        <input onChange={(e) => this.onTxtfieldChange(e) } \r\n                        placeholder=\"example.vn@nds.com\" \r\n                        required type=\"email\" name=\"email\"\r\n                        value = {_.get(user, 'email')} \r\n                        id=\"email\" ></input>\r\n                    </li>\r\n                    <li>\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input onChange={(e) => this.onTxtfieldChange(e) }\r\n                        autoComplete = {'off'} \r\n                        placeholder=\"Your-password\" \r\n                        required type=\"password\"\r\n                        value = {_.get(user, 'password')} \r\n                        id=\"password\" name=\"password\" ></input>\r\n                    </li>\r\n                    {\r\n                        !isLogin ? <li>\r\n                        <label htmlFor=\"repassword\">\r\n                        Comfirm Password\r\n                        </label>\r\n                        <input onChange={(e) => this.onTxtfieldChange(e) } \r\n                        placeholder=\"Re-password\" \r\n                        required type=\"password\" name=\"repassword\"\r\n                        value = {_.get(user, 'repassword')} \r\n                        id=\"repassword\" ></input>\r\n                    </li>\r\n                    :\r\n                    null\r\n                    }\r\n                    <div className=\"footer-login\">\r\n                        <div className=\"img\">\r\n                            <img style={{maxHeight: \"5rem\", maxWidth: \"5rem\"}} src={defaultImg} alt=\"nds\"/>\r\n                        </div>\r\n                        <div className=\"btn-cc\">\r\n                        <li>\r\n                            <button type=\"submit\" className=\"login-btn\">{isLogin ? 'Log In' : 'Create Now'}</button>\r\n                        </li>\r\n                        <li>\r\n                        <button type=\"button\" onClick = {this.changeControl}\r\n                        className=\"login-btn\" > { isLogin ? 'Create New Account?' : 'Already have an account?' } </button>\r\n                      </li>\r\n                        </div>\r\n                    </div>\r\n                </ul>\r\n                </form>\r\n                </div>\r\n                :\r\n                null\r\n            }\r\n                  {this.state.editPassword ? <div className=\"user-form\" ref = {(ref) => this.ref = ref}>\r\n                    <form onSubmit={this.handleEditPassword}>\r\n                    <ul className=\"form-container\">\r\n                    <li>\r\n                        <h4>Change Password</h4>\r\n                    </li>\r\n                    <li>\r\n                        { message ? <p className={classNames('app-msg', _.get(message, 'type'))}>\r\n                            {_.get(message, 'body')}\r\n                        </p> : null } \r\n                    </li>                    \r\n                    <li>\r\n                        <label htmlFor=\"password\">Current Password</label>\r\n                        <input onChange={(e) => this.setState({oldPassword: e.value}) } \r\n                        placeholder=\"current password\" \r\n                        required type=\"password\" name=\"password\"\r\n                        value = {this.state.oldPassword} \r\n                        id=\"password\" ></input>\r\n                    </li>\r\n                    <li>\r\n                        <label htmlFor=\"password\">New Password</label>\r\n                        <input onChange={(e) => this.setState({newPassword: e.value}) }\r\n                        autoComplete = {'off'} \r\n                        placeholder=\"New-password\" \r\n                        required type=\"password\"\r\n                        value = {this.state.newPassword} \r\n                        id=\"password\" name=\"password\" ></input>\r\n                    </li>\r\n                    <li>\r\n                        <label htmlFor=\"repassword\">Comfirm new Password</label>\r\n                        <input onChange={(e) => this.setState({reNewPassword: e.value}) }\r\n                        placeholder=\"Re-password\" \r\n                        required type=\"password\" name=\"repassword\"\r\n                        value = {this.state.reNewPassword} \r\n                        id=\"repassword\" ></input>\r\n                    </li>\r\n                    <div className=\"footer-menu\">\r\n                        <div className=\"img\">\r\n                            <img style={{maxHeight: \"5rem\", maxWidth: \"5rem\"}} src={defaultImg} alt=\"nds\"/>\r\n                        </div>\r\n                        <div className=\"btn-cc\">\r\n                        <li>\r\n                        <button type=\"submit\" className=\"login-btn\">Change</button>\r\n                        </li>\r\n                        </div>\r\n                    </div>\r\n                </ul>\r\n                </form>\r\n                </div>\r\n                :\r\n                null\r\n        }\r\n \r\n           \r\n           \r\n        \r\n        </div>\r\n    </>\r\n    )\r\n    }\r\n}\r\n\r\nexport default UserBar\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}