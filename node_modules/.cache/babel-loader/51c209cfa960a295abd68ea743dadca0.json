{"ast":null,"code":"import { OrderedMap } from 'immutable';\nimport _ from 'lodash';\nconst users = OrderedMap({\n  '1': {\n    _id: '1',\n    name: \"nDs\",\n    created: new Date()\n  },\n  '2': {\n    _id: '2',\n    name: \"nDs0\",\n    created: new Date()\n  },\n  '3': {\n    _id: '3',\n    name: \"nDs1\",\n    created: new Date()\n  }\n});\nexport default class Store {\n  constructor(appComponent) {\n    this.app = appComponent;\n    this.messages = new OrderedMap();\n    this.channels = new OrderedMap();\n    this.activeChannelId = null;\n    this.user = {\n      _id: '1',\n      name: 'nDs',\n      creaded: new Date()\n    };\n  }\n\n  getCurrentUser() {\n    return this.user;\n  }\n\n  setActiveChannelId(id) {\n    this.activeChannelId = id;\n    this.update();\n  }\n\n  getActiveChannel() {\n    const channel = this.activeChannelId ? this.channels.get(this.activeChannelId) : this.channels.first();\n    return channel;\n  }\n\n  addMessage(id, message = {}) {\n    this.messages = this.messages.set(`${id}`, message); //add new message to \n\n    const channelId = _.get(message, 'channelId');\n\n    if (this.channelId) {\n      const channel = this.channels.get(channelId);\n      channel.messages = channel.messages.set(id, true);\n      this.channels = this.channels.set(channelId, this.channel);\n    }\n\n    this.update();\n  }\n\n  getMessages() {\n    return this.messages.valueSeq();\n  }\n\n  getMessagesFromChannel(channel) {\n    let messages = [];\n\n    if (channel) {\n      channel.messages.map((value, key) => {\n        const message = this.messages.get(key);\n        messages.push(message);\n      });\n    }\n\n    return messages;\n  }\n\n  getMembersFromChannel(channel) {\n    const members = [];\n\n    if (channel) {\n      channel.members.map((value, key) => {\n        const member = users.get(key);\n        members.push(member);\n      });\n    }\n\n    return members;\n  }\n\n  addChannel(index, channel = {}) {\n    this.channels = this.channels.set(`${index}`, channel);\n    this.update();\n  }\n\n  getChannels() {\n    return this.channels.valueSeq();\n  }\n\n  update() {\n    this.app.forceUpdate();\n  }\n\n}","map":{"version":3,"sources":["C:/myProJects/Server/weatherapp/src/store.js"],"names":["OrderedMap","_","users","_id","name","created","Date","Store","constructor","appComponent","app","messages","channels","activeChannelId","user","creaded","getCurrentUser","setActiveChannelId","id","update","getActiveChannel","channel","get","first","addMessage","message","set","channelId","getMessages","valueSeq","getMessagesFromChannel","map","value","key","push","getMembersFromChannel","members","member","addChannel","index","getChannels","forceUpdate"],"mappings":"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","sourcesContent":["import { OrderedMap } from 'immutable';\r\nimport _ from 'lodash';\r\n\r\n\r\nconst users = OrderedMap({\r\n    '1': {_id:'1', name:\"nDs\", created: new Date()},\r\n    '2': {_id:'2', name:\"nDs0\", created: new Date()},\r\n    '3': {_id:'3', name:\"nDs1\", created: new Date()},\r\n})\r\nexport default class Store {\r\n    constructor(appComponent){\r\n        this.app = appComponent;\r\n        this.messages = new OrderedMap();\r\n        this.channels = new OrderedMap();\r\n        this.activeChannelId = null;\r\n        this.user = {\r\n            _id: '1',\r\n            name: 'nDs',\r\n            creaded: new Date(),\r\n        }\r\n    }\r\n\r\n    getCurrentUser(){\r\n        return this.user;\r\n    }\r\n\r\n    setActiveChannelId(id) {\r\n        this.activeChannelId = id;\r\n        this.update();\r\n    }\r\n    getActiveChannel(){\r\n        const channel = this.activeChannelId ? this.channels.get(this.activeChannelId) : this.channels.first();\r\n        return channel;\r\n    }\r\n\r\n    addMessage(id, message = {}){\r\n        this.messages = this.messages.set(`${id}`, message);\r\n\r\n        //add new message to \r\n        const channelId = _.get(message, 'channelId');\r\n        if(this.channelId){\r\n            const channel = this.channels.get(channelId);\r\n            channel.messages = channel.messages.set(id, true);\r\n            this.channels = this.channels.set(channelId, this.channel);\r\n        }\r\n        this.update();\r\n    }\r\n\r\n    getMessages(){\r\n        return this.messages.valueSeq();\r\n    }\r\n    getMessagesFromChannel(channel){\r\n        let messages = [];\r\n\r\n        if(channel){\r\n            channel.messages.map((value, key) => {\r\n\r\n                const message = this.messages.get(key);\r\n                messages.push(message);\r\n            });\r\n        }\r\n        return messages;\r\n        \r\n    }\r\n\r\n    getMembersFromChannel(channel){\r\n        const members = [];\r\n        if(channel){\r\n            channel.members.map((value, key) => {\r\n                const member = users.get(key);\r\n                members.push(member);\r\n            })\r\n        }\r\n        return members;\r\n    }\r\n\r\n\r\n    addChannel(index, channel = {}){\r\n        this.channels = this.channels.set(`${index}`, channel);\r\n        this.update();\r\n    }\r\n\r\n    getChannels(){\r\n        return this.channels.valueSeq();\r\n    }\r\n    update(){\r\n        this.app.forceUpdate();\r\n    }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}