{"ast":null,"code":"var _jsxFileName = \"C:\\\\myProJects\\\\Server\\\\weatherapp\\\\src\\\\components\\\\header\\\\SimpleAppBar.js\";\nimport React, { useContext } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { GlobalContext } from \"../GlobalState\";\nimport SearchBox from \"./SearchBox\"; // import PropTypes from \"prop-types\";\n\nimport { // withStyles,\nAppBar, Toolbar, Typography, IconButton, Slide } from \"@material-ui/core/\";\nimport useScrollTrigger from \"@material-ui/core/useScrollTrigger\";\nimport { Menu, Search } from \"@material-ui/icons/\";\nconst styles = {\n  root: {\n    flexGrow: 1\n  },\n  title: {\n    textAlign: \"center\",\n    width: \"calc(100% - 96px)\"\n  },\n  input: {\n    color: \"#fff\"\n  }\n};\n\nfunction HideOnScroll(props) {\n  const {\n    children\n  } = props;\n  const trigger = useScrollTrigger();\n  return /*#__PURE__*/React.createElement(Slide, {\n    appear: false,\n    direction: \"down\",\n    in: trigger,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, children);\n}\n\nfunction SimpleAppBar(props) {\n  const [{\n    searchState\n  }, dispatch] = useContext(GlobalContext);\n\n  const setMenuOpen = data => {\n    console.log(data);\n    dispatch({\n      type: \"setMenuOpen\",\n      snippet: data\n    });\n  };\n\n  const setSearchState = React.useCallback(data => {\n    console.log(data);\n    dispatch({\n      type: \"setSearchState\",\n      snippet: data\n    });\n  }, [dispatch]);\n  React.useEffect(() => {\n    // if the page is on search we will change the search state\n    const changeAppBar = () => {\n      const path = props.history.location.pathname;\n\n      if (path === \"/search\") {\n        setSearchState(\"searching\");\n      } else {\n        setSearchState(\"home\");\n      }\n\n      console.log(\"history change detected in app bar\");\n    };\n\n    changeAppBar(); // const unlisten = props.history.listen(location => {\n    //   changeAppBar();\n    // });\n  }, [setSearchState, props.history]);\n\n  const toggleSearch = () => {\n    if (searchState === \"home\") {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(IconButton, {\n        color: \"inherit\",\n        \"aria-label\": \"Menu\",\n        onClick: () => setMenuOpen(true),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Menu, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }\n      })), /*#__PURE__*/React.createElement(Typography, {\n        variant: \"h6\",\n        color: \"inherit\",\n        style: styles.title,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }\n      }, \"nDs Music\"), /*#__PURE__*/React.createElement(IconButton, {\n        onClick: () => setSearchState(\"clicked\"),\n        color: \"inherit\",\n        \"aria-label\": \"Search\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Search, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }\n      })));\n    } else {\n      return /*#__PURE__*/React.createElement(SearchBox, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 14\n        }\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(HideOnScroll, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(AppBar, {\n    id: \"navbar\",\n    position: \"sticky\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Toolbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 11\n    }\n  }, toggleSearch()))));\n}\n\nexport default withRouter(SimpleAppBar);","map":{"version":3,"sources":["C:/myProJects/Server/weatherapp/src/components/header/SimpleAppBar.js"],"names":["React","useContext","withRouter","GlobalContext","SearchBox","AppBar","Toolbar","Typography","IconButton","Slide","useScrollTrigger","Menu","Search","styles","root","flexGrow","title","textAlign","width","input","color","HideOnScroll","props","children","trigger","SimpleAppBar","searchState","dispatch","setMenuOpen","data","console","log","type","snippet","setSearchState","useCallback","useEffect","changeAppBar","path","history","location","pathname","toggleSearch"],"mappings":"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","sourcesContent":["import React, { useContext } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { GlobalContext } from \"../GlobalState\";\n\nimport SearchBox from \"./SearchBox\";\n// import PropTypes from \"prop-types\";\nimport {\n  // withStyles,\n  AppBar,\n  Toolbar,\n  Typography,\n  IconButton,\n  Slide\n} from \"@material-ui/core/\";\n\nimport useScrollTrigger from \"@material-ui/core/useScrollTrigger\";\n\nimport { Menu, Search } from \"@material-ui/icons/\";\n\nconst styles = {\n  root: {\n    flexGrow: 1\n  },\n  title: {\n    textAlign: \"center\",\n    width: \"calc(100% - 96px)\"\n  },\n  input: {\n    color: \"#fff\"\n  }\n};\n\nfunction HideOnScroll(props) {\n  const { children } = props;\n  const trigger = useScrollTrigger();\n\n  return (\n    <Slide appear={false} direction=\"down\" in={trigger}>\n      {children}\n    </Slide>\n  );\n}\n\nfunction SimpleAppBar(props) {\n  const [{ searchState }, dispatch] = useContext(GlobalContext);\n\n  const setMenuOpen = data => {\n    console.log(data);\n    dispatch({ type: \"setMenuOpen\", snippet: data });\n  };\n  const setSearchState = React.useCallback(\n    data => {\n      console.log(data);\n      dispatch({ type: \"setSearchState\", snippet: data });\n    },\n    [dispatch]\n  );\n\n  React.useEffect(() => {\n    // if the page is on search we will change the search state\n    const changeAppBar = () => {\n      const path = props.history.location.pathname;\n      if (path === \"/search\") {\n        setSearchState(\"searching\");\n      } else {\n        setSearchState(\"home\");\n      }\n      console.log(\"history change detected in app bar\");\n    };\n\n    changeAppBar();\n    // const unlisten = props.history.listen(location => {\n    //   changeAppBar();\n    // });\n  }, [setSearchState, props.history]);\n\n  const toggleSearch = () => {\n    if (searchState === \"home\") {\n      return (\n        <>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"Menu\"\n            onClick={() => setMenuOpen(true)}\n          >\n            <Menu />\n          </IconButton>\n          <Typography variant=\"h6\" color=\"inherit\" style={styles.title}>\n            nDs Music\n          </Typography>\n          <IconButton\n            onClick={() => setSearchState(\"clicked\")}\n            color=\"inherit\"\n            aria-label=\"Search\"\n          >\n            <Search />\n          </IconButton>\n        </>\n      );\n    } else {\n      return <SearchBox />;\n    }\n  };\n\n  return (\n    <>\n      <HideOnScroll {...props}>\n        <AppBar id=\"navbar\" position=\"sticky\">\n          <Toolbar>{toggleSearch()}</Toolbar>\n        </AppBar>\n      </HideOnScroll>\n    </>\n  );\n}\n\nexport default withRouter(SimpleAppBar);\n"]},"metadata":{},"sourceType":"module"}