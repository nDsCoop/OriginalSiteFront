{"ast":null,"code":"import _slicedToArray from\"C:\\\\myProJects\\\\Server\\\\weatherapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useContext,useState,useEffect}from\"react\";import{Snackbar}from\"@material-ui/core\";import{GlobalContext}from\"./GlobalState\";var SnackbarMessage=function SnackbarMessage(){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isOpen=_useState2[0],setOpen=_useState2[1];var _useContext=useContext(GlobalContext),_useContext2=_slicedToArray(_useContext,2),snackbarMsg=_useContext2[0].snackbarMsg,dispatch=_useContext2[1];var setSnackbarMsg=React.useCallback(function(data){dispatch({type:\"setSnackbarMsg\",snippet:data});},[dispatch]);useEffect(function(){if(snackbarMsg){setOpen(true);}},[snackbarMsg,setSnackbarMsg]);function handleClose(){console.log(\"closed\");setOpen(false);setSnackbarMsg(null);// we will set back it to null otherwise it wont fire for the same\n}return/*#__PURE__*/React.createElement(Snackbar,{anchorOrigin:{vertical:\"bottom\",horizontal:\"center\"},autoHideDuration:3000,open:isOpen,ContentProps:{\"aria-describedby\":\"message-id\"},onClose:handleClose,message:/*#__PURE__*/React.createElement(\"span\",{id:\"message-id\"},snackbarMsg)});};export default SnackbarMessage;","map":{"version":3,"sources":["C:/myProJects/Server/weatherapp/src/components/SnackbarMessage.js"],"names":["React","useContext","useState","useEffect","Snackbar","GlobalContext","SnackbarMessage","isOpen","setOpen","snackbarMsg","dispatch","setSnackbarMsg","useCallback","data","type","snippet","handleClose","console","log","vertical","horizontal"],"mappings":"8JAAA,MAAOA,CAAAA,KAAP,EAAgBC,UAAhB,CAA4BC,QAA5B,CAAsCC,SAAtC,KAAuD,OAAvD,CAEA,OAASC,QAAT,KAAyB,mBAAzB,CAGA,OAASC,aAAT,KAA8B,eAA9B,CAEA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,EAAM,eACFJ,QAAQ,CAAC,KAAD,CADN,wCACrBK,MADqB,eACbC,OADa,+BAEQP,UAAU,CAACI,aAAD,CAFlB,4CAEnBI,WAFmB,iBAEnBA,WAFmB,CAEJC,QAFI,iBAI5B,GAAMC,CAAAA,cAAc,CAAGX,KAAK,CAACY,WAAN,CACrB,SAAAC,IAAI,CAAI,CACNH,QAAQ,CAAC,CAAEI,IAAI,CAAE,gBAAR,CAA0BC,OAAO,CAAEF,IAAnC,CAAD,CAAR,CACD,CAHoB,CAIrB,CAACH,QAAD,CAJqB,CAAvB,CAMAP,SAAS,CAAC,UAAM,CACd,GAAIM,WAAJ,CAAiB,CACfD,OAAO,CAAC,IAAD,CAAP,CACD,CACF,CAJQ,CAIN,CAACC,WAAD,CAAcE,cAAd,CAJM,CAAT,CAMA,QAASK,CAAAA,WAAT,EAAuB,CACrBC,OAAO,CAACC,GAAR,CAAY,QAAZ,EACAV,OAAO,CAAC,KAAD,CAAP,CACAG,cAAc,CAAC,IAAD,CAAd,CACA;AACD,CACD,mBACE,oBAAC,QAAD,EACE,YAAY,CAAE,CACZQ,QAAQ,CAAE,QADE,CAEZC,UAAU,CAAE,QAFA,CADhB,CAKE,gBAAgB,CAAE,IALpB,CAME,IAAI,CAAEb,MANR,CAOE,YAAY,CAAE,CACZ,mBAAoB,YADR,CAPhB,CAUE,OAAO,CAAES,WAVX,CAWE,OAAO,cAAE,4BAAM,EAAE,CAAC,YAAT,EAAuBP,WAAvB,CAXX,EADF,CAeD,CArCD,CAuCA,cAAeH,CAAAA,eAAf","sourcesContent":["import React, { useContext, useState, useEffect } from \"react\";\r\n\r\nimport { Snackbar } from \"@material-ui/core\";\r\n\r\n\r\nimport { GlobalContext } from \"./GlobalState\";\r\n\r\nconst SnackbarMessage = () => {\r\n  const [isOpen, setOpen] = useState(false);\r\n  const [{ snackbarMsg }, dispatch] = useContext(GlobalContext);\r\n\r\n  const setSnackbarMsg = React.useCallback(\r\n    data => {\r\n      dispatch({ type: \"setSnackbarMsg\", snippet: data });\r\n    },\r\n    [dispatch]\r\n  );\r\n  useEffect(() => {\r\n    if (snackbarMsg) {\r\n      setOpen(true);\r\n    }\r\n  }, [snackbarMsg, setSnackbarMsg]);\r\n\r\n  function handleClose() {\r\n    console.log(\"closed\");\r\n    setOpen(false);\r\n    setSnackbarMsg(null);\r\n    // we will set back it to null otherwise it wont fire for the same\r\n  }\r\n  return (\r\n    <Snackbar\r\n      anchorOrigin={{\r\n        vertical: \"bottom\",\r\n        horizontal: \"center\"\r\n      }}\r\n      autoHideDuration={3000}\r\n      open={isOpen}\r\n      ContentProps={{\r\n        \"aria-describedby\": \"message-id\"\r\n      }}\r\n      onClose={handleClose}\r\n      message={<span id=\"message-id\">{snackbarMsg}</span>}\r\n    />\r\n  );\r\n};\r\n\r\nexport default SnackbarMessage;\r\n"]},"metadata":{},"sourceType":"module"}