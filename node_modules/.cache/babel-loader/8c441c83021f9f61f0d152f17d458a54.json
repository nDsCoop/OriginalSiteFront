{"ast":null,"code":"import _regeneratorRuntime from\"C:\\\\myProJects\\\\Server\\\\weatherapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"C:\\\\myProJects\\\\Server\\\\weatherapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"C:\\\\myProJects\\\\Server\\\\weatherapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useEffect,useContext,useState,useRef}from\"react\";import{Grid}from\"@material-ui/core\";import{useSwipeable}from\"react-swipeable\";import PlayPauseButton from\"./PlayPauseButton\";import NextButton from\"./NextButton\";import PreviousButton from\"./PreviousButton\";import MusicArt from\"./MusicArt\";import TimelineController from\"./TimelineController\";import TopBar from\"./TopBar\";import MiniMusicArt from\"./MiniMusicArt\";import RelatedVideos from\"../RelatedVideos\";import getAudioLink from\"../../apis/getAudioLink\";import youtubeSearch from\"../../apis/youtubeSearch\";import{updatePlayingSong}from\"../../external/saveSong\";import\"../../external/saveCountry\";import\"../../style.css\";import{GlobalContext}from\"../GlobalState\";// window.onbeforeunload = function() {\n//   return 'You have unsaved changes!';\n// }\nvar relatedVideosVar;var MainPlayer=function MainPlayer(_ref){var location=_ref.location,history=_ref.history;var params=new URLSearchParams(location.search);var _useContext=useContext(GlobalContext),_useContext2=_slicedToArray(_useContext,2),_useContext2$=_useContext2[0],currentVideoSnippet=_useContext2$.currentVideoSnippet,themeSelectValue=_useContext2$.themeSelectValue,dispatch=_useContext2[1];var setCurrentVideoSnippet=function setCurrentVideoSnippet(data){dispatch({type:\"setCurrentVideoSnippet\",snippet:data});};var _useState=useState([]),_useState2=_slicedToArray(_useState,2),relatedVideos=_useState2[0],_setRelatedVideos=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),isItFromPlaylist=_useState4[0],setIsItFromPlaylist=_useState4[1];//\nvar _useState5=useState(null),_useState6=_slicedToArray(_useState5,2),audioState=_useState6[0],setAudioState=_useState6[1];// there will be 4 states\n// loading, loaded, playing, paused\nvar _useState7=useState(null),_useState8=_slicedToArray(_useState7,2),playerState=_useState8[0],setPlayerState=_useState8[1];// there will be 3 states\n// maximized, minimized, playlist\nvar _useState9=useState(true),_useState10=_slicedToArray(_useState9,2),minimized=_useState10[0],setMinimized=_useState10[1];var _useState11=useState(false),_useState12=_slicedToArray(_useState11,2),isRepeatOn=_useState12[0],_setIsRepeatOn=_useState12[1];var _useState13=useState(\"none\"),_useState14=_slicedToArray(_useState13,2),rating=_useState14[0],setRating=_useState14[1];var _useState15=useState(false),_useState16=_slicedToArray(_useState15,2),isNextFromMini=_useState16[0],setIsNextFromMini=_useState16[1];var _useState17=useState(null),_useState18=_slicedToArray(_useState17,2),audioURL=_useState18[0],setAudioURL=_useState18[1];var body=document.querySelector(\"body\");var audioPlayer=useRef();var player=audioPlayer.current;var setupMediaSessions=function setupMediaSessions(){if(\"mediaSession\"in navigator){console.log(\"navigator setupped\");navigator.mediaSession.metadata=new window.MediaMetadata({title:currentVideoSnippet.title,artist:currentVideoSnippet.channelTitle,artwork:[{src:currentVideoSnippet.sdThumbnail,sizes:\"512x512\",type:\"image/png\"}]});navigator.mediaSession.setActionHandler(\"play\",function(){/* Code excerpted. */playAudio();});navigator.mediaSession.setActionHandler(\"pause\",function(){/* Code excerpted. */audioPlayer.current.pause();});navigator.mediaSession.setActionHandler(\"previoustrack\",function(){playPrevious();});navigator.mediaSession.setActionHandler(\"nexttrack\",function(){_playNext();});}};var playAudio=function playAudio(){audioPlayer.current.play().then(function(_){// Automatic playback started!\n// Show playing UI.\nconsole.log(\"audio played auto\");setupMediaSessions();}).catch(function(error){// Auto-play was prevented\n// Show paused UI.\nconsole.log(\"playback prevented\");setAudioState(\"paused\");});};useEffect(function(){console.log(\"state changed triggedred\");var getAudio=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(data){var res,proxyURL;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:// audioPlayer.current.src = \"\";\n// maximize the player every time id changes\n// only if playlist is not open\nif(playerState!==\"playlist\"&&!isNextFromMini){setPlayerState(\"maximized\");//\nconsole.log(\"maximizing here yar and state is\",playerState);}setTimeout(function(){setIsNextFromMini(false);// change it back to false\n},200);setAudioState(\"loading\");_context.next=5;return getAudioLink.get(\"/song\",{params:{id:data}});case 5:res=_context.sent;// set the audio data\nproxyURL=\"https://server.ylight.xyz/proxy/\";audioPlayer.current.src=res.data;playAudio();// var audioContext = new AudioContext();\n// var track = audioContext.createMediaElementSource(audioPlayer.current);\n// track.connect(audioContext.destination);\ncase 9:case\"end\":return _context.stop();}}},_callee);}));return function getAudio(_x){return _ref2.apply(this,arguments);};}();if(currentVideoSnippet.audio){console.log(\"yes its downloaded we will play from local file\");// maximize the player every time id changes\nsetPlayerState(\"maximized\");setAudioState(\"loading\");audioPlayer.current.src=window.URL.createObjectURL(currentVideoSnippet.audio);playAudio();}else if(currentVideoSnippet.id){getAudio(currentVideoSnippet.id);}if(currentVideoSnippet.id){var searchRelated=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var res;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return youtubeSearch.get(\"/search\",{params:{relatedToVideoId:currentVideoSnippet.id,maxResults:10}});case 2:res=_context2.sent;_setRelatedVideos(res.data.items);case 4:case\"end\":return _context2.stop();}}},_callee2);}));return function searchRelated(){return _ref3.apply(this,arguments);};}();// if its not from the mini next button then only change history\nif(!isNextFromMini){// if the click is not from playlist then only we will search for realated video\nif(!isItFromPlaylist){// console.log(\"searching for related vids\", relatedVideos);\n// if player is in playlist mode we will just replace history else push it\nif(location.pathname!==\"/play\"){// prevent duplicating history\nhistory.push(\"/play?id=\".concat(currentVideoSnippet.id));}searchRelated();}else{history.replace(\"/play?id=\".concat(currentVideoSnippet.id));setIsItFromPlaylist(false);}}console.log(currentVideoSnippet);}// set rating to none when we load new song\nsetRating(\"none\");},[currentVideoSnippet,setIsItFromPlaylist]);// useEffect(() => {\n//   console.log(\"from playlist\", isItFromPlaylist);\n// }, [isItFromPlaylist]);\nuseEffect(function(){relatedVideosVar=relatedVideos;console.log(\"related\",relatedVideos);},[relatedVideos]);useEffect(function(){console.log(\"isnext state\",isNextFromMini);},[isNextFromMini]);var setAudioSrcAndPlay=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(id){var res;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return getAudioLink.get(\"/song\",{params:{id:id}});case 2:res=_context3.sent;// set the audio data\naudioPlayer.current.src=res.data;playAudio();case 5:case\"end\":return _context3.stop();}}},_callee3);}));return function setAudioSrcAndPlay(_x2){return _ref4.apply(this,arguments);};}();var setVideoSnippet=function setVideoSnippet(video){try{setCurrentVideoSnippet({id:video.id.videoId,title:video.snippet.title,channelTitle:video.snippet.channelTitle,maxThumbnail:\"https://img.youtube.com/vi/\".concat(video.id.videoId,\"/hqdefault.jpg\"),sdThumbnail:\"https://img.youtube.com/vi/\".concat(video.id.videoId,\"/sddefault.jpg\")// this is the url of the max resolution of thumbnail\n});}catch(err){console.error('err',err);}// if window is minimized then only we will run this function\nif(document.hidden){setAudioSrcAndPlay(video.id.videoId);}};var _playNext=function playNext(){// also set this is from playlist\nsetIsItFromPlaylist(true);console.log(\"play next related videos\",relatedVideos);// find the index of playing song in the playlist\nvar currentIndex=relatedVideosVar.findIndex(function(video){return video.id.videoId===currentVideoSnippet.id;});console.log(\"the current index is\",currentIndex);var video;console.log(\"hey we will play next song\");video=relatedVideosVar[currentIndex+1];//we will play the next song\nsetVideoSnippet(video);};var playPrevious=function playPrevious(){setIsItFromPlaylist(true);// if the player time is greater than 5 sec we will move the time to 0\nif(player.currentTime>5){player.currentTime=0;}else{var currentIndex=relatedVideosVar.findIndex(function(video){return video.id.videoId===currentVideoSnippet.id;});var video;if(currentIndex!==-1){video=relatedVideosVar[currentIndex-1];//we will play the next song\nsetVideoSnippet(video);}else{player.currentTime=0;}}};var playerStyle={position:\"fixed\",right:0,bottom:0,background:\"#fff\",width:\"100%\",height:\"100%\",zIndex:1400,display:\"inline block\",transition:\"all .3s ease\"};if(playerState===\"minimized\"){playerStyle.transform=\"translateY(calc(100% - 106px))\";playerStyle.zIndex=0;// if theme is not dark then only apply the pink style\nif(themeSelectValue===\"Dark\"){playerStyle.background=\"#333\";}else{playerStyle.background=\"#e91e63\";}// playerStyle.bottom = \"48px\";\n// calculate the top height and we are subtracting 148px becz\n// 48 is the value of menu bar and 100px is minimized height\n// make body overflow scroll 😝\nbody.style.overflow=\"auto\";}if(playerState===\"maximized\"){// make body overflow hidden 🙈\nbody.style.overflow=\"hidden\";if(themeSelectValue===\"Dark\"){playerStyle.background=\"#333\";}}if(playerState===\"playlist\"){playerStyle.transform=\"translateY(-418px)\";}var expandPlayer=function expandPlayer(e){e.preventDefault();if(playerState===\"minimized\"){setPlayerState(\"maximized\");setMinimized(true);history.push({pathname:\"/play\",search:\"?id=\".concat(currentVideoSnippet.id),state:{modal:true}});}};var toggleMaxPlaylist=function toggleMaxPlaylist(){if(playerState===\"playlist\"){setPlayerState(\"maximized\");}else{setPlayerState(\"playlist\");}console.log(\"Maximize the playlist\");};var updateSongDB=/*#__PURE__*/function(){var _ref5=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(){var rating;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.next=2;return updatePlayingSong(currentVideoSnippet);case 2:rating=_context4.sent;//  it will update song on db and return the rating\nsetRating(rating);console.log(rating);case 5:case\"end\":return _context4.stop();}}},_callee4);}));return function updateSongDB(){return _ref5.apply(this,arguments);};}();// this will be fired when song is ended\nvar songEnded=function songEnded(){// if repeat is false we will play next else just set the time to 0\nif(!isRepeatOn){_playNext();}else{audioPlayer.current.currentTime=0;playAudio();}};var initPosition=0;var containerRef=useRef(null);var swipeHandlerMaximized=useSwipeable({onSwipedDown:function onSwipedDown(e){setPlayerState(\"minimized\");history.goBack();},onSwiping:function onSwiping(e){// console.log(e);\n// getting the event for touches to extract the position\nif(initPosition===0){initPosition=e.event.changedTouches[0].screenY;}var screenY=e.event.changedTouches[0].screenY;var positionDifference=Math.round(screenY-initPosition);if(positionDifference<1){positionDifference=0;}var containerRefStyle=containerRef.current.style;containerRefStyle.transform=\"translateY(\".concat(positionDifference,\"px)\");containerRefStyle.transition=\"none\";},onSwiped:function onSwiped(e){initPosition=0;containerRef.current.style=\"\";// we will make the initial position 0 again after user leaves the screen\n},onSwipedUp:function onSwipedUp(e){if(playerState===\"minimized\"){setPlayerState(\"maximized\");}},onSwipedRight:function onSwipedRight(e){var playTimeout=setTimeout(function(){clearTimeout(playTimeout);_playNext();},250);},onSwipedLeft:function onSwipedLeft(e){var playTimeout=setTimeout(function(){clearTimeout(playTimeout);playPrevious();},250);}});var swipeHandlerMin=useSwipeable({onSwipedUp:function onSwipedUp(e){expandPlayer();}});useEffect(function(){if(location.pathname===\"/play\"&&!currentVideoSnippet.id){console.log(\"history is in play fetching song\");fetchAndSetCurrentVideoSnippet(params.get(\"id\"));// math will give the song id from\n}// we will only change if its push  otherwise while changing song from playlist changes the state\n// Listen for changes to the current location.\nvar unlisten=history.listen(function(location){// location is an object like window.location\nif(location.pathname===\"/play\"){// we will only change if its push  otherwise while changing song from playlist changes the state\nif(history.action!==\"REPLACE\"){setPlayerState(\"maximized\");console.log(\"set player state to maximized\");}}else{setPlayerState(\"minimized\");console.log(\"set player state to minimized\");}console.log(history);});},[history]);useEffect(function(){console.log(playerState);},[playerState]);var returnMinMaxClass=function returnMinMaxClass(){if(playerState===\"minimized\"){return\"playerMinimized\";}else if(playerState===\"playlist\"){return\"playerPlaylist\";}};var returnMaximizedPlayer=function returnMaximizedPlayer(){if(playerState===\"maximized\"||playerState===\"playlist\"){return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Grid,{container:true,direction:\"column\",className:\"main-player-inner\",style:{height:\" calc(100vh - 46px)\",justifyContent:\"space-evenly\"}},/*#__PURE__*/React.createElement(TopBar,{song:currentVideoSnippet,player:player,setPlayerState:setPlayerState,history:history}),/*#__PURE__*/React.createElement(\"div\",Object.assign({},swipeHandlerMaximized,{className:\"musicArtContainer\"}),/*#__PURE__*/React.createElement(MusicArt,{data:currentVideoSnippet,rating:rating,audioEl:player})),/*#__PURE__*/React.createElement(TimelineController,{audioState:audioState,player:player}),/*#__PURE__*/React.createElement(Grid,{container:true,direction:\"row\",justify:\"space-evenly\",alignItems:\"center\",style:{maxWidth:\"290px\",height:\"80px\",margin:\"0 auto\"}},/*#__PURE__*/React.createElement(PreviousButton,{playPrevious:playPrevious}),/*#__PURE__*/React.createElement(PlayPauseButton,{player:player,audioState:audioState}),/*#__PURE__*/React.createElement(NextButton,{onPlayNext:_playNext}))),/*#__PURE__*/React.createElement(RelatedVideos,{toggleMaxPlaylist:toggleMaxPlaylist,setPlaylist:function setPlaylist(){return setIsItFromPlaylist(true);},playerState:playerState,relatedVideos:relatedVideos,setRelatedVideos:function setRelatedVideos(data){return _setRelatedVideos(data);},isRepeatOn:isRepeatOn// this will set the repeat setting\n,setIsRepeatOn:function setIsRepeatOn(){_setIsRepeatOn(!isRepeatOn);}}));}};var returnMinimizedPlayer=function returnMinimizedPlayer(){if(playerState===\"minimized\"&&currentVideoSnippet.id){return/*#__PURE__*/React.createElement(\"div\",swipeHandlerMin,/*#__PURE__*/React.createElement(MiniMusicArt// we are making an object for props we will pass it to play pause button through mini music art\n,{playPause:{player:player,minimized:minimized,audioState:audioState},playNext:function playNext(e){e.stopPropagation();setIsNextFromMini(true);_playNext();},data:currentVideoSnippet,emptyPlayer:function emptyPlayer(e){e.stopPropagation();setCurrentVideoSnippet([]);}}),/*#__PURE__*/React.createElement(TimelineController,{audioState:audioState,player:player,minimized:minimized}));}};var fetchAndSetCurrentVideoSnippet=function fetchAndSetCurrentVideoSnippet(id){youtubeSearch.get(\"videos\",{params:{id:id}}).then(function(res){var item=res.data.items[0];console.log(currentVideoSnippet);setCurrentVideoSnippet({id:item.id,title:item.snippet.title,channelTitle:item.snippet.channelTitle,maxThumbnail:\"https://img.youtube.com/vi/\".concat(item.id,\"/maxresdefault.jpg\"),sdThumbnail:\"https://img.youtube.com/vi/\".concat(item.id,\"/sddefault.jpg\")// this is the url of the max resolution of thumbnail\n});});};if(!currentVideoSnippet.id){return null;}return/*#__PURE__*/React.createElement(\"div\",{// drag=\"y\"\n// dragConstraints={{ top: 0, bottom: 600 }}\nref:containerRef// style={playerStyle}\n,onClick:expandPlayer,className:\"mediaPlayerContainer \"+returnMinMaxClass()},returnMaximizedPlayer(),returnMinimizedPlayer(),/*#__PURE__*/React.createElement(\"audio\",{// onTimeUpdate={timeUpdate}\nonLoadStart:function onLoadStart(){setAudioState(\"loading\");},id:\"audio-element\",onLoadedData:updateSongDB// crossOrigin=\"anonymous\"\n,onPlay:function onPlay(){return setAudioState(\"playing\");},onPlaying:function onPlaying(){return setAudioState(\"playing\");},onPause:function onPause(){return setAudioState(\"paused\");},onEnded:songEnded,autoPlay:true,ref:audioPlayer// type=\"audio/mp4\"\n}));};export default MainPlayer;","map":{"version":3,"sources":["C:/myProJects/Server/weatherapp/src/components/player/MainPlayer.js"],"names":["React","useEffect","useContext","useState","useRef","Grid","useSwipeable","PlayPauseButton","NextButton","PreviousButton","MusicArt","TimelineController","TopBar","MiniMusicArt","RelatedVideos","getAudioLink","youtubeSearch","updatePlayingSong","GlobalContext","relatedVideosVar","MainPlayer","location","history","params","URLSearchParams","search","currentVideoSnippet","themeSelectValue","dispatch","setCurrentVideoSnippet","data","type","snippet","relatedVideos","setRelatedVideos","isItFromPlaylist","setIsItFromPlaylist","audioState","setAudioState","playerState","setPlayerState","minimized","setMinimized","isRepeatOn","setIsRepeatOn","rating","setRating","isNextFromMini","setIsNextFromMini","audioURL","setAudioURL","body","document","querySelector","audioPlayer","player","current","setupMediaSessions","navigator","console","log","mediaSession","metadata","window","MediaMetadata","title","artist","channelTitle","artwork","src","sdThumbnail","sizes","setActionHandler","playAudio","pause","playPrevious","playNext","play","then","_","catch","error","getAudio","setTimeout","get","id","res","proxyURL","audio","URL","createObjectURL","searchRelated","relatedToVideoId","maxResults","items","pathname","push","replace","setAudioSrcAndPlay","setVideoSnippet","video","videoId","maxThumbnail","err","hidden","currentIndex","findIndex","currentTime","playerStyle","position","right","bottom","background","width","height","zIndex","display","transition","transform","style","overflow","expandPlayer","e","preventDefault","state","modal","toggleMaxPlaylist","updateSongDB","songEnded","initPosition","containerRef","swipeHandlerMaximized","onSwipedDown","goBack","onSwiping","event","changedTouches","screenY","positionDifference","Math","round","containerRefStyle","onSwiped","onSwipedUp","onSwipedRight","playTimeout","clearTimeout","onSwipedLeft","swipeHandlerMin","fetchAndSetCurrentVideoSnippet","unlisten","listen","action","returnMinMaxClass","returnMaximizedPlayer","justifyContent","maxWidth","margin","returnMinimizedPlayer","stopPropagation","item"],"mappings":"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","sourcesContent":["import React, { useEffect, useContext, useState, useRef } from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport { useSwipeable } from \"react-swipeable\";\nimport PlayPauseButton from \"./PlayPauseButton\";\nimport NextButton from \"./NextButton\";\nimport PreviousButton from \"./PreviousButton\";\nimport MusicArt from \"./MusicArt\";\nimport TimelineController from \"./TimelineController\";\nimport TopBar from \"./TopBar\";\nimport MiniMusicArt from \"./MiniMusicArt\";\nimport RelatedVideos from \"../RelatedVideos\";\nimport getAudioLink from \"../../apis/getAudioLink\";\nimport youtubeSearch from \"../../apis/youtubeSearch\";\nimport { updatePlayingSong } from \"../../external/saveSong\";\n\nimport \"../../external/saveCountry\";\n\nimport \"../../style.css\";\n\nimport { GlobalContext } from \"../GlobalState\";\n\n// window.onbeforeunload = function() {\n//   return 'You have unsaved changes!';\n// }\nlet relatedVideosVar;\n\nconst MainPlayer = ({ location, history }) => {\n  let params = new URLSearchParams(location.search);\n\n  const [{ currentVideoSnippet, themeSelectValue }, dispatch] = useContext(\n    GlobalContext\n  );\n\n  const setCurrentVideoSnippet = data => {\n    dispatch({ type: \"setCurrentVideoSnippet\", snippet: data });\n  };\n\n  const [relatedVideos, setRelatedVideos] = useState([]);\n  const [isItFromPlaylist, setIsItFromPlaylist] = useState(false);\n  //\n  const [audioState, setAudioState] = useState(null);\n  // there will be 4 states\n  // loading, loaded, playing, paused\n\n  const [playerState, setPlayerState] = useState(null);\n  // there will be 3 states\n  // maximized, minimized, playlist\n\n  const [minimized, setMinimized] = useState(true);\n  const [isRepeatOn, setIsRepeatOn] = useState(false);\n  const [rating, setRating] = useState(\"none\");\n  const [isNextFromMini, setIsNextFromMini] = useState(false);\n  const [audioURL, setAudioURL] = useState(null);\n  const body = document.querySelector(\"body\");\n\n  const audioPlayer = useRef();\n  const player = audioPlayer.current;\n  const setupMediaSessions = () => {\n    if (\"mediaSession\" in navigator) {\n      console.log(\"navigator setupped\");\n\n      navigator.mediaSession.metadata = new window.MediaMetadata({\n        title: currentVideoSnippet.title,\n        artist: currentVideoSnippet.channelTitle,\n        artwork: [\n          {\n            src: currentVideoSnippet.sdThumbnail,\n            sizes: \"512x512\",\n            type: \"image/png\"\n          }\n        ]\n      });\n      navigator.mediaSession.setActionHandler(\"play\", () => {\n        /* Code excerpted. */\n        playAudio();\n      });\n      navigator.mediaSession.setActionHandler(\"pause\", () => {\n        /* Code excerpted. */\n        audioPlayer.current.pause();\n      });\n      navigator.mediaSession.setActionHandler(\"previoustrack\", () => {\n        playPrevious();\n      });\n      navigator.mediaSession.setActionHandler(\"nexttrack\", () => {\n        playNext();\n      });\n    }\n  };\n\n  const playAudio = () => {\n    audioPlayer.current\n      .play()\n      .then(_ => {\n        // Automatic playback started!\n        // Show playing UI.\n        console.log(\"audio played auto\");\n        setupMediaSessions();\n      })\n      .catch(error => {\n        // Auto-play was prevented\n        // Show paused UI.\n        console.log(\"playback prevented\");\n        setAudioState(\"paused\");\n      });\n  };\n\n  useEffect(() => {\n    console.log(\"state changed triggedred\");\n    const getAudio = async data => {\n      // audioPlayer.current.src = \"\";\n      // maximize the player every time id changes\n      // only if playlist is not open\n      if (playerState !== \"playlist\" && !isNextFromMini) {\n        setPlayerState(\"maximized\");\n        //\n        console.log(\"maximizing here yar and state is\", playerState);\n      }\n\n      setTimeout(() => {\n        setIsNextFromMini(false);\n        // change it back to false\n      }, 200);\n\n      setAudioState(\"loading\");\n      const res = await getAudioLink.get(\"/song\", {\n        params: { id: data }\n      });\n\n      // set the audio data\n      const proxyURL = \"https://server.ylight.xyz/proxy/\";\n      audioPlayer.current.src = res.data;\n      playAudio();\n\n      // var audioContext = new AudioContext();\n\n      // var track = audioContext.createMediaElementSource(audioPlayer.current);\n      // track.connect(audioContext.destination);\n    };\n\n    if (currentVideoSnippet.audio) {\n      console.log(\"yes its downloaded we will play from local file\");\n      // maximize the player every time id changes\n\n      setPlayerState(\"maximized\");\n      setAudioState(\"loading\");\n      audioPlayer.current.src = window.URL.createObjectURL(\n        currentVideoSnippet.audio\n      );\n      playAudio();\n    } else if (currentVideoSnippet.id) {\n      getAudio(currentVideoSnippet.id);\n    }\n\n    if (currentVideoSnippet.id) {\n      const searchRelated = async () => {\n        const res = await youtubeSearch.get(\"/search\", {\n          params: {\n            relatedToVideoId: currentVideoSnippet.id,\n            maxResults: 10\n          }\n        });\n        setRelatedVideos(res.data.items);\n      };\n\n      // if its not from the mini next button then only change history\n      if (!isNextFromMini) {\n        // if the click is not from playlist then only we will search for realated video\n        if (!isItFromPlaylist) {\n          // console.log(\"searching for related vids\", relatedVideos);\n          // if player is in playlist mode we will just replace history else push it\n          if (location.pathname !== \"/play\") {\n            // prevent duplicating history\n            history.push(`/play?id=${currentVideoSnippet.id}`);\n          }\n\n          searchRelated();\n        } else {\n          history.replace(`/play?id=${currentVideoSnippet.id}`);\n          setIsItFromPlaylist(false);\n        }\n      }\n\n      console.log(currentVideoSnippet);\n    }\n\n    // set rating to none when we load new song\n    setRating(\"none\");\n  }, [currentVideoSnippet, setIsItFromPlaylist]);\n\n  // useEffect(() => {\n  //   console.log(\"from playlist\", isItFromPlaylist);\n  // }, [isItFromPlaylist]);\n\n  useEffect(() => {\n    relatedVideosVar = relatedVideos;\n    console.log(\"related\", relatedVideos);\n  }, [relatedVideos]);\n\n  useEffect(() => {\n    console.log(\"isnext state\", isNextFromMini);\n  }, [isNextFromMini]);\n\n  const setAudioSrcAndPlay = async id => {\n    const res = await getAudioLink.get(\"/song\", {\n      params: { id: id }\n    });\n\n    // set the audio data\n    audioPlayer.current.src = res.data;\n    playAudio();\n  };\n\n  const setVideoSnippet = video => {\n    try{\n      setCurrentVideoSnippet({\n        id: video.id.videoId,\n        title: video.snippet.title,\n        channelTitle: video.snippet.channelTitle,\n        maxThumbnail: `https://img.youtube.com/vi/${video.id.videoId}/hqdefault.jpg`,\n        sdThumbnail: `https://img.youtube.com/vi/${video.id.videoId}/sddefault.jpg`\n        // this is the url of the max resolution of thumbnail\n      });\n    }\n    catch(err)\n    {\n      console.error('err', err)\n    }\n    // if window is minimized then only we will run this function\n    if (document.hidden) {\n      setAudioSrcAndPlay(video.id.videoId);\n    }\n  };\n\n  const playNext = () => {\n    // also set this is from playlist\n    setIsItFromPlaylist(true);\n    console.log(\"play next related videos\", relatedVideos);\n    // find the index of playing song in the playlist\n    const currentIndex = relatedVideosVar.findIndex(\n      video => video.id.videoId === currentVideoSnippet.id\n    );\n    console.log(\"the current index is\", currentIndex);\n\n    let video;\n    console.log(\"hey we will play next song\");\n    video = relatedVideosVar[currentIndex + 1]; //we will play the next song\n\n    setVideoSnippet(video);\n  };\n\n  const playPrevious = () => {\n    setIsItFromPlaylist(true);\n\n    // if the player time is greater than 5 sec we will move the time to 0\n    if (player.currentTime > 5) {\n      player.currentTime = 0;\n    } else {\n      const currentIndex = relatedVideosVar.findIndex(\n        video => video.id.videoId === currentVideoSnippet.id\n      );\n      let video;\n      if (currentIndex !== -1) {\n        video = relatedVideosVar[currentIndex - 1]; //we will play the next song\n        setVideoSnippet(video);\n      } else {\n        player.currentTime = 0;\n      }\n    }\n  };\n\n  let playerStyle = {\n    position: \"fixed\",\n    right: 0,\n    bottom: 0,\n    background: \"#fff\",\n    width: \"100%\",\n    height: \"100%\",\n    zIndex: 1400,\n    display: \"inline block\",\n    transition: \"all .3s ease\"\n  };\n\n  if (playerState === \"minimized\") {\n    playerStyle.transform = \"translateY(calc(100% - 106px))\";\n    playerStyle.zIndex = 0;\n    // if theme is not dark then only apply the pink style\n    if (themeSelectValue === \"Dark\") {\n      playerStyle.background = \"#333\";\n    } else {\n      playerStyle.background = \"#e91e63\";\n    }\n    // playerStyle.bottom = \"48px\";\n    // calculate the top height and we are subtracting 148px becz\n    // 48 is the value of menu bar and 100px is minimized height\n    // make body overflow scroll 😝\n    body.style.overflow = \"auto\";\n  }\n\n  if (playerState === \"maximized\") {\n    // make body overflow hidden 🙈\n    body.style.overflow = \"hidden\";\n    if (themeSelectValue === \"Dark\") {\n      playerStyle.background = \"#333\";\n    }\n  }\n\n  if (playerState === \"playlist\") {\n    playerStyle.transform = \"translateY(-418px)\";\n  }\n\n  const expandPlayer = (e) => {\n    e.preventDefault();\n    if (playerState === \"minimized\") {\n      setPlayerState(\"maximized\");\n      setMinimized(true);\n      history.push({\n        pathname: \"/play\",\n        search: `?id=${currentVideoSnippet.id}`,\n        state: { modal: true }\n      });\n    }\n  };\n\n  const toggleMaxPlaylist = () => {\n    if (playerState === \"playlist\") {\n      setPlayerState(\"maximized\");\n    } else {\n      setPlayerState(\"playlist\");\n    }\n    console.log(\"Maximize the playlist\");\n  };\n\n  const updateSongDB = async () => {\n    const rating = await updatePlayingSong(currentVideoSnippet);\n    //  it will update song on db and return the rating\n    setRating(rating);\n    console.log(rating);\n  };\n\n  // this will be fired when song is ended\n  const songEnded = () => {\n    // if repeat is false we will play next else just set the time to 0\n    if (!isRepeatOn) {\n      playNext();\n    } else {\n      audioPlayer.current.currentTime = 0;\n      playAudio();\n    }\n  };\n\n  let initPosition = 0;\n  const containerRef = useRef(null);\n\n  const swipeHandlerMaximized = useSwipeable({\n    onSwipedDown: e => {\n      setPlayerState(\"minimized\");\n      history.goBack();\n    },\n    onSwiping: e => {\n      // console.log(e);\n      // getting the event for touches to extract the position\n      if (initPosition === 0) {\n        initPosition = e.event.changedTouches[0].screenY;\n      }\n\n      const screenY = e.event.changedTouches[0].screenY;\n      let positionDifference = Math.round(screenY - initPosition);\n      if (positionDifference < 1) {\n        positionDifference = 0;\n      }\n\n      const containerRefStyle = containerRef.current.style;\n      containerRefStyle.transform = `translateY(${positionDifference}px)`;\n      containerRefStyle.transition = \"none\";\n    },\n    onSwiped: e => {\n      initPosition = 0;\n      containerRef.current.style = \"\";\n      // we will make the initial position 0 again after user leaves the screen\n    },\n    onSwipedUp: e => {\n      if (playerState === \"minimized\") {\n        setPlayerState(\"maximized\");\n      }\n    },\n    onSwipedRight: e => {\n      const playTimeout = setTimeout(() => {\n        clearTimeout(playTimeout);\n        playNext();\n      }, 250);\n    },\n    onSwipedLeft: e => {\n      const playTimeout = setTimeout(() => {\n        clearTimeout(playTimeout);\n        playPrevious();\n      }, 250);\n    }\n  });\n\n  const swipeHandlerMin = useSwipeable({\n    onSwipedUp: e => {\n      expandPlayer();\n    }\n  });\n\n  useEffect(() => {\n    if (location.pathname === \"/play\" && !currentVideoSnippet.id) {\n      console.log(\"history is in play fetching song\");\n\n      fetchAndSetCurrentVideoSnippet(params.get(\"id\")); // math will give the song id from\n    }\n    // we will only change if its push  otherwise while changing song from playlist changes the state\n\n    // Listen for changes to the current location.\n    const unlisten = history.listen(location => {\n      // location is an object like window.location\n      if (location.pathname === \"/play\") {\n        // we will only change if its push  otherwise while changing song from playlist changes the state\n        if (history.action !== \"REPLACE\") {\n          setPlayerState(\"maximized\");\n          console.log(\"set player state to maximized\");\n        }\n      } else {\n        setPlayerState(\"minimized\");\n        console.log(\"set player state to minimized\");\n      }\n      console.log(history);\n    });\n  }, [history]);\n\n  useEffect(() => {\n    console.log(playerState);\n  }, [playerState]);\n\n  const returnMinMaxClass = () => {\n    if (playerState === \"minimized\") {\n      return \"playerMinimized\";\n    } else if (playerState === \"playlist\") {\n      return \"playerPlaylist\";\n    }\n  };\n\n  const returnMaximizedPlayer = () => {\n    if (playerState === \"maximized\" || playerState === \"playlist\") {\n      return (\n        <>\n          <Grid\n            container\n            direction=\"column\"\n            className=\"main-player-inner\"\n            style={{\n              height: \" calc(100vh - 46px)\",\n              justifyContent: \"space-evenly\"\n            }}\n          >\n            <TopBar\n              song={currentVideoSnippet}\n              player={player}\n              setPlayerState={setPlayerState}\n              history={history}\n            />\n            <div {...swipeHandlerMaximized} className=\"musicArtContainer\">\n              <MusicArt\n                data={currentVideoSnippet}\n                rating={rating}\n                audioEl={player}\n              />\n            </div>\n            <TimelineController audioState={audioState} player={player} />\n\n            <Grid\n              container\n              direction=\"row\"\n              justify=\"space-evenly\"\n              alignItems=\"center\"\n              style={{ maxWidth: \"290px\", height: \"80px\", margin: \"0 auto\" }}\n            >\n              <PreviousButton playPrevious={playPrevious} />\n              <PlayPauseButton player={player} audioState={audioState} />\n              <NextButton onPlayNext={playNext} />\n            </Grid>\n          </Grid>\n          <RelatedVideos\n            toggleMaxPlaylist={toggleMaxPlaylist}\n            setPlaylist={() => setIsItFromPlaylist(true)}\n            playerState={playerState}\n            relatedVideos={relatedVideos}\n            setRelatedVideos={data => setRelatedVideos(data)}\n            isRepeatOn={isRepeatOn}\n            // this will set the repeat setting\n            setIsRepeatOn={() => {\n              setIsRepeatOn(!isRepeatOn);\n            }}\n          />\n        </>\n      );\n    }\n  };\n\n  const returnMinimizedPlayer = () => {\n    if (playerState === \"minimized\" && currentVideoSnippet.id) {\n      return (\n        <div {...swipeHandlerMin}>\n          <MiniMusicArt\n            // we are making an object for props we will pass it to play pause button through mini music art\n            playPause={{\n              player: player,\n              minimized: minimized,\n              audioState: audioState\n            }}\n            playNext={e => {\n              e.stopPropagation();\n              setIsNextFromMini(true);\n              playNext();\n            }}\n            data={currentVideoSnippet}\n            emptyPlayer={e => {\n              e.stopPropagation();\n              setCurrentVideoSnippet([]);\n            }}\n          />\n          <TimelineController\n            audioState={audioState}\n            player={player}\n            minimized={minimized}\n          />\n        </div>\n      );\n    }\n  };\n\n  const fetchAndSetCurrentVideoSnippet = id => {\n    youtubeSearch\n      .get(\"videos\", {\n        params: {\n          id: id\n        }\n      })\n      .then(res => {\n        const item = res.data.items[0];\n        console.log(currentVideoSnippet);\n        setCurrentVideoSnippet({\n          id: item.id,\n          title: item.snippet.title,\n          channelTitle: item.snippet.channelTitle,\n          maxThumbnail: `https://img.youtube.com/vi/${item.id}/maxresdefault.jpg`,\n          sdThumbnail: `https://img.youtube.com/vi/${item.id}/sddefault.jpg`\n          // this is the url of the max resolution of thumbnail\n        });\n      });\n  };\n\n  if (!currentVideoSnippet.id) {\n    return null;\n  }\n\n  return (\n    <div\n      // drag=\"y\"\n      // dragConstraints={{ top: 0, bottom: 600 }}\n      ref={containerRef}\n      // style={playerStyle}\n      onClick={expandPlayer}\n      className={\"mediaPlayerContainer \" + returnMinMaxClass()}\n    >\n      {returnMaximizedPlayer()}\n      {returnMinimizedPlayer()}\n      <audio\n        // onTimeUpdate={timeUpdate}\n        onLoadStart={() => {\n          setAudioState(\"loading\");\n        }}\n        id=\"audio-element\"\n        onLoadedData={updateSongDB}\n        // crossOrigin=\"anonymous\"\n        onPlay={() => setAudioState(\"playing\")}\n        onPlaying={() => setAudioState(\"playing\")}\n        onPause={() => setAudioState(\"paused\")}\n        onEnded={songEnded}\n        autoPlay\n        ref={audioPlayer}\n        // type=\"audio/mp4\"\n      />\n    </div>\n  );\n};\n\nexport default MainPlayer;\n"]},"metadata":{},"sourceType":"module"}