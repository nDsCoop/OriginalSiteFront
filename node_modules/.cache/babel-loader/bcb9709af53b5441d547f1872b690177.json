{"ast":null,"code":"var _jsxFileName = \"C:\\\\myProJects\\\\Server\\\\weatherapp\\\\src\\\\components\\\\Chat.js\";\nimport React, { useState, useEffect } from 'react';\nimport DragDrop from './DragDrop';\n\nconst Chat = props => {\n  const [message, setMessage] = useState('');\n  const [user, setUser] = useState({\n    uid: 0\n  });\n  const [imageZoom, setImageZoom] = useState(false);\n  const [selectedImage, setSelectedImage] = useState('');\n\n  const scrollToBottom = () => {\n    const chat = document.getElementById(\"chatList\");\n    chat.scrollTop = chat.scrollHeight;\n  };\n\n  useEffect(() => {\n    scrollToBottom();\n    setUser({\n      uid: props.user.uid,\n      name: props.user.name\n    });\n  }, [props]);\n\n  const sendMessage = msg => {\n    props.sendMessage(msg);\n    scrollToBottom();\n  };\n\n  const handleSubmit = event => {\n    if (message === '') return;\n    event.preventDefault();\n    sendMessage({\n      type: 'text',\n      message: {\n        id: user.uid,\n        sender: {\n          uid: user.uid,\n          name: user.name\n        },\n        data: {\n          text: message\n        }\n      }\n    });\n    setMessage('');\n  };\n\n  const handleChange = event => {\n    setMessage(event.target.value);\n  };\n\n  const renderMessage = (userType, data) => {\n    console.log('===========', data);\n    const message = data.message;\n    const msgDiv = data.type === 'text' && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"msg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }\n    }, message.sender.name), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"message\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }\n    }, \" \", message.data.text)) || /*#__PURE__*/React.createElement(\"div\", {\n      className: \"msg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }\n    }, message.sender.name), /*#__PURE__*/React.createElement(\"img\", {\n      onClick: () => {\n        setImageZoom(true);\n        setSelectedImage(message.data);\n      },\n      className: \"message\",\n      style: {\n        width: 200,\n        // height: 100\n        cursor: 'pointer'\n      },\n      src: message.data,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }\n    }));\n    return /*#__PURE__*/React.createElement(\"li\", {\n      className: userType,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }\n    }, msgDiv);\n  };\n\n  const showEnlargedImage = data => {\n    return /*#__PURE__*/React.createElement(\"img\", {\n      src: data,\n      style: {\n        backgroundColor: 'black',\n        position: 'relative',\n        zIndex: 100,\n        display: 'block',\n        cursor: 'pointer',\n        marginLeft: 'auto',\n        marginRight: 'auto',\n        padding: 20,\n        borderRadius: 20\n      },\n      onClick: () => setImageZoom(false),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 5\n    }\n  }, imageZoom && showEnlargedImage(selectedImage), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chatWindow\",\n    style: {\n      zIndex: 10,\n      position: 'absolute',\n      right: 5,\n      top: 190,\n      bottom: 140,\n      width: 350 // height: 650,\n\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"chat\",\n    id: \"chatList\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }, props.messages.map(data => /*#__PURE__*/React.createElement(\"div\", {\n    key: data.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }\n  }, user.uid === data.message.sender.uid ? renderMessage('self', data) : renderMessage('other', data)))), /*#__PURE__*/React.createElement(DragDrop, {\n    className: \"chatInputWrapper\",\n    sendFiles: files => {\n      const reader = new FileReader();\n\n      reader.onload = e => {\n        //https://blog.mozilla.org/webrtc/large-data-channel-messages/\n        //https://lgrahl.de/articles/demystifying-webrtc-dc-size-limit.html\n        const maximumMessageSize = 262118; //65535 <=== 64KiB // 16384 <=== 16KiB to be safe\n\n        if (e.target.result.length <= maximumMessageSize) sendMessage({\n          type: 'image',\n          message: {\n            id: user.uid,\n            sender: {\n              uid: user.uid,\n              name: user.name\n            },\n            data: e.target.result\n          }\n        });else alert('Message exceeds Maximum Message Size!');\n      };\n\n      reader.readAsDataURL(files[0]);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"textarea input\",\n    type: \"text\",\n    backgroundColor: \"rgba(0,0,0,0.3)\",\n    color: \"rgba(199, 159, 199, 0.9)\",\n    placeholder: \"Type your message..\",\n    onChange: handleChange,\n    value: message,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 15\n    }\n  }))))));\n};\n\nexport default Chat;","map":{"version":3,"sources":["C:/myProJects/Server/weatherapp/src/components/Chat.js"],"names":["React","useState","useEffect","DragDrop","Chat","props","message","setMessage","user","setUser","uid","imageZoom","setImageZoom","selectedImage","setSelectedImage","scrollToBottom","chat","document","getElementById","scrollTop","scrollHeight","name","sendMessage","msg","handleSubmit","event","preventDefault","type","id","sender","data","text","handleChange","target","value","renderMessage","userType","console","log","msgDiv","width","cursor","showEnlargedImage","backgroundColor","position","zIndex","display","marginLeft","marginRight","padding","borderRadius","right","top","bottom","messages","map","files","reader","FileReader","onload","e","maximumMessageSize","result","length","alert","readAsDataURL"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport DragDrop from './DragDrop'\r\n\r\nconst Chat = props => {\r\n  const [message, setMessage] = useState('')\r\n  const [user, setUser] = useState({ uid: 0, })\r\n  const [imageZoom, setImageZoom] = useState(false)\r\n  const [selectedImage, setSelectedImage] = useState('')\r\n\r\n  const scrollToBottom = () => {\r\n    const chat = document.getElementById(\"chatList\");\r\n    chat.scrollTop = chat.scrollHeight\r\n  }\r\n\r\n  useEffect(() => {\r\n    scrollToBottom()\r\n    setUser({ \r\n      uid: props.user.uid,\r\n      name: props.user.name,\r\n     })\r\n  }, [props])\r\n\r\n  const sendMessage = (msg) => {\r\n    props.sendMessage(msg);\r\n    scrollToBottom()\r\n  }\r\n\r\n  const handleSubmit = event => {\r\n    if (message === '') return\r\n    event.preventDefault();\r\n    sendMessage({type:'text', message: { id: user.uid, sender: {uid: user.uid, name: user.name, }, data: { text: message } }})\r\n    setMessage('')\r\n  };\r\n\r\n  const handleChange = event => {\r\n    setMessage(event.target.value)\r\n  }\r\n\r\n  const renderMessage = (userType, data) => {\r\n    console.log('===========', data)\r\n    const message = data.message\r\n\r\n    const msgDiv = data.type === 'text' && (\r\n      <div className=\"msg\">\r\n        <p>{message.sender.name}</p>\r\n        <div className=\"message\"> {message.data.text}</div>\r\n      </div>\r\n    ) || (\r\n      <div className=\"msg\">\r\n        <p>{message.sender.name}</p>\r\n        <img\r\n          onClick={() => {\r\n            setImageZoom(true)\r\n            setSelectedImage(message.data)\r\n          }}\r\n          className=\"message\"\r\n          style={{\r\n            width: 200,\r\n            // height: 100\r\n            cursor: 'pointer',\r\n          }}\r\n          src={message.data} />\r\n      </div>\r\n    )\r\n\r\n    return (<li className={userType} >{ msgDiv }</li>)\r\n\r\n  }\r\n\r\n  const showEnlargedImage = (data) => {\r\n    return (<img\r\n      src={data}\r\n      style={{\r\n        backgroundColor: 'black',\r\n        position: 'relative',\r\n        zIndex: 100,\r\n        display: 'block',\r\n        cursor: 'pointer',\r\n        marginLeft: 'auto',\r\n        marginRight: 'auto',\r\n        padding: 20,\r\n        borderRadius: 20,\r\n      }}\r\n      onClick={() => setImageZoom(false)}\r\n    />)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {imageZoom && showEnlargedImage(selectedImage)}\r\n\r\n      <div className=\"chatWindow\" style={{\r\n        zIndex: 10,\r\n        position: 'absolute',\r\n        right: 5,\r\n        top: 190,\r\n        bottom: 140,\r\n        width: 350,\r\n        // height: 650,\r\n    }}>\r\n        <ul className=\"chat\" id=\"chatList\">\r\n          {props.messages.map(data => (\r\n            <div key={data.id}>\r\n              {user.uid === data.message.sender.uid ? renderMessage('self', data) : (renderMessage('other', data))}\r\n            </div>\r\n          ))}\r\n        </ul>\r\n        <DragDrop\r\n          className=\"chatInputWrapper\"\r\n          sendFiles={(files) => {\r\n            const reader = new FileReader()\r\n            reader.onload = (e) => {\r\n              //https://blog.mozilla.org/webrtc/large-data-channel-messages/\r\n              //https://lgrahl.de/articles/demystifying-webrtc-dc-size-limit.html\r\n              const maximumMessageSize = 262118 //65535 <=== 64KiB // 16384 <=== 16KiB to be safe\r\n              if (e.target.result.length <= maximumMessageSize)\r\n                sendMessage({ type: 'image', message: { id: user.uid, sender: { uid: user.uid, name: user.name, }, data: e.target.result } })\r\n              else\r\n                alert('Message exceeds Maximum Message Size!')\r\n            }\r\n\r\n            reader.readAsDataURL(files[0])\r\n          }}\r\n        >\r\n          <div>\r\n            <form onSubmit={handleSubmit}>\r\n              <input\r\n                className=\"textarea input\"\r\n                type=\"text\"\r\n                backgroundColor=\"rgba(0,0,0,0.3)\"\r\n                color=\"rgba(199, 159, 199, 0.9)\"\r\n                placeholder=\"Type your message..\"\r\n                onChange={handleChange}\r\n                value={message}\r\n              />\r\n            </form>\r\n          </div>\r\n        </DragDrop>\r\n      </div>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default Chat"]},"metadata":{},"sourceType":"module"}