{"ast":null,"code":"import _createForOfIteratorHelper from\"C:\\\\myProJects\\\\Server\\\\weatherapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createForOfIteratorHelper\";import _classCallCheck from\"C:\\\\myProJects\\\\Server\\\\weatherapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\myProJects\\\\Server\\\\weatherapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"C:\\\\myProJects\\\\Server\\\\weatherapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"C:\\\\myProJects\\\\Server\\\\weatherapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React,{Component}from'react';var AudioVisualiser=/*#__PURE__*/function(_Component){_inherits(AudioVisualiser,_Component);var _super=_createSuper(AudioVisualiser);function AudioVisualiser(props){var _this;_classCallCheck(this,AudioVisualiser);_this=_super.call(this,props);_this.canvas=React.createRef();return _this;}_createClass(AudioVisualiser,[{key:\"componentDidUpdate\",value:function componentDidUpdate(){this.draw();}},{key:\"draw\",value:function draw(){var audioData=this.props.audioData;var canvas=this.canvas.current;var height=canvas.height;var width=canvas.width;var context=canvas.getContext('2d');var x=0;var sliceWidth=width*1.0/audioData.length;context.lineWidth=1.68;context.strokeStyle='rgba(199, 119, 199, 0.9)';context.clearRect(0,0,width,height);context.beginPath();context.moveTo(0,height/2);var _iterator=_createForOfIteratorHelper(audioData),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var item=_step.value;var y=item/255.0*height;context.lineTo(x,y);x+=sliceWidth;}}catch(err){_iterator.e(err);}finally{_iterator.f();}context.lineTo(x,height/2);context.stroke();}},{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(\"canvas\",{width:\"1250px\",height:\"400px\",ref:this.canvas});}}]);return AudioVisualiser;}(Component);export default AudioVisualiser;","map":{"version":3,"sources":["C:/myProJects/Server/weatherapp/src/components/library/AudioVisualiser.js"],"names":["React","Component","AudioVisualiser","props","canvas","createRef","draw","audioData","current","height","width","context","getContext","x","sliceWidth","length","lineWidth","strokeStyle","clearRect","beginPath","moveTo","item","y","lineTo","stroke"],"mappings":"8xBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,C,GAEMC,CAAAA,e,kHACJ,yBAAYC,KAAZ,CAAmB,iDACjB,uBAAMA,KAAN,EACA,MAAKC,MAAL,CAAcJ,KAAK,CAACK,SAAN,EAAd,CAFiB,aAGlB,C,2FACoB,CACnB,KAAKC,IAAL,GACD,C,mCAEM,IACGC,CAAAA,SADH,CACiB,KAAKJ,KADtB,CACGI,SADH,CAEL,GAAMH,CAAAA,MAAM,CAAG,KAAKA,MAAL,CAAYI,OAA3B,CACA,GAAMC,CAAAA,MAAM,CAAGL,MAAM,CAACK,MAAtB,CACA,GAAMC,CAAAA,KAAK,CAAGN,MAAM,CAACM,KAArB,CACA,GAAMC,CAAAA,OAAO,CAAGP,MAAM,CAACQ,UAAP,CAAkB,IAAlB,CAAhB,CACA,GAAIC,CAAAA,CAAC,CAAG,CAAR,CACA,GAAMC,CAAAA,UAAU,CAAIJ,KAAK,CAAG,GAAT,CAAgBH,SAAS,CAACQ,MAA7C,CACAJ,OAAO,CAACK,SAAR,CAAoB,IAApB,CACAL,OAAO,CAACM,WAAR,CAAsB,0BAAtB,CACAN,OAAO,CAACO,SAAR,CAAkB,CAAlB,CAAqB,CAArB,CAAwBR,KAAxB,CAA+BD,MAA/B,EAEAE,OAAO,CAACQ,SAAR,GACAR,OAAO,CAACS,MAAR,CAAe,CAAf,CAAkBX,MAAM,CAAG,CAA3B,EAbK,yCAccF,SAdd,YAcL,+CAA8B,IAAnBc,CAAAA,IAAmB,aAC5B,GAAMC,CAAAA,CAAC,CAAID,IAAI,CAAG,KAAR,CAAiBZ,MAA3B,CACAE,OAAO,CAACY,MAAR,CAAeV,CAAf,CAAkBS,CAAlB,EACAT,CAAC,EAAIC,UAAL,CACD,CAlBI,qDAmBLH,OAAO,CAACY,MAAR,CAAeV,CAAf,CAAkBJ,MAAM,CAAG,CAA3B,EACAE,OAAO,CAACa,MAAR,GACD,C,uCAEQ,CACP,mBAAO,8BAAQ,KAAK,CAAC,QAAd,CAAuB,MAAM,CAAC,OAA9B,CAAsC,GAAG,CAAE,KAAKpB,MAAhD,EAAP,CAED,C,6BAnC2BH,S,EAsC9B,cAAeC,CAAAA,eAAf","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass AudioVisualiser extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.canvas = React.createRef();\r\n  }\r\n  componentDidUpdate() {\r\n    this.draw();\r\n  }\r\n\r\n  draw() {\r\n    const { audioData } = this.props;\r\n    const canvas = this.canvas.current;\r\n    const height = canvas.height;\r\n    const width = canvas.width;\r\n    const context = canvas.getContext('2d');\r\n    let x = 0;\r\n    const sliceWidth = (width * 1.0) / audioData.length;\r\n    context.lineWidth = 1.68;\r\n    context.strokeStyle = 'rgba(199, 119, 199, 0.9)';\r\n    context.clearRect(0, 0, width, height);\r\n\r\n    context.beginPath();\r\n    context.moveTo(0, height / 2);\r\n    for (const item of audioData) {\r\n      const y = (item / 255.0) * height;\r\n      context.lineTo(x, y);\r\n      x += sliceWidth;\r\n    }\r\n    context.lineTo(x, height / 2);\r\n    context.stroke();\r\n  }\r\n \r\n  render() {\r\n    return <canvas width=\"1250px\" height=\"400px\" ref={this.canvas}>\r\n    </canvas>;\r\n  }\r\n}\r\n\r\nexport default AudioVisualiser;"]},"metadata":{},"sourceType":"module"}