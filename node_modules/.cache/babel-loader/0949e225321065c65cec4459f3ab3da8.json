{"ast":null,"code":"var _jsxFileName = \"C:\\\\myProJects\\\\Server\\\\weatherapp\\\\src\\\\components\\\\aboutApp\\\\FeedbackApp.js\";\nimport React from \"react\";\nimport { // FormControl,\nTextField, Button, Grid // CircularProgress,\n, LinearProgress, Typography, Divider } from \"@material-ui/core\";\nimport { loadReCaptcha, ReCaptcha } from \"react-recaptcha-v3\";\nimport axios from \"../../apis/axios\"; // import { GlobalContext } from \"../GlobalState\";\n\nlet captchaToken;\n\nconst FeedbackApp = () => {\n  // const [{}, dispatch] = useContext(GlobalContext);\n  // const setSnackbarMsg = React.useCallback(\n  //   data => {\n  //     dispatch({ type: \"setSnackbarMsg\", snippet: data });\n  //   },\n  //   [dispatch]\n  // );\n  const [isFormActive, setIsFormActive] = React.useState(false);\n  const [isEmail, setIsEmail] = React.useState(false);\n  const [isSending, setIsSending] = React.useState(false);\n  const formEl = React.useRef(null);\n  const formElEmail = React.useRef(null);\n\n  const submitFormEmail = async e => {\n    setIsSending(true);\n    const formData = new FormData(formElEmail.current);\n    const name = formData.get(\"name\");\n    const email = formData.get(\"email\");\n    const message = formData.get(\"message\");\n    e.preventDefault();\n    const post = {\n      email: email,\n      message: message,\n      token: captchaToken,\n      name: name\n    };\n    await axios.post('/ndsapi/mail', post).then(function (response) {\n      console.log(response.data.status); // console.log(response.data.message);\n      // also clear the form\n\n      alert(\"Your Message Sent\");\n      formElEmail.current.reset(); // setSnackbarMsg(response.data.status);\n\n      setIsSending(false);\n    }).catch(function (error) {\n      // console.log(error.response.status);\n      if (error.response) {\n        if (error.response.status === 429) {\n          formElEmail.current.reset();\n          alert(\"Message failed to send please try again\"); // setSnackbarMsg(\"We accept limited feedback!\");\n        }\n      }\n\n      setIsSending(false);\n    }); //   const response = await fetch(\"http://localhost:9150\", { \n    //     method: 'POST', \n    //     headers: { \n    //         'Content-type': 'application/json'\n    //     }, \n    //     body: JSON.stringify({email, message, token}) \n    //   }); \n    //     const resData = await response.json(); \n    //     if (resData.status === 'success'){\n    //       setIsSending(false);\n    //       formElEmail.current.reset();\n    //       this.resetForm()\n    //   }else if(resData.status === 'fail'){\n    //       setIsSending(false);\n    //   }\n  };\n\n  const submitForm = async e => {\n    // set state to sending\n    setIsSending(true);\n    const formData = new FormData(formEl.current);\n    const name = formData.get(\"name\");\n    const email = formData.get(\"email\");\n    const message = formData.get(\"message\");\n    e.preventDefault();\n    const post = {\n      name: name,\n      email: email,\n      message: message,\n      token: captchaToken,\n      timestamp: new Date()\n    };\n    await axios.post('/ndsapi/feedback', post).then(function (response) {\n      console.log(response.data.status);\n      console.log(response.data.message); // also clear the form\n\n      formEl.current.reset();\n      alert(\"Your Message Sent\"); // setSnackbarMsg(response.data.status);\n\n      setIsSending(false);\n    }).catch(function (error) {\n      // console.log(error.response.status);\n      if (error.response) {\n        if (error.response.status === 429) {\n          formEl.current.reset();\n          alert(\"Message failed to send please try again\"); // setSnackbarMsg(\"We accept limited feedback!\");\n        }\n      }\n\n      setIsSending(false);\n    });\n  };\n\n  React.useEffect(() => {\n    loadReCaptcha(\"6Le1toEUAAAAAITyNwqEMaz3hFAYzciSJDMomrgN\");\n  }, []);\n\n  const verifyCallback = token => {\n    console.log(token);\n    captchaToken = token;\n    const captchaBox = document.querySelector(\".grecaptcha-badge\");\n    captchaBox.remove(); // remove captcha badge\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"privacy-app\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h4\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 9\n    }\n  }, \"Feedbacks\", \" \")), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"header-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 9\n    }\n  }, \"B\\u1EA1n c\\xF3 c\\xE2u h\\u1ECFi ho\\u1EB7c b\\u1EA5t k\\u1EF3 \\u0111\\xF3ng g\\xF3p v\\u1EC1 vi\\u1EC7c s\\u1EED d\\u1EE5ng \\u1EE9ng d\\u1EE5ng, d\\u1ECBch v\\u1EE5 ho\\u1EB7c b\\xE1o c\\xE1o l\\u1ED7i ho\\u1EB7c vi ph\\u1EA1m ng\\u01B0\\u1EDDi d\\xF9ng h\\xE3y g\\u1EEDi v\\u1EC1 ch\\xFAng t\\xF4i ngay\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 9\n    }\n  }), \"(We are always ready to receive feedback from users about issues that need to be completed or errors occurring when the App is running but the development team has not fixed it.) Ch\\xFAng t\\xF4i hoan ngh\\xEAnh v\\xE0 b\\u1EA1n vui l\\xF2ng kh\\xF4ng g\\u1EEDi c\\xE1c th\\xF4ng tin nh\\u1EA1y c\\u1EA3m, b\\u1EA1o l\\u1EF1c. Ti\\u1EBFp t\\u1EE5c v\\u1EDBi 2 c\\xE1ch b\\xEAn d\\u01B0\\u1EDBi\"), \"(Report of usage violations that users respond to. There are 2 methods for users to talk to the development team)\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"i\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 9\n    }\n  }, \"S\\u1EED d\\u1EE5ng email c\\u1EE7a b\\u1EA1n \\u0111\\u1EC3 nh\\u1EADn \\u0111\\u01B0\\u1EE3c s\\u1EF1 h\\u1ED7 tr\\u1EE3 t\\u1ED1t nh\\u1EA5t c\\u1EE7a ch\\xFAng t\\xF4i(Khuy\\u1EBFn Ngh\\u1ECB D\\xF9ng)\"), \"(Use your email to get the most support from us (Recommended))\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"buttons-send\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    style: {\n      marginTop: \"10px\"\n    },\n    variant: \"outlined\",\n    color: \"primary\",\n    type: \"button\",\n    disabled: isEmail ? false : true // onClick = {setIsEmail(false), setIsFormActive(true)}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 9\n    }\n  }, \"Via Server\"), /*#__PURE__*/React.createElement(Button, {\n    style: {\n      marginTop: \"10px\"\n    },\n    variant: \"outlined\",\n    color: \"primary\",\n    type: \"button\",\n    disabled: isEmail ? true : false // onClick = {setIsEmail(true), setIsFormActive(true)}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 9\n    }\n  }, \"Via Email\")), isFormActive ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 24\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    component: \"form\" // ref={ isEmail ? formElEmail : formEl }\n    // onSubmit={ isEmail ? submitFormEmail : submitForm}\n    ,\n    container: true,\n    required: true,\n    justify: \"center\",\n    style: {\n      width: \"100%\",\n      margin: \"0 auto\",\n      padding: '1rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ReCaptcha, {\n    sitekey: \"6Le1toEUAAAAAITyNwqEMaz3hFAYzciSJDMomrgN\",\n    action: \"action_name\",\n    verifyCallback: verifyCallback,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    id: \"outlined-email-input\",\n    label: \"Name\",\n    type: \"text\",\n    name: \"name\",\n    autoComplete: \"name\",\n    margin: \"normal\",\n    variant: \"outlined\",\n    fullWidth: true,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    id: \"outlined-email-input\",\n    label: \"Email\",\n    type: \"email\",\n    name: \"email\",\n    autoComplete: \"email\",\n    margin: \"normal\",\n    variant: \"outlined\",\n    fullWidth: true,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    id: \"outlined-email-input\",\n    label: \"Feedback\",\n    multiline: true,\n    rows: \"4\",\n    type: \"text\",\n    name: \"message\",\n    autoComplete: \"feedback\",\n    margin: \"normal\",\n    variant: \"outlined\",\n    fullWidth: true,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 11\n    }\n  }), isSending ? /*#__PURE__*/React.createElement(LinearProgress, {\n    style: {\n      width: \"100%\",\n      transform: \"translateY(-12px)\",\n      borderRadius: \"2px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 13\n    }\n  }) : null, /*#__PURE__*/React.createElement(Button, {\n    style: {\n      marginTop: \"10px\"\n    },\n    variant: \"outlined\",\n    color: \"primary\",\n    type: \"submit\",\n    disabled: isSending ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 11\n    }\n  }, isSending ? \"Sending\" : \"Send\", \" \", \" \", isEmail ? \"to Email\" : \"to Server\"))) : null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"deliver\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default FeedbackApp;","map":{"version":3,"sources":["C:/myProJects/Server/weatherapp/src/components/aboutApp/FeedbackApp.js"],"names":["React","TextField","Button","Grid","LinearProgress","Typography","Divider","loadReCaptcha","ReCaptcha","axios","captchaToken","FeedbackApp","isFormActive","setIsFormActive","useState","isEmail","setIsEmail","isSending","setIsSending","formEl","useRef","formElEmail","submitFormEmail","e","formData","FormData","current","name","get","email","message","preventDefault","post","token","then","response","console","log","data","status","alert","reset","catch","error","submitForm","timestamp","Date","useEffect","verifyCallback","captchaBox","document","querySelector","remove","marginTop","width","margin","padding","transform","borderRadius"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {\r\n  // FormControl,\r\n  TextField,\r\n  Button,\r\n  Grid,\r\n  // CircularProgress,\r\n  LinearProgress,\r\n  Typography,\r\n  Divider\r\n} from \"@material-ui/core\";\r\nimport { loadReCaptcha, ReCaptcha } from \"react-recaptcha-v3\";\r\nimport axios from \"../../apis/axios\";\r\n// import { GlobalContext } from \"../GlobalState\";\r\n\r\nlet captchaToken;\r\nconst FeedbackApp = () => {\r\n  // const [{}, dispatch] = useContext(GlobalContext);\r\n\r\n  // const setSnackbarMsg = React.useCallback(\r\n  //   data => {\r\n  //     dispatch({ type: \"setSnackbarMsg\", snippet: data });\r\n  //   },\r\n  //   [dispatch]\r\n  // );\r\n  const [isFormActive, setIsFormActive] = React.useState(false);\r\n  const [isEmail, setIsEmail] = React.useState(false);\r\n  const [isSending, setIsSending] = React.useState(false);\r\n  const formEl = React.useRef(null);\r\n  const formElEmail = React.useRef(null);\r\n  const submitFormEmail = async (e) => {\r\n    setIsSending(true);\r\n    const formData = new FormData(formElEmail.current);\r\n    const name = formData.get(\"name\");\r\n    const email = formData.get(\"email\");\r\n    const message = formData.get(\"message\");\r\n    \r\n    e.preventDefault();\r\n    const post = {\r\n      email: email,\r\n      message: message,\r\n      token: captchaToken,\r\n      name: name,\r\n      }\r\n      await axios\r\n      .post('/ndsapi/mail', post)\r\n      .then(function(response) {\r\n        console.log(response.data.status);\r\n        // console.log(response.data.message);\r\n        // also clear the form\r\n        alert(\"Your Message Sent\"); \r\n        formElEmail.current.reset();\r\n        // setSnackbarMsg(response.data.status);\r\n        setIsSending(false);\r\n      })\r\n      .catch(function(error) {\r\n        // console.log(error.response.status);\r\n        if (error.response) {\r\n          if (error.response.status === 429) {\r\n            formElEmail.current.reset();\r\n            alert(\"Message failed to send please try again\")\r\n            // setSnackbarMsg(\"We accept limited feedback!\");\r\n          }\r\n        }\r\n        setIsSending(false);\r\n      });\r\n  //   const response = await fetch(\"http://localhost:9150\", { \r\n  //     method: 'POST', \r\n  //     headers: { \r\n  //         'Content-type': 'application/json'\r\n  //     }, \r\n  //     body: JSON.stringify({email, message, token}) \r\n  //   }); \r\n  //     const resData = await response.json(); \r\n  //     if (resData.status === 'success'){\r\n  //       setIsSending(false);\r\n  //       formElEmail.current.reset();\r\n       \r\n  //       this.resetForm()\r\n  //   }else if(resData.status === 'fail'){\r\n  //       setIsSending(false);\r\n        \r\n        \r\n  //   }\r\n\r\n  }\r\n\r\n  const submitForm = async (e) => {\r\n    // set state to sending\r\n    setIsSending(true);\r\n    const formData = new FormData(formEl.current);\r\n    const name = formData.get(\"name\");\r\n    const email = formData.get(\"email\");\r\n    const message = formData.get(\"message\");\r\n\r\n    e.preventDefault();\r\n\r\n    const post = {\r\n      name: name,\r\n      email: email,\r\n      message: message,\r\n      token: captchaToken,\r\n      timestamp: new Date(),\r\n      }\r\n\r\n    await axios\r\n          .post('/ndsapi/feedback', post)\r\n          .then(function(response) {\r\n            console.log(response.data.status);\r\n            console.log(response.data.message);\r\n            // also clear the form\r\n            formEl.current.reset();\r\n            alert(\"Your Message Sent\");\r\n            // setSnackbarMsg(response.data.status);\r\n            setIsSending(false);\r\n          })\r\n          .catch(function(error) {\r\n            // console.log(error.response.status);\r\n            if (error.response) {\r\n              if (error.response.status === 429) {\r\n                formEl.current.reset();\r\n                alert(\"Message failed to send please try again\")\r\n                // setSnackbarMsg(\"We accept limited feedback!\");\r\n              }\r\n            }\r\n            setIsSending(false);\r\n          });\r\n      };\r\n\r\n  React.useEffect(() => {\r\n    loadReCaptcha(\"6Le1toEUAAAAAITyNwqEMaz3hFAYzciSJDMomrgN\");\r\n  }, []);\r\n\r\n  const verifyCallback = token => {\r\n    console.log(token);\r\n    captchaToken = token;\r\n    const captchaBox = document.querySelector(\".grecaptcha-badge\");\r\n    captchaBox.remove();\r\n    // remove captcha badge\r\n  };\r\n\r\n  return (\r\n    <div className=\"privacy-app\">\r\n      <header>\r\n        <Typography variant=\"h4\" gutterBottom={true}>\r\n            Feedbacks{\" \"}\r\n        </Typography>\r\n      </header>\r\n      <Divider />\r\n      <br />\r\n      <div className=\"header-feedback\">\r\n        <p>Bạn có câu hỏi hoặc bất kỳ đóng góp về việc sử dụng ứng dụng, dịch vụ hoặc báo cáo lỗi hoặc vi phạm người dùng hãy gửi về chúng tôi ngay \r\n        <br/>(We are always ready to receive feedback from users about issues that need to be completed or errors occurring when the App is running but the development team has not fixed it.)\r\n        Chúng tôi hoan nghênh và bạn vui lòng không gửi các thông tin nhạy cảm, bạo lực. Tiếp tục với 2 cách bên dưới</p>\r\n        (Report of usage violations that users respond to. There are 2 methods for users to talk to the development team)\r\n        <br /><br />\r\n        <i>Sử dụng email của bạn để nhận được sự hỗ trợ tốt nhất của chúng tôi(Khuyến Nghị Dùng)</i> \r\n        (Use your email to get the most support from us (Recommended))      \r\n      </div>\r\n      <div className=\"buttons-send\">\r\n        <Button\r\n            style={{ marginTop: \"10px\" }}\r\n            variant=\"outlined\"\r\n            color=\"primary\"\r\n            type=\"button\"\r\n            disabled={isEmail ? false : true}\r\n            // onClick = {setIsEmail(false), setIsFormActive(true)}\r\n        >\r\n          {/* if sending is true then show circular progress */}\r\n         Via Server\r\n        </Button>\r\n        <Button\r\n            style={{ marginTop: \"10px\" }}\r\n            variant=\"outlined\"\r\n            color=\"primary\"\r\n            type=\"button\"\r\n            disabled={isEmail ? true : false}\r\n            // onClick = {setIsEmail(true), setIsFormActive(true)}\r\n        >\r\n          {/* if sending is true then show circular progress */}\r\n          Via Email\r\n        </Button>\r\n      </div>\r\n      {\r\n        isFormActive ? <div className=\"form-feedback\">\r\n        <Grid\r\n          component=\"form\"\r\n          // ref={ isEmail ? formElEmail : formEl }\r\n          // onSubmit={ isEmail ? submitFormEmail : submitForm}\r\n          container\r\n          required\r\n          justify=\"center\"\r\n          style={{ width: \"100%\", margin: \"0 auto\", padding: '1rem' }}\r\n        >\r\n          <ReCaptcha\r\n            sitekey=\"6Le1toEUAAAAAITyNwqEMaz3hFAYzciSJDMomrgN\"\r\n            action=\"action_name\"\r\n            verifyCallback={verifyCallback}\r\n          />\r\n          <TextField\r\n            id=\"outlined-email-input\"\r\n            label=\"Name\"\r\n            type=\"text\"\r\n            name=\"name\"\r\n            autoComplete=\"name\"\r\n            margin=\"normal\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            required\r\n          />\r\n          <TextField\r\n            id=\"outlined-email-input\"\r\n            label=\"Email\"\r\n            type=\"email\"\r\n            name=\"email\"\r\n            autoComplete=\"email\"\r\n            margin=\"normal\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            required\r\n          />\r\n          <TextField\r\n            id=\"outlined-email-input\"\r\n            label=\"Feedback\"\r\n            multiline\r\n            rows=\"4\"\r\n            type=\"text\"\r\n            name=\"message\"\r\n            autoComplete=\"feedback\"\r\n            margin=\"normal\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            required\r\n          />\r\n          {isSending ? (\r\n            <LinearProgress\r\n              style={{\r\n                width: \"100%\",\r\n                transform: \"translateY(-12px)\",\r\n                borderRadius: \"2px\"\r\n              }}\r\n            />\r\n          ) : null}\r\n          <Button\r\n            style={{ marginTop: \"10px\" }}\r\n            variant=\"outlined\"\r\n            color=\"primary\"\r\n            type=\"submit\"\r\n            disabled={isSending ? true : false}\r\n          >\r\n            {/* if sending is true then show circular progress */}\r\n            {isSending ? \"Sending\" : \"Send\"}{\" \"} {isEmail ? \"to Email\" : \"to Server\"}\r\n          </Button>\r\n        </Grid>\r\n      </div>\r\n      : null\r\n      } \r\n      \r\n      <div className=\"deliver\"></div>\r\n     \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FeedbackApp;\r\n"]},"metadata":{},"sourceType":"module"}