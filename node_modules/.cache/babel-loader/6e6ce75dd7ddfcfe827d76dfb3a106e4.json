{"ast":null,"code":"var _jsxFileName = \"C:\\\\myProJects\\\\Server\\\\weatherapp\\\\src\\\\components\\\\library\\\\AudioGet.js\";\nimport React, { Component } from 'react';\n\nclass AudioGet extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getAudio = mediaRecorder => {\n      mediaRecorder.onstop = function (e) {\n        const blob = new Blob(chunks, {\n          'type': 'audio/ogg',\n          'lastModified': new Date(),\n          'name': new ObjectID().toString(),\n          'path': new ObjectID().toString()\n        });\n      };\n\n      mediaRecorder.ondataavailable = function (e) {\n        console.log('Final: ', e.data);\n        console.log(\"Pressed btn stop record!\");\n      };\n\n      this.state.audio.getTracks().forEach(track => {\n        console.log(track);\n        track.stop();\n      });\n      this.setState({\n        audio: null\n      });\n    };\n\n    this.toggleMicrophone = () => {\n      if (!showGetAudi) {\n        this.getMicrophone();\n      }\n    };\n\n    this.onClickOutSide = e => {\n      if (this.ref && !this.ref.contains(e.target)) {\n        // console.log(\"Here click out side login form!\");\n        this.stopMicrophone();\n        this.setState({\n          showGetAudi: false\n        });\n      }\n    };\n\n    this.state = {\n      audio: false,\n      showGetAudi: false,\n      temp: 10000\n    };\n  }\n\n  async getMicrophone() {\n    const audio = await navigator.mediaDevices.getUserMedia({\n      audio: true,\n      video: false\n    });\n    this.setState({\n      audio: true\n    });\n    const mediaRecorder = new MediaRecorder(audio);\n    mediaRecorder.start();\n    setTimeout(() => {\n      this.getAudio(mediaRecorder); // this.state.audio.getTracks().forEach(track => track.stop());\n      // this.setState({ audio: null });\n\n      this.setState({\n        temp: 10000\n      });\n    }, this.state.temp);\n  }\n\n  componentDidMount() {\n    window.addEventListener('mousedown', this.onClickOutSide); // this.addTestMessages();\n    // console.log(\"CDidMount\");\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('mousedown', this.onClickOutSide);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, isShowGetAud ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"getAdi\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 26\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 19\n      }\n    }, this.state.audio ? /*#__PURE__*/React.createElement(AudioAnalyser, {\n      audio: this.state.audio,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 39\n      }\n    }) : null)) : null, /*#__PURE__*/React.createElement(IconButton, {\n      onClick: () => this.setState({\n        isShowGetAud: !isShowGetAud\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(CgSoftwareUpload, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 7\n      }\n    })));\n  }\n\n}\n\nexport default AudioGet;","map":{"version":3,"sources":["C:/myProJects/Server/weatherapp/src/components/library/AudioGet.js"],"names":["React","Component","AudioGet","constructor","props","getAudio","mediaRecorder","onstop","e","blob","Blob","chunks","Date","ObjectID","toString","ondataavailable","console","log","data","state","audio","getTracks","forEach","track","stop","setState","toggleMicrophone","showGetAudi","getMicrophone","onClickOutSide","ref","contains","target","stopMicrophone","temp","navigator","mediaDevices","getUserMedia","video","MediaRecorder","start","setTimeout","componentDidMount","window","addEventListener","componentWillUnmount","removeEventListener","render","isShowGetAud"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass AudioGet extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      audio: false,\r\n      showGetAudi: false,\r\n      temp : 10000,\r\n    }\r\n  }\r\n\r\n  async getMicrophone() {\r\n\r\n    const audio = await navigator.mediaDevices.getUserMedia({\r\n      audio: true,\r\n      video: false\r\n    });\r\n    this.setState({ audio: true });\r\n    const mediaRecorder = new MediaRecorder(audio);\r\n    mediaRecorder.start();\r\n   \r\n    setTimeout(() => {\r\n      this.getAudio(mediaRecorder)\r\n      // this.state.audio.getTracks().forEach(track => track.stop());\r\n      // this.setState({ audio: null });\r\n      this.setState({temp : 10000})\r\n\r\n  }, this.state.temp);\r\n}\r\n\r\n  getAudio = (mediaRecorder) => {\r\n    mediaRecorder.onstop = function(e) {\r\n      const blob = new Blob(chunks, { \r\n          'type' : 'audio/ogg',\r\n          'lastModified': new Date(),\r\n          'name': new ObjectID().toString(),\r\n          'path' :new ObjectID().toString(),\r\n   });\r\n     \r\n  }\r\n  mediaRecorder.ondataavailable = function(e) {\r\n   \r\n    console.log('Final: ' ,e.data);\r\n    console.log(\"Pressed btn stop record!\");\r\n    } \r\n\r\n    this.state.audio.getTracks().forEach( track =>{\r\n      console.log(track);\r\n      track.stop();\r\n    });\r\n    this.setState({ audio: null });\r\n\r\n  }\r\n\r\n    \r\n\r\n\r\ntoggleMicrophone = () => {\r\n  if (!showGetAudi) {\r\n    this.getMicrophone();\r\n  } \r\n}\r\n  componentDidMount(){\r\n    window.addEventListener('mousedown', this.onClickOutSide);\r\n    // this.addTestMessages();\r\n    // console.log(\"CDidMount\");\r\n  }\r\n  componentWillUnmount(){\r\n    window.removeEventListener('mousedown', this.onClickOutSide);\r\n  }\r\n  onClickOutSide = (e) => {\r\n    if(this.ref && !this.ref.contains(e.target)){\r\n        // console.log(\"Here click out side login form!\");\r\n        this.stopMicrophone();\r\n        this.setState({\r\n            showGetAudi: false,\r\n        })\r\n    }\r\n}\r\n\r\n  \r\n  render() {\r\n    return(\r\n      <>\r\n       {\r\n          isShowGetAud ? <div className=\"getAdi\">\r\n                  <div>\r\n                  {this.state.audio ? <AudioAnalyser audio={this.state.audio} /> : null}\r\n                  </div>\r\n          </div> : null\r\n      }\r\n      <IconButton onClick = {() => this.setState({isShowGetAud: !isShowGetAud})} >\r\n      <CgSoftwareUpload />\r\n      </IconButton>\r\n      </>\r\n\r\n    ) \r\n  }\r\n}\r\n\r\nexport default AudioGet;"]},"metadata":{},"sourceType":"module"}