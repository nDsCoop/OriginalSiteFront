{"ast":null,"code":"var _jsxFileName = \"C:\\\\myProJects\\\\WeatherApp\\\\weatherapp\\\\src\\\\components\\\\App2.js\";\nimport React, { useEffect, useState, useContext } from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\"; // import SimpleAppBar from \"./header/SimpleAppBar\";\n// import MainPlayer from \"./player/MainPlayer\";\n// import SwipeMenu from \"./SwipeMenu\";\n// import CurrentSection from \"./CurrentSection\";\n// import SnackbarMessage from \"./SnackbarMessage\";\n\nimport { MuiThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\nimport { pink } from \"@material-ui/core/colors\"; // import { useCheckDarkmode } from \"./sections/SettingsPage\";\n\nimport { Context2 } from \"../Context2\";\nconst body = document.querySelector(\"body\");\nconst defaultTheme = {\n  palette: {\n    primary: pink,\n    secondary: {\n      main: \"#fafafa\"\n    }\n  },\n  typography: {\n    useNextVariants: true\n  }\n};\nconst darkTheme = {\n  palette: {\n    type: \"dark\",\n    primary: pink,\n    secondary: {\n      main: \"#fafafa\"\n    }\n  },\n  typography: {\n    useNextVariants: true\n  }\n};\nconst muiDarkTheme = createMuiTheme(darkTheme);\nconst muiDefaultTheme = createMuiTheme(defaultTheme);\n\nconst App2 = () => {\n  const [{\n    themeSelectValue\n  }, dispatch] = useContext(Context2);\n  const {\n    checkDarkMode\n  } = useCheckDarkmode();\n  useEffect(() => {\n    checkDarkMode();\n\n    if (navigator.userAgent.match(/Android/i)) {\n      body.style.overscrollBehavior = \"none\"; // this is to disable pull refresh on android\n    }\n  }, []);\n  useEffect(() => {\n    if (themeSelectValue === \"Dark\") {\n      body.classList.add(\"dark\");\n    } else {\n      body.classList.remove(\"dark\");\n    }\n  }, [themeSelectValue]);\n  return /*#__PURE__*/React.createElement(MuiThemeProvider, {\n    theme: themeSelectValue === \"Dark\" ? muiDarkTheme : muiDefaultTheme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }\n  });\n};\n\nexport default App2;","map":{"version":3,"sources":["C:/myProJects/WeatherApp/weatherapp/src/components/App2.js"],"names":["React","useEffect","useState","useContext","BrowserRouter","Router","Route","MuiThemeProvider","createMuiTheme","pink","Context2","body","document","querySelector","defaultTheme","palette","primary","secondary","main","typography","useNextVariants","darkTheme","type","muiDarkTheme","muiDefaultTheme","App2","themeSelectValue","dispatch","checkDarkMode","useCheckDarkmode","navigator","userAgent","match","style","overscrollBehavior","classList","add","remove"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,QAA+C,kBAA/C,C,CAEA;AACA;AACA;AACA;AACA;;AACA,SAASC,gBAAT,EAA2BC,cAA3B,QAAiD,0BAAjD;AACA,SAASC,IAAT,QAAqB,0BAArB,C,CAEA;;AACA,SAASC,QAAT,QAAyB,aAAzB;AAEA,MAAMC,IAAI,GAAGC,QAAQ,CAACC,aAAT,CAAuB,MAAvB,CAAb;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAE;AACPC,IAAAA,OAAO,EAAEP,IADF;AAEPQ,IAAAA,SAAS,EAAE;AACTC,MAAAA,IAAI,EAAE;AADG;AAFJ,GADU;AAOnBC,EAAAA,UAAU,EAAE;AACVC,IAAAA,eAAe,EAAE;AADP;AAPO,CAArB;AAYA,MAAMC,SAAS,GAAG;AAChBN,EAAAA,OAAO,EAAE;AACPO,IAAAA,IAAI,EAAE,MADC;AAEPN,IAAAA,OAAO,EAAEP,IAFF;AAGPQ,IAAAA,SAAS,EAAE;AACTC,MAAAA,IAAI,EAAE;AADG;AAHJ,GADO;AAQhBC,EAAAA,UAAU,EAAE;AACVC,IAAAA,eAAe,EAAE;AADP;AARI,CAAlB;AAaA,MAAMG,YAAY,GAAGf,cAAc,CAACa,SAAD,CAAnC;AACA,MAAMG,eAAe,GAAGhB,cAAc,CAACM,YAAD,CAAtC;;AAEA,MAAMW,IAAI,GAAG,MAAM;AACjB,QAAM,CAAC;AAAEC,IAAAA;AAAF,GAAD,EAAuBC,QAAvB,IAAmCxB,UAAU,CAACO,QAAD,CAAnD;AAEA,QAAM;AAAEkB,IAAAA;AAAF,MAAoBC,gBAAgB,EAA1C;AAEA5B,EAAAA,SAAS,CAAC,MAAM;AACd2B,IAAAA,aAAa;;AAEb,QAAIE,SAAS,CAACC,SAAV,CAAoBC,KAApB,CAA0B,UAA1B,CAAJ,EAA2C;AACzCrB,MAAAA,IAAI,CAACsB,KAAL,CAAWC,kBAAX,GAAgC,MAAhC,CADyC,CAEzC;AACD;AACF,GAPQ,EAON,EAPM,CAAT;AASAjC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIyB,gBAAgB,KAAK,MAAzB,EAAiC;AAC/Bf,MAAAA,IAAI,CAACwB,SAAL,CAAeC,GAAf,CAAmB,MAAnB;AACD,KAFD,MAEO;AACLzB,MAAAA,IAAI,CAACwB,SAAL,CAAeE,MAAf,CAAsB,MAAtB;AACD;AACF,GANQ,EAMN,CAACX,gBAAD,CANM,CAAT;AAQA,sBACE,oBAAC,gBAAD;AACE,IAAA,KAAK,EAAEA,gBAAgB,KAAK,MAArB,GAA8BH,YAA9B,GAA6CC,eADtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAaD,CAnCD;;AAoCA,eAAeC,IAAf","sourcesContent":["import React, { useEffect, useState, useContext } from \"react\";\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\n\r\n// import SimpleAppBar from \"./header/SimpleAppBar\";\r\n// import MainPlayer from \"./player/MainPlayer\";\r\n// import SwipeMenu from \"./SwipeMenu\";\r\n// import CurrentSection from \"./CurrentSection\";\r\n// import SnackbarMessage from \"./SnackbarMessage\";\r\nimport { MuiThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\r\nimport { pink } from \"@material-ui/core/colors\";\r\n\r\n// import { useCheckDarkmode } from \"./sections/SettingsPage\";\r\nimport { Context2 } from \"../Context2\";\r\n\r\nconst body = document.querySelector(\"body\");\r\n\r\nconst defaultTheme = {\r\n  palette: {\r\n    primary: pink,\r\n    secondary: {\r\n      main: \"#fafafa\"\r\n    }\r\n  },\r\n  typography: {\r\n    useNextVariants: true\r\n  }\r\n};\r\n\r\nconst darkTheme = {\r\n  palette: {\r\n    type: \"dark\",\r\n    primary: pink,\r\n    secondary: {\r\n      main: \"#fafafa\"\r\n    }\r\n  },\r\n  typography: {\r\n    useNextVariants: true\r\n  }\r\n};\r\n\r\nconst muiDarkTheme = createMuiTheme(darkTheme);\r\nconst muiDefaultTheme = createMuiTheme(defaultTheme);\r\n\r\nconst App2 = () => {\r\n  const [{ themeSelectValue }, dispatch] = useContext(Context2);\r\n\r\n  const { checkDarkMode } = useCheckDarkmode();\r\n\r\n  useEffect(() => {\r\n    checkDarkMode();\r\n\r\n    if (navigator.userAgent.match(/Android/i)) {\r\n      body.style.overscrollBehavior = \"none\";\r\n      // this is to disable pull refresh on android\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (themeSelectValue === \"Dark\") {\r\n      body.classList.add(\"dark\");\r\n    } else {\r\n      body.classList.remove(\"dark\");\r\n    }\r\n  }, [themeSelectValue]);\r\n\r\n  return (\r\n    <MuiThemeProvider\r\n      theme={themeSelectValue === \"Dark\" ? muiDarkTheme : muiDefaultTheme}\r\n    >\r\n    {/* //   <Router>\r\n    //     <SimpleAppBar />\r\n    //     <Route component={CurrentSection} />\r\n\r\n    //     <SwipeMenu />\r\n    //   </Router> */}\r\n       \r\n     </MuiThemeProvider>\r\n  );\r\n};\r\nexport default App2;\r\n"]},"metadata":{},"sourceType":"module"}