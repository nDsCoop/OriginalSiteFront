{"ast":null,"code":"var _jsxFileName = \"C:\\\\myProJects\\\\Server\\\\weatherapp\\\\src\\\\components\\\\MainVideo.js\";\nimport React, { Component } from 'react';\nimport io from 'socket.io-client';\nexport class MainVideo extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = () => {\n      this.socket = io('/webrtcPeer', {\n        path: '/webrtc',\n        query: {}\n      });\n      this.socket.on('connection-success', success => {\n        console.log(success);\n      });\n      this.socket.on('offerOrAnswer', sdp => {\n        console.log(sdp);\n        this.textref.value = JSON.stringify(sdp);\n        this.pc.setRemoteDescription(new RTCSessionDescription(sdp));\n      });\n      this.socket.on('candidate', candidate => {\n        console.log(candidate); //    this.candidates = [...this.candidates, candidate]\n\n        this.pc.addIceCandidate(new RTCIceCandidate(candidate));\n      });\n      const pc_config = {\n        \"iceServer\": [{\n          'urls': 'stun:stun.l.google.com:19302'\n        }, {\n          'urls': 'turn:192.158.29.39:3478?transport=udp',\n          'credential': 'JZEOEt2V3Qb0y27GRntt2u2PAYA=',\n          'username': '28224511:1379330808'\n        }, {\n          'urls': 'turn:192.158.29.39:3478?transport=tcp',\n          'credential': 'JZEOEt2V3Qb0y27GRntt2u2PAYA=',\n          'username': '28224511:1379330808'\n        }]\n      };\n      this.pc = new RTCPeerConnection(pc_config);\n\n      this.pc.onicecandidate = e => {\n        if (e.candidate) {\n          this.sendToPeer('candidate', e.candidate);\n        }\n      };\n\n      this.pc.oniceconnectionstatechange = e => {\n        console.log(e);\n      };\n\n      this.pc.onaddstream = e => {\n        this.remoteVideoref.current.srcObject = e.stream;\n      };\n\n      const success = stream => {\n        window.localStream = stream;\n        this.localVideoref.current.srcObject = stream;\n        this.pc.onaddstream(stream);\n      };\n\n      const failure = e => {\n        console.log(\"Error: \", e); //\n      };\n\n      const constraints = {\n        audio: false,\n        video: true\n      };\n      navigator.mediaDevices.getUserMedia(constraints).then(success).catch(failure);\n    };\n\n    this.sendToPeer = (messageType, payload) => {\n      this.socket.emit((messageType, {\n        socketID: this.socket.id,\n        payload\n      }));\n    };\n\n    this.createOffer = () => {\n      this.pc.createOffer({\n        offerToReceiveVideo: 1\n      }).then(sdp => {\n        console.log(\"Offer0\");\n        this.pc.setLocalDescription(sdp);\n        this.sendToPeer('offerOrAnswer', sdp);\n        console.log(JSON.stringify(sdp));\n      });\n      console.log(\"Offer\");\n    };\n\n    this.createAnswer = () => {\n      this.pc.createAnswer({\n        offerToReceiveVideo: 1\n      }).then(sdp => {\n        console.log('Answer0');\n        this.pc.setLocalDescription(sdp);\n        this.sendToPeer('offerOrAnswer', sdp);\n      });\n      console.log('Answer');\n    };\n\n    this.setRemoteDescription = () => {\n      const desc = JSON.parse(this.textref.value);\n      this.pc.setRemoteDescription(new RTCSessionDescription(desc));\n    };\n\n    this.addCandidate = () => {\n      // const candidate = JSON.parse(this.textref.value)\n      this.candidates.forEach(candidate => {\n        console.log(JSON.stringify(candidate));\n      });\n    };\n\n    this.localVideoref = React.createRef();\n    this.remoteVideoref = React.createRef();\n    this.socket = null;\n    this.candidates = [];\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"video\", {\n      ref: this.localVideoref,\n      style: {\n        width: 240,\n        height: 240,\n        margin: 5,\n        backgroundColor: 'black'\n      },\n      autoPlay: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"video\", {\n      ref: this.remoteVideoref,\n      style: {\n        width: 240,\n        height: 240,\n        margin: 5,\n        backgroundColor: 'black'\n      },\n      autoPlay: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.createOffer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }\n    }, \"Offer\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.createAnswer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 17\n      }\n    }, \"Answer\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"textarea\", {\n      autoComplete: 'on',\n      style: {\n        height: '2rem',\n        width: '23rem'\n      },\n      ref: ref => {\n        this.textref = ref;\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\nexport default MainVideo;","map":{"version":3,"sources":["C:/myProJects/Server/weatherapp/src/components/MainVideo.js"],"names":["React","Component","io","MainVideo","constructor","props","componentDidMount","socket","path","query","on","success","console","log","sdp","textref","value","JSON","stringify","pc","setRemoteDescription","RTCSessionDescription","candidate","addIceCandidate","RTCIceCandidate","pc_config","RTCPeerConnection","onicecandidate","e","sendToPeer","oniceconnectionstatechange","onaddstream","remoteVideoref","current","srcObject","stream","window","localStream","localVideoref","failure","constraints","audio","video","navigator","mediaDevices","getUserMedia","then","catch","messageType","payload","emit","socketID","id","createOffer","offerToReceiveVideo","setLocalDescription","createAnswer","desc","parse","addCandidate","candidates","forEach","createRef","render","width","height","margin","backgroundColor","ref"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\n\r\nimport io from 'socket.io-client';\r\n\r\nexport class MainVideo extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.localVideoref = React.createRef();\r\n        this.remoteVideoref = React.createRef();\r\n        this.socket = null;\r\n        this.candidates = [];\r\n        \r\n    }\r\n\r\n    componentDidMount = () => {\r\n\r\n        this.socket = io(\r\n            '/webrtcPeer',\r\n            {\r\n                path: '/webrtc',\r\n                query: {},\r\n               \r\n            }\r\n        )\r\n\r\n        this.socket.on('connection-success', (success) => {\r\n            console.log(success);\r\n        });\r\n        this.socket.on('offerOrAnswer', (sdp) => {\r\n            console.log(sdp);\r\n            this.textref.value = JSON.stringify(sdp)\r\n            this.pc.setRemoteDescription( new RTCSessionDescription(sdp))\r\n        });\r\n        this.socket.on('candidate', (candidate) => {\r\n            console.log(candidate);\r\n        //    this.candidates = [...this.candidates, candidate]\r\n           this.pc.addIceCandidate(new RTCIceCandidate(candidate));\r\n        });\r\n      \r\n\r\n        const pc_config = {\r\n            \"iceServer\": [\r\n                {\r\n                    'urls': 'stun:stun.l.google.com:19302'\r\n                  },\r\n                  {\r\n                    'urls': 'turn:192.158.29.39:3478?transport=udp',\r\n                    'credential': 'JZEOEt2V3Qb0y27GRntt2u2PAYA=',\r\n                    'username': '28224511:1379330808'\r\n                  },\r\n                  {\r\n                    'urls': 'turn:192.158.29.39:3478?transport=tcp',\r\n                    'credential': 'JZEOEt2V3Qb0y27GRntt2u2PAYA=',\r\n                    'username': '28224511:1379330808'\r\n                  }\r\n            ]\r\n        };\r\n        this.pc = new RTCPeerConnection(pc_config);\r\n\r\n        this.pc.onicecandidate = (e) => {\r\n            if(e.candidate) {\r\n                this.sendToPeer('candidate', e.candidate);\r\n            }\r\n        }\r\n        this.pc.oniceconnectionstatechange = (e) => {\r\n            console.log(e);\r\n        }\r\n        \r\n        this.pc.onaddstream = (e) => {\r\n            this.remoteVideoref.current.srcObject = e.stream\r\n        }\r\n       \r\n\r\n\r\n        const success = (stream) => {\r\n            window.localStream = stream;\r\n            this.localVideoref.current.srcObject = stream;\r\n            this.pc.onaddstream(stream);\r\n        }\r\n        const failure = (e) => {\r\n            console.log(\"Error: \", e);\r\n            //\r\n        }\r\n\r\n        const constraints = { audio: false, video: true }\r\n\r\n        navigator.mediaDevices.getUserMedia( constraints )\r\n        .then( success )\r\n        .catch( failure );\r\n    }\r\n    sendToPeer = (messageType, payload) => {\r\n        this.socket.emit((messageType, {\r\n            socketID: this.socket.id,\r\n            payload\r\n        }))\r\n    }\r\n    createOffer = () => {\r\n        this.pc.createOffer({offerToReceiveVideo: 1}).then((sdp) => {\r\n            console.log(\"Offer0\")\r\n            this.pc.setLocalDescription(sdp);\r\n            this.sendToPeer('offerOrAnswer', sdp);\r\n            console.log(JSON.stringify(sdp));\r\n        });\r\n        console.log(\"Offer\");\r\n    }\r\n  \r\n    createAnswer = () => {\r\n      \r\n        this.pc.createAnswer({offerToReceiveVideo: 1}).then((sdp) => {\r\n            console.log('Answer0');\r\n            this.pc.setLocalDescription(sdp);\r\n\r\n            this.sendToPeer('offerOrAnswer', sdp);\r\n        });\r\n        console.log('Answer');\r\n    }\r\n    setRemoteDescription = () => {\r\n        const desc = JSON.parse(this.textref.value)\r\n        this.pc.setRemoteDescription(new RTCSessionDescription(desc))\r\n    }\r\n    addCandidate = () => {\r\n        // const candidate = JSON.parse(this.textref.value)\r\n\r\n        this.candidates.forEach((candidate) => {\r\n            console.log(JSON.stringify(candidate))\r\n           \r\n        });\r\n    }\r\n\r\n    render() {\r\n        \r\n        return (\r\n            <div>\r\n                <video ref={this.localVideoref}\r\n                style={{width: 240, height: 240, margin: 5, backgroundColor: 'black'}}\r\n                autoPlay ></video>\r\n                \r\n                <video ref={this.remoteVideoref}\r\n                style={{width: 240, height: 240, margin: 5, backgroundColor: 'black'}}\r\n                autoPlay ></video>\r\n\r\n                <button onClick={this.createOffer}>Offer</button>\r\n                <button onClick={this.createAnswer}>Answer</button>\r\n                <br/>\r\n                <textarea  autoComplete = {'on'} style={{height:'2rem', width: '23rem'}} ref= { ref => { this.textref = ref }}/>\r\n                {/* <br/>\r\n                <button onClick={this.setRemoteDescription}>Set Remoete Desc</button>\r\n                <button onClick={this.addCandidate}>Add Candidate</button> */}\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default MainVideo\r\n"]},"metadata":{},"sourceType":"module"}