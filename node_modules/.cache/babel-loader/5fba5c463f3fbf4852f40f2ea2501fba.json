{"ast":null,"code":"var _jsxFileName = \"C:\\\\myProJects\\\\Server\\\\weatherapp\\\\src\\\\components\\\\MainVideo.js\";\nimport React, { Component } from 'react';\nimport io from 'socket.io-client';\nexport class MainVideo extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = () => {\n      this.socket = io('/webrtcPeer', {\n        path: '/webrtc',\n        query: {}\n      });\n      this.socket.on('connection-success', success => {\n        console.log(success);\n      });\n      this.socket.on('offerOrAnswer', sdp => {\n        this.textref.value = JSON.stringify(sdp);\n        console.log(\"done here!\");\n      });\n      this.socket.on('candidate', candidate => {\n        this.candidates = [...this.candidates, candidate];\n      });\n      const pc_config = null;\n      this.pc = new RTCPeerConnection(pc_config);\n\n      this.pc.onicecandidate = e => {\n        if (e.candidate) {\n          this.sendToPeer('candidate', e.candidate);\n        }\n      };\n\n      this.pc.oniceconnectionstatechange = e => {\n        console.log(e);\n      };\n\n      this.pc.onaddstream = e => {\n        this.remoteVideoref.current.srcObject = e.stream;\n      };\n\n      const success = stream => {\n        window.localStream = stream;\n        this.localVideoref.current.srcObject = stream;\n        this.pc.addStream(stream);\n      };\n\n      const failure = e => {\n        console.log(\"Error: \", e); //\n      };\n\n      const constraints = {\n        audio: false,\n        video: true\n      };\n      navigator.mediaDevices.getUserMedia(constraints).then(success).catch(failure);\n    };\n\n    this.sendToPeer = (messageType, payload) => {\n      this.socket.emit((messageType, {\n        socketID: this.socket.id,\n        payload\n      }));\n    };\n\n    this.createOffer = () => {\n      console.log(\"Offer\");\n      this.pc.createOffer({\n        offerToReceiveVideo: 1\n      }).then(sdp => {\n        // console.log(JSON.stringify(sdp))\n        this.pc.setLocalDescription(sdp);\n        this.sendToPeer('offerOrAnswer', sdp);\n      });\n    };\n\n    this.createAnswer = () => {\n      console.log('Answer');\n      this.pc.createAnswer({\n        offerToReceiveVideo: 1\n      }).then(sdp => {\n        this.pc.setLocalDescription(sdp);\n        this.sendToPeer('offerOrAnswer', sdp);\n      });\n    };\n\n    this.setRemoteDescription = () => {\n      const desc = JSON.parse(this.textref.value);\n      this.pc.setRemoteDescription(new RTCSessionDescription(desc));\n    };\n\n    this.addCandidate = () => {\n      // const candidate = JSON.parse(this.textref.value)\n      // console.log('Adding cadidata: ', candidate)\n      // this.pc.addIceCandidate(new RTCIceCandidate(candidate))\n      this.candidates.forEach(candidate => {\n        console.log(JSON.stringify(candidate));\n        this.pc.addIceCandidate(new RTCIceCandidate(candidate));\n      });\n    };\n\n    this.localVideoref = React.createRef();\n    this.remoteVideoref = React.createRef();\n    this.socket = null;\n    this.candidates = [];\n  } // initSocket = () => {\n  //     const socket = io(socketUrl)\n  //     socket.on('connect', () => {\n  //         console.log(\"connected\");\n  //     })\n  //     this.setState({socket})\n  // }\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"video\", {\n      ref: this.localVideoref,\n      style: {\n        width: 240,\n        height: 240,\n        margin: 5,\n        backgroundColor: 'black'\n      },\n      autoPlay: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"video\", {\n      ref: this.remoteVideoref,\n      style: {\n        width: 240,\n        height: 240,\n        margin: 5,\n        backgroundColor: 'black'\n      },\n      autoPlay: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.createOffer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }\n    }, \"Offer\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.createAnswer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }\n    }, \"Answer\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"textarea\", {\n      style: {\n        height: '2rem',\n        width: '23rem'\n      },\n      ref: ref => {\n        this.textref = ref;\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.setRemoteDescription,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }\n    }, \"Set Remoete Desc\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.addCandidate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }\n    }, \"Add Candidate\"));\n  }\n\n}\nexport default MainVideo;","map":{"version":3,"sources":["C:/myProJects/Server/weatherapp/src/components/MainVideo.js"],"names":["React","Component","io","MainVideo","constructor","props","componentDidMount","socket","path","query","on","success","console","log","sdp","textref","value","JSON","stringify","candidate","candidates","pc_config","pc","RTCPeerConnection","onicecandidate","e","sendToPeer","oniceconnectionstatechange","onaddstream","remoteVideoref","current","srcObject","stream","window","localStream","localVideoref","addStream","failure","constraints","audio","video","navigator","mediaDevices","getUserMedia","then","catch","messageType","payload","emit","socketID","id","createOffer","offerToReceiveVideo","setLocalDescription","createAnswer","setRemoteDescription","desc","parse","RTCSessionDescription","addCandidate","forEach","addIceCandidate","RTCIceCandidate","createRef","render","width","height","margin","backgroundColor","ref"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\n\r\nimport io from 'socket.io-client';\r\n\r\nexport class MainVideo extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.localVideoref = React.createRef();\r\n        this.remoteVideoref = React.createRef();\r\n        this.socket = null;\r\n        this.candidates = [];\r\n        \r\n    }\r\n \r\n    // initSocket = () => {\r\n    //     const socket = io(socketUrl)\r\n    //     socket.on('connect', () => {\r\n    //         console.log(\"connected\");\r\n    //     })\r\n    //     this.setState({socket})\r\n    // }\r\n\r\n    componentDidMount = () => {\r\n\r\n        this.socket = io(\r\n            '/webrtcPeer',\r\n            {\r\n                path: '/webrtc',\r\n                query: {},\r\n               \r\n            }\r\n        )\r\n\r\n        this.socket.on('connection-success', success => {\r\n            console.log(success);\r\n        });\r\n        this.socket.on('offerOrAnswer', (sdp) => {\r\n            this.textref.value = JSON.stringify(sdp)\r\n            console.log(\"done here!\")\r\n        })\r\n        this.socket.on('candidate', (candidate) => {\r\n           this.candidates = [...this.candidates, candidate]\r\n        })\r\n      \r\n\r\n\r\n\r\n        const pc_config = null\r\n        this.pc = new RTCPeerConnection(pc_config)\r\n\r\n        this.pc.onicecandidate = (e) => {\r\n            if(e.candidate) {\r\n                this.sendToPeer('candidate', e.candidate)\r\n            }\r\n        }\r\n        this.pc.oniceconnectionstatechange = (e) => {\r\n            console.log(e)\r\n        }\r\n        \r\n        this.pc.onaddstream = (e) => {\r\n            this.remoteVideoref.current.srcObject = e.stream\r\n        }\r\n       \r\n\r\n\r\n        const success = (stream) => {\r\n            window.localStream = stream\r\n            this.localVideoref.current.srcObject = stream\r\n            this.pc.addStream(stream)\r\n        }\r\n        const failure = (e) => {\r\n            console.log(\"Error: \", e);\r\n            //\r\n        }\r\n\r\n        const constraints = { audio: false, video: true }\r\n\r\n        navigator.mediaDevices.getUserMedia( constraints )\r\n        .then( success )\r\n        .catch( failure )\r\n    }\r\n    sendToPeer = (messageType, payload) => {\r\n        this.socket.emit((messageType, {\r\n            socketID: this.socket.id,\r\n            payload\r\n        }))\r\n    }\r\n    createOffer = () => {\r\n        console.log(\"Offer\");\r\n\r\n        this.pc.createOffer({offerToReceiveVideo: 1})\r\n        .then(sdp => {\r\n            // console.log(JSON.stringify(sdp))\r\n            this.pc.setLocalDescription(sdp);\r\n\r\n            this.sendToPeer('offerOrAnswer', sdp);\r\n        });\r\n    }\r\n  \r\n    createAnswer = () => {\r\n        console.log('Answer');\r\n        this.pc.createAnswer({offerToReceiveVideo: 1})\r\n        .then(sdp => {\r\n           \r\n            this.pc.setLocalDescription(sdp);\r\n\r\n            this.sendToPeer('offerOrAnswer', sdp);\r\n        });\r\n    }\r\n    setRemoteDescription = () => {\r\n        const desc = JSON.parse(this.textref.value)\r\n        this.pc.setRemoteDescription(new RTCSessionDescription(desc))\r\n    }\r\n    addCandidate = () => {\r\n        // const candidate = JSON.parse(this.textref.value)\r\n        // console.log('Adding cadidata: ', candidate)\r\n        // this.pc.addIceCandidate(new RTCIceCandidate(candidate))\r\n        this.candidates.forEach(candidate => {\r\n            console.log(JSON.stringify(candidate))\r\n            this.pc.addIceCandidate(new RTCIceCandidate(candidate));\r\n        });\r\n    }\r\n\r\n    render() {\r\n        \r\n        return (\r\n            <div>\r\n                <video ref={this.localVideoref}\r\n                style={{width: 240, height: 240, margin: 5, backgroundColor: 'black'}}\r\n                autoPlay ></video>\r\n                \r\n                <video ref={this.remoteVideoref}\r\n                style={{width: 240, height: 240, margin: 5, backgroundColor: 'black'}}\r\n                autoPlay ></video>\r\n\r\n                <button onClick={this.createOffer}>Offer</button>\r\n                <button onClick={this.createAnswer}>Answer</button>\r\n                <br/>\r\n                <textarea style={{height:'2rem', width: '23rem'}} ref= { ref => { this.textref = ref }}/>\r\n                <br/>\r\n                <button onClick={this.setRemoteDescription}>Set Remoete Desc</button>\r\n                <button onClick={this.addCandidate}>Add Candidate</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default MainVideo\r\n"]},"metadata":{},"sourceType":"module"}