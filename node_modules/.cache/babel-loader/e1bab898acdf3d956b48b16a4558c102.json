{"ast":null,"code":"var _jsxFileName = \"C:\\\\myProJects\\\\WeatherApp\\\\weatherapp\\\\src\\\\components\\\\App3.js\";\nimport React, { Component, useEffect, useState } from 'react';\nimport Sidebar from './Sidebar';\nimport Chat from './Chat';\nimport Pusher from \"pusher-js\";\nimport axios from \"../apis/axios\";\nimport { useAuth0 } from '@auth0/auth0-react';\nimport io from 'socket.io-client';\nconst socketUrl = \"http://192.168.1.3:5000\";\nexport default class App3 extends Component {\n  constructor(props) {\n    super(props);\n\n    this.initSocket = () => {\n      setSocket(io(socketUrl));\n      socket.on('connect', () => {//\n      });\n    };\n\n    this.state = {\n      socket: null\n    };\n  }\n\n  componentWillMount() {\n    this.initSocket();\n  }\n\n  render() {\n    const {\n      user,\n      isAuthenticated\n    } = useAuth0();\n    const isUser = isAuthenticated && user;\n    const [messages, setMessages] = useState([]);\n    useEffect(() => {\n      axios.get(\"/messages/sync\").then(response => {\n        setMessages(response.data);\n      });\n    }, []);\n    useEffect(() => {\n      const pusher = new Pusher(\"02b865ac879689d71e48\", {\n        cluster: \"ap1\"\n      });\n      const channel = pusher.subscribe(\"messages\");\n      channel.bind(\"inserted\", newMessage => {\n        // alert(JSON.stringify(newMessage));\n        setMessages([...messages, newMessage]);\n      });\n      return () => {\n        channel.unbind_all();\n        channel.unsubscribe();\n      };\n    }, [messages]);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"app3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Sidebar, {\n      isUser: isUser,\n      user: user,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Chat, {\n      messages: messages,\n      isUser: isUser,\n      user: user,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["C:/myProJects/WeatherApp/weatherapp/src/components/App3.js"],"names":["React","Component","useEffect","useState","Sidebar","Chat","Pusher","axios","useAuth0","io","socketUrl","App3","constructor","props","initSocket","setSocket","socket","on","state","componentWillMount","render","user","isAuthenticated","isUser","messages","setMessages","get","then","response","data","pusher","cluster","channel","subscribe","bind","newMessage","unbind_all","unsubscribe"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,SAA3B,EAAsCC,QAAtC,QAAsD,OAAtD;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,KAAP,MAAkB,eAAlB;AACA,SAASC,QAAT,QAAyB,oBAAzB;AACA,OAAOC,EAAP,MAAe,kBAAf;AAEA,MAAMC,SAAS,GAAG,yBAAlB;AAGA,eAAe,MAAMC,IAAN,SAAmBV,SAAnB,CAA6B;AACzCW,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAUnBC,UAVmB,GAUN,MAAM;AACfC,MAAAA,SAAS,CAACN,EAAE,CAACC,SAAD,CAAH,CAAT;AACAM,MAAAA,MAAM,CAACC,EAAP,CAAU,SAAV,EAAqB,MAAI,CACrB;AACH,OAFD;AAGH,KAfkB;;AAEf,SAAKC,KAAL,GAAa;AACZF,MAAAA,MAAM,EAAE;AADI,KAAb;AAGH;;AACDG,EAAAA,kBAAkB,GAAG;AACpB,SAAKL,UAAL;AACH;;AASGM,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAA4Bd,QAAQ,EAA1C;AACA,UAAMe,MAAM,GAAGD,eAAe,IAAID,IAAlC;AACA,UAAM,CAACG,QAAD,EAAWC,WAAX,IAA0BtB,QAAQ,CAAC,EAAD,CAAxC;AACAD,IAAAA,SAAS,CAAC,MAAM;AACZK,MAAAA,KAAK,CAACmB,GAAN,CAAU,gBAAV,EAA4BC,IAA5B,CAAkCC,QAAD,IAAc;AAC3CH,QAAAA,WAAW,CAACG,QAAQ,CAACC,IAAV,CAAX;AACH,OAFD;AAGH,KAJQ,EAIN,EAJM,CAAT;AAKA3B,IAAAA,SAAS,CAAC,MAAM;AAGZ,YAAM4B,MAAM,GAAG,IAAIxB,MAAJ,CAAW,sBAAX,EAAmC;AAClDyB,QAAAA,OAAO,EAAE;AADyC,OAAnC,CAAf;AAIA,YAAMC,OAAO,GAAGF,MAAM,CAACG,SAAP,CAAiB,UAAjB,CAAhB;AACID,MAAAA,OAAO,CAACE,IAAR,CAAa,UAAb,EAA0BC,UAAD,IAAgB;AACzC;AACAV,QAAAA,WAAW,CAAC,CAAC,GAAGD,QAAJ,EAAcW,UAAd,CAAD,CAAX;AACH,OAHG;AAIJ,aAAO,MAAM;AACTH,QAAAA,OAAO,CAACI,UAAR;AACAJ,QAAAA,OAAO,CAACK,WAAR;AACH,OAHD;AAIH,KAhBQ,EAgBN,CAACb,QAAD,CAhBM,CAAT;AAkBA,wBACI;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEA,oBAAC,OAAD;AAAS,MAAA,MAAM,EAAGD,MAAlB;AAA2B,MAAA,IAAI,EAAGF,IAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFA,eAIA,oBAAC,IAAD;AAAM,MAAA,QAAQ,EAAGG,QAAjB;AAA4B,MAAA,MAAM,EAAGD,MAArC;AAA8C,MAAA,IAAI,EAAGF,IAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJA,CADJ;AAQH;;AArDuC","sourcesContent":["import React, { Component, useEffect, useState } from 'react'\r\nimport Sidebar from './Sidebar';\r\nimport Chat from './Chat';\r\nimport Pusher from \"pusher-js\";\r\nimport axios from \"../apis/axios\";\r\nimport { useAuth0 } from '@auth0/auth0-react';\r\nimport io from 'socket.io-client';\r\n\r\nconst socketUrl = \"http://192.168.1.3:5000\";\r\n\r\n\r\nexport default class App3 extends Component {\r\n   constructor(props) {\r\n       super(props);\r\n       this.state = {\r\n        socket: null\r\n       };\r\n   }\r\n   componentWillMount() {\r\n    this.initSocket()\r\n}\r\n   \r\n   initSocket = () => {\r\n       setSocket(io(socketUrl))\r\n       socket.on('connect', ()=>{\r\n           //\r\n       })\r\n   }\r\n  \r\n    render() {\r\n        const { user, isAuthenticated } = useAuth0();\r\n        const isUser = isAuthenticated && user;\r\n        const [messages, setMessages] = useState([]); \r\n        useEffect(() => {\r\n            axios.get(\"/messages/sync\").then((response) => {\r\n                setMessages(response.data);\r\n            });\r\n        }, []);\r\n        useEffect(() => {\r\n     \r\n     \r\n            const pusher = new Pusher(\"02b865ac879689d71e48\", {\r\n            cluster: \"ap1\",\r\n            });\r\n        \r\n            const channel = pusher.subscribe(\"messages\");\r\n                channel.bind(\"inserted\", (newMessage) => {\r\n                // alert(JSON.stringify(newMessage));\r\n                setMessages([...messages, newMessage]);\r\n            });\r\n            return () => {\r\n                channel.unbind_all();\r\n                channel.unsubscribe();\r\n            };\r\n        }, [messages]);\r\n     \r\n        return (\r\n            <div className=\"app3\">\r\n            {/* Sidebar */}\r\n            <Sidebar isUser={ isUser } user={ user } />\r\n            {/* Chat Component */}\r\n            <Chat messages={ messages } isUser={ isUser } user={ user } />\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}