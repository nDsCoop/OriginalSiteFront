{"ast":null,"code":"var _jsxFileName = \"C:\\\\myProJects\\\\Server\\\\weatherapp\\\\src\\\\pages\\\\Page3.js\";\nimport React, { Component } from 'react';\nimport App3 from '../components/App3';\nimport Store from '../store';\nimport Reconnect from './Reconnect';\nexport default class Page3 extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      store: new Store(this)\n    };\n  }\n\n  render() {\n    const {\n      store\n    } = this.state;\n    const isConnected = store.isConnected(); // const me = store.getCurrentUser();\n\n    return /*#__PURE__*/React.createElement(React.Fragment, null, !isConnected ? /*#__PURE__*/React.createElement(App3, {\n      store: store,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 33\n      }\n    }) : /*#__PURE__*/React.createElement(React.Fragment, null, Reconnect));\n  }\n\n}","map":{"version":3,"sources":["C:/myProJects/Server/weatherapp/src/pages/Page3.js"],"names":["React","Component","App3","Store","Reconnect","Page3","constructor","props","state","store","render","isConnected"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AAEA,eAAe,MAAMC,KAAN,SAAoBJ,SAApB,CAA8B;AACzCK,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE,IAAIN,KAAJ,CAAU,IAAV;AADE,KAAb;AAGH;;AACDO,EAAAA,MAAM,GAAE;AACJ,UAAM;AAAED,MAAAA;AAAF,QAAY,KAAKD,KAAvB;AACA,UAAMG,WAAW,GAAGF,KAAK,CAACE,WAAN,EAApB,CAFI,CAGJ;;AACA,wBACI,0CACK,CAACA,WAAD,gBAAe,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAKF,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAf,gBAA4C,0CAAGL,SAAH,CADjD,CADJ;AAOH;;AAlBwC","sourcesContent":["import React, {Component} from 'react'\r\nimport App3 from '../components/App3';\r\nimport Store from '../store';\r\nimport Reconnect from './Reconnect';\r\n\r\nexport default class Page3 extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            store: new Store(this),\r\n        }\r\n    }\r\n    render(){\r\n        const { store } = this.state;\r\n        const isConnected = store.isConnected();\r\n        // const me = store.getCurrentUser();\r\n        return (\r\n            <>\r\n                {!isConnected ? <App3 store = { store } /> : <>{Reconnect}</>}\r\n            </>\r\n          \r\n       \r\n    )\r\n    }\r\n   \r\n}\r\n"]},"metadata":{},"sourceType":"module"}