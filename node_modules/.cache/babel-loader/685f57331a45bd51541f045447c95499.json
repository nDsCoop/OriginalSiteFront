{"ast":null,"code":"var _jsxFileName = \"C:\\\\myProJects\\\\WeatherApp\\\\weatherapp\\\\src\\\\components\\\\App2.js\";\nimport React, { useEffect, useState, useContext } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport SimpleAppBar from \"./header/SimpleAppBar\";\nimport MainPlayer from \"./player/MainPlayer\";\nimport SwipeMenu from \"./SwipeMenu\";\nimport SnackbarMessage from \"./SnackbarMessage\";\nimport { MuiThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\nimport { blueGrey, blue } from \"@material-ui/core/colors\";\nimport { useCheckDarkmode } from \"./sections/SettingsPage\";\nimport { GlobalContext } from \"./GlobalState\";\nimport CurrentSection from \"./CurrentSection\";\nconst body = document.querySelector(\"body\");\nconst defaultTheme = {\n  palette: {\n    primary: blueGrey,\n    third: blue,\n    secondary: {\n      main: \"#263238\"\n    }\n  },\n  typography: {\n    useNextVariants: true\n  }\n};\nconst darkTheme = {\n  palette: {\n    type: \"dark\",\n    primary: blueGrey,\n    third: blue,\n    secondary: {\n      main: \"#263238\"\n    }\n  },\n  typography: {\n    useNextVariants: true\n  }\n};\nconst muiDarkTheme = createMuiTheme(darkTheme);\nconst muiDefaultTheme = createMuiTheme(defaultTheme);\n\nconst App2 = () => {\n  const [{\n    themeSelectValue\n  }, dispatch] = useContext(GlobalContext);\n  const {\n    checkDarkMode\n  } = useCheckDarkmode();\n  useEffect(() => {\n    checkDarkMode();\n\n    if (navigator.userAgent.match(/Android/i)) {\n      body.style.overscrollBehavior = \"none\"; // this is to disable pull refresh on android\n    }\n  }, []);\n  useEffect(() => {\n    if (themeSelectValue === \"Dark\") {\n      body.classList.add(\"dark\");\n    } else {\n      body.classList.remove(\"dark\");\n    }\n  }, [themeSelectValue]);\n  return /*#__PURE__*/React.createElement(MuiThemeProvider, {\n    theme: themeSelectValue === \"Dark\" ? muiDarkTheme : muiDefaultTheme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Router, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(SimpleAppBar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    component: CurrentSection,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(SwipeMenu, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }))));\n};\n\nexport default App2;","map":{"version":3,"sources":["C:/myProJects/WeatherApp/weatherapp/src/components/App2.js"],"names":["React","useEffect","useState","useContext","BrowserRouter","Router","Route","Switch","SimpleAppBar","MainPlayer","SwipeMenu","SnackbarMessage","MuiThemeProvider","createMuiTheme","blueGrey","blue","useCheckDarkmode","GlobalContext","CurrentSection","body","document","querySelector","defaultTheme","palette","primary","third","secondary","main","typography","useNextVariants","darkTheme","type","muiDarkTheme","muiDefaultTheme","App2","themeSelectValue","dispatch","checkDarkMode","navigator","userAgent","match","style","overscrollBehavior","classList","add","remove"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,EAAyCC,MAAzC,QAAuD,kBAAvD;AAEA,OAAOC,YAAP,MAAyB,uBAAzB;AACA,OAAOC,UAAP,MAAuB,qBAAvB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,SAASC,gBAAT,EAA2BC,cAA3B,QAAiD,0BAAjD;AACA,SAASC,QAAT,EAAmBC,IAAnB,QAA+B,0BAA/B;AAEA,SAASC,gBAAT,QAAiC,yBAAjC;AACA,SAASC,aAAT,QAA8B,eAA9B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AAEA,MAAMC,IAAI,GAAGC,QAAQ,CAACC,aAAT,CAAuB,MAAvB,CAAb;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAE;AACPC,IAAAA,OAAO,EAAEV,QADF;AAEPW,IAAAA,KAAK,EAAEV,IAFA;AAGPW,IAAAA,SAAS,EAAE;AACTC,MAAAA,IAAI,EAAE;AADG;AAHJ,GADU;AAQnBC,EAAAA,UAAU,EAAE;AACVC,IAAAA,eAAe,EAAE;AADP;AARO,CAArB;AAaA,MAAMC,SAAS,GAAG;AAChBP,EAAAA,OAAO,EAAE;AACPQ,IAAAA,IAAI,EAAE,MADC;AAEPP,IAAAA,OAAO,EAAEV,QAFF;AAGPW,IAAAA,KAAK,EAAEV,IAHA;AAIPW,IAAAA,SAAS,EAAE;AACTC,MAAAA,IAAI,EAAE;AADG;AAJJ,GADO;AAShBC,EAAAA,UAAU,EAAE;AACVC,IAAAA,eAAe,EAAE;AADP;AATI,CAAlB;AAcA,MAAMG,YAAY,GAAGnB,cAAc,CAACiB,SAAD,CAAnC;AACA,MAAMG,eAAe,GAAGpB,cAAc,CAACS,YAAD,CAAtC;;AAEA,MAAMY,IAAI,GAAG,MAAM;AACjB,QAAM,CAAC;AAAEC,IAAAA;AAAF,GAAD,EAAuBC,QAAvB,IAAmCjC,UAAU,CAACc,aAAD,CAAnD;AAEA,QAAM;AAAEoB,IAAAA;AAAF,MAAoBrB,gBAAgB,EAA1C;AAEAf,EAAAA,SAAS,CAAC,MAAM;AACdoC,IAAAA,aAAa;;AAEb,QAAIC,SAAS,CAACC,SAAV,CAAoBC,KAApB,CAA0B,UAA1B,CAAJ,EAA2C;AACzCrB,MAAAA,IAAI,CAACsB,KAAL,CAAWC,kBAAX,GAAgC,MAAhC,CADyC,CAEzC;AACD;AACF,GAPQ,EAON,EAPM,CAAT;AASAzC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIkC,gBAAgB,KAAK,MAAzB,EAAiC;AAC/BhB,MAAAA,IAAI,CAACwB,SAAL,CAAeC,GAAf,CAAmB,MAAnB;AACD,KAFD,MAEO;AACLzB,MAAAA,IAAI,CAACwB,SAAL,CAAeE,MAAf,CAAsB,MAAtB;AACD;AACF,GANQ,EAMN,CAACV,gBAAD,CANM,CAAT;AAQA,sBACE,oBAAC,gBAAD;AAAkB,IAAA,KAAK,EAAEA,gBAAgB,KAAK,MAArB,GAA8BH,YAA9B,GAA6CC,eAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACM,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADN,eAEM,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAEf,cAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFN,eAGM,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHN,CADA,CADF,CADF;AAYD,CAlCD;;AAmCA,eAAegB,IAAf","sourcesContent":["import React, { useEffect, useState, useContext } from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\n\r\nimport SimpleAppBar from \"./header/SimpleAppBar\";\r\nimport MainPlayer from \"./player/MainPlayer\";\r\nimport SwipeMenu from \"./SwipeMenu\";\r\nimport SnackbarMessage from \"./SnackbarMessage\";\r\nimport { MuiThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\r\nimport { blueGrey, blue } from \"@material-ui/core/colors\";\r\n\r\nimport { useCheckDarkmode } from \"./sections/SettingsPage\";\r\nimport { GlobalContext } from \"./GlobalState\";\r\nimport CurrentSection from \"./CurrentSection\";\r\n\r\nconst body = document.querySelector(\"body\");\r\n\r\nconst defaultTheme = {\r\n  palette: {\r\n    primary: blueGrey,\r\n    third: blue,\r\n    secondary: {\r\n      main: \"#263238\"\r\n    }\r\n  },\r\n  typography: {\r\n    useNextVariants: true\r\n  }\r\n};\r\n\r\nconst darkTheme = {\r\n  palette: {\r\n    type: \"dark\",\r\n    primary: blueGrey,\r\n    third: blue,\r\n    secondary: {\r\n      main: \"#263238\"\r\n    }\r\n  },\r\n  typography: {\r\n    useNextVariants: true\r\n  }\r\n};\r\n\r\nconst muiDarkTheme = createMuiTheme(darkTheme);\r\nconst muiDefaultTheme = createMuiTheme(defaultTheme);\r\n\r\nconst App2 = () => {\r\n  const [{ themeSelectValue }, dispatch] = useContext(GlobalContext);\r\n\r\n  const { checkDarkMode } = useCheckDarkmode();\r\n\r\n  useEffect(() => {\r\n    checkDarkMode();\r\n\r\n    if (navigator.userAgent.match(/Android/i)) {\r\n      body.style.overscrollBehavior = \"none\";\r\n      // this is to disable pull refresh on android\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (themeSelectValue === \"Dark\") {\r\n      body.classList.add(\"dark\");\r\n    } else {\r\n      body.classList.remove(\"dark\");\r\n    }\r\n  }, [themeSelectValue]);\r\n\r\n  return (\r\n    <MuiThemeProvider theme={themeSelectValue === \"Dark\" ? muiDarkTheme : muiDefaultTheme}>\r\n      <Switch>\r\n      <Router>\r\n            <SimpleAppBar />\r\n            <Route component={CurrentSection} />\r\n            <SwipeMenu />\r\n        </Router> \r\n      </Switch>\r\n       \r\n    </MuiThemeProvider>\r\n  );\r\n};\r\nexport default App2;\r\n"]},"metadata":{},"sourceType":"module"}