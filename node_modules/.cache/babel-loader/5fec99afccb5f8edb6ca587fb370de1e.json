{"ast":null,"code":"var _jsxFileName = \"C:\\\\myProJects\\\\Server\\\\weatherapp\\\\src\\\\components\\\\App3.js\";\nimport React, { Component } from 'react';\nimport defaultImg from \"../images/Logomini.svg\";\nimport className from 'classnames';\nimport { Link } from 'react-router-dom';\nimport { OrderedMap } from 'immutable';\nimport _ from 'lodash';\nimport { ObjectID } from \"../helpers/objectid\";\nexport default class App3 extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onKeyPress = e => {\n      if (e.keyCode === 13 && e.shiftKey) {\n        e.preventDefault();\n        let start = e.target.selectionStart,\n            end = e.target.selectionEnd;\n        this.setState(prevState => ({\n          newMessage: prevState.newMessage.substring(0, start) + '\\n' + prevState.newMessage.substring(end)\n        }), () => {\n          this.input.selectionStart = this.input.selectionEnd = start + 1;\n        });\n      } else if (e.keyCode === 13) {\n        // block enter\n        e.preventDefault();\n      }\n    };\n\n    this.handleSubmit = e => {\n      const {\n        newMessage\n      } = this.state;\n      const {\n        store\n      } = this.props;\n      e.preventDefault();\n      const messageId = new ObjectID().toString();\n      const channel = store.getActiveChannel();\n\n      const channelId = _.get(channel, '_id', null);\n\n      const currentUser = store.getCurrentUser();\n      const message = {\n        _id: messageId,\n        channelId: channelId,\n        body: newMessage,\n        author: _.get(currentUser, 'name'),\n        avatar: defaultImg,\n        me: true\n      };\n      store.addMessage(messageId, message);\n      this.setState({\n        newMessage: \"\"\n      });\n    };\n\n    this._onResi = () => {\n      this.setState({\n        height: window.innerHeight\n      });\n    };\n\n    this.addTestMessages = () => {\n      const {\n        store\n      } = this.props;\n\n      for (let i = 0; i < 20; i++) {\n        let isMe = false;\n\n        if (i % 2 === 0) {\n          isMe = true;\n        }\n\n        const newMsg = {\n          _id: `${i}`,\n          author: `Author: ${i}`,\n          body: `The body of message ${i}`,\n          avatar: defaultImg,\n          me: isMe,\n          timing: '0:00'\n        };\n        store.addMessage(i, newMsg);\n      }\n\n      for (let c = 0; c < 10; c++) {\n        const newChannel = {\n          _id: `${c}`,\n          title: `Channel title ${c}`,\n          lastMessage: `Hey there is.. ${c}`,\n          members: new OrderedMap({\n            '1': true,\n            '2': true\n          }),\n          messages: new OrderedMap()\n        };\n        const moreMsgId = `${c + 1}`;\n        const msgId = `${c}`;\n        newChannel.messages = newChannel.messages.set(msgId, true);\n        newChannel.messages = newChannel.messages.set(moreMsgId, true);\n        store.addChannel(c, newChannel);\n      }\n    };\n\n    this.state = {\n      height: window.innerHeight,\n      newMessage: ''\n    };\n  }\n\n  renderMessage(message) {\n    return /*#__PURE__*/React.createElement(\"p\", {\n      dangerouslySetInnerHTML: {\n        __html: _.get(message, 'body')\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 16\n      }\n    });\n  }\n\n  componentDidMount() {\n    window.addEventListener('resize', this._onResi);\n    this.addTestMessages();\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this._onResi);\n  }\n\n  render() {\n    const {\n      height,\n      newMessage\n    } = this.state;\n    const {\n      store\n    } = this.props;\n    const activeChannel = store.getActiveChannel();\n    const messages = store.getMessagesFromChannel(activeChannel);\n    const members = store.getMembersFromChannel(activeChannel);\n    const channels = store.getChannels();\n    const style = {\n      height: height\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: style,\n      className: \"app3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"chat-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header-left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"action\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      className: \"btn-primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 29\n      }\n    }, \"New Message\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header-mid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 29\n      }\n    }, \"Title\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"user-bar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"name-user\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 33\n      }\n    }, \"nDs\"), /*#__PURE__*/React.createElement(\"img\", {\n      src: defaultImg,\n      alt: \"user-img\",\n      className: \"img-user\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 33\n      }\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"chat-main\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"sidebar-left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"chanels\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 25\n      }\n    }, channels.map((channel, index) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        onClick: index => {\n          store.setActiveChannelId(channel._id);\n        },\n        key: channel._id,\n        className: className('chanel', {\n          'active': _.get(activeChannel, '_id') === _.get(channel, '_id', null)\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"user-img\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: defaultImg,\n        alt: \"user-img\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 45\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"chanel-info\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 45\n        }\n      }, channel.title), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 45\n        }\n      }, channel.lastMessage)));\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"chat-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"messages\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 25\n      }\n    }, messages.map((mess, index) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: index,\n        className: `${mess.me ? 'message-me' : 'message'}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: mess.avatar,\n        alt: \"user-img\",\n        className: \"img-user\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 41\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"message-body\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"username\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 45\n        }\n      }, `${mess.me ? 'Me' : mess.author}`, \" say:\"), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"message-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 45\n        }\n      }, this.renderMessage(mess), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"timing\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 49\n        }\n      }, mess.timing))));\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"message-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      className: \"message-form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"textarea\", {\n      id: \"message\",\n      ref: input => this.input = input,\n      type: \"text\",\n      className: \"form-control\",\n      value: newMessage,\n      autoComplete: 'off',\n      placeholder: \"Type something interesting\",\n      onKeyDown: this.onKeyPress // onKeyUp = { (e) => {\n      //     console.log(\"key:\", e.key);\n      //      if(e.keyCode === 13 && !e.shiftKey) {\n      //         this.form.submit();\n      //      }}\n      // }\n      ,\n      onChange: ({\n        target\n      }) => {\n        this.setState({\n          newMessage: target.value\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      // disabled = { message.length < 1 }\n      type: \"submit\",\n      className: \"send\",\n      onClick: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 33\n      }\n    }, \" Send \")))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"sidebar-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"title-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 25\n      }\n    }, \"Members\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"chanels\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 25\n      }\n    }, members.map((member, index) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: index,\n        className: \"chanel\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"user-img\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: defaultImg,\n        alt: \"user-img\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 45\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"chanel-info\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 45\n        }\n      }, member.name), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 45\n        }\n      }, \"Joined: 2000 years ago\")));\n    })))));\n  }\n\n}","map":{"version":3,"sources":["C:/myProJects/Server/weatherapp/src/components/App3.js"],"names":["React","Component","className","Link","OrderedMap","_","ObjectID","App3","constructor","props","onKeyPress","e","keyCode","shiftKey","preventDefault","start","target","selectionStart","end","selectionEnd","setState","prevState","newMessage","substring","input","handleSubmit","state","store","messageId","toString","channel","getActiveChannel","channelId","get","currentUser","getCurrentUser","message","_id","body","author","avatar","defaultImg","me","addMessage","_onResi","height","window","innerHeight","addTestMessages","i","isMe","newMsg","timing","c","newChannel","title","lastMessage","members","messages","moreMsgId","msgId","set","addChannel","renderMessage","__html","componentDidMount","addEventListener","componentWillUnmount","removeEventListener","render","activeChannel","getMessagesFromChannel","getMembersFromChannel","channels","getChannels","style","map","index","setActiveChannelId","mess","value","member","name"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport defaultImg from '../images/Logomini.svg';\r\nimport className from 'classnames';\r\nimport { Link } from 'react-router-dom';\r\nimport { OrderedMap } from 'immutable';\r\nimport _ from 'lodash';\r\nimport {ObjectID} from \"../helpers/objectid\";\r\n\r\n\r\nexport default class App3 extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            height: window.innerHeight,\r\n            newMessage: ''\r\n        }\r\n\r\n    }\r\n    onKeyPress = (e) => {\r\n        if (e.keyCode === 13 && e.shiftKey) {\r\n           e.preventDefault();\r\n           let start = e.target.selectionStart,\r\n               end = e.target.selectionEnd;\r\n           this.setState(prevState => ({ newMessage:\r\n               prevState.newMessage.substring(0, start)\r\n               + '\\n' +\r\n               prevState.newMessage.substring(end)\r\n           }),()=>{\r\n               this.input.selectionStart = this.input.selectionEnd = start + 1;\r\n           })\r\n       }else if (e.keyCode === 13) { // block enter\r\n         e.preventDefault();\r\n\r\n       }\r\n       \r\n     };\r\n    renderMessage(message){\r\n        return <p dangerouslySetInnerHTML={{__html: _.get(message, 'body')}}></p>\r\n    }\r\n    handleSubmit = (e) => {\r\n        const { newMessage } = this.state;\r\n        const { store } = this.props;\r\n        e.preventDefault();\r\n        const messageId = new ObjectID().toString();\r\n        const channel = store.getActiveChannel();\r\n        const channelId = _.get(channel , '_id', null);\r\n        const currentUser = store.getCurrentUser();\r\n        const message = {\r\n            _id: messageId,\r\n            channelId: channelId,\r\n            body : newMessage,\r\n            author : _.get(currentUser, 'name'),\r\n            avatar: defaultImg,\r\n            me: true,\r\n        };\r\n        \r\n        store.addMessage(messageId, message);\r\n        this.setState({newMessage: \"\"});\r\n    }\r\n    _onResi = () => {\r\n        this.setState({height: window.innerHeight});\r\n    }\r\n    addTestMessages = () => {\r\n        const {store} = this.props\r\n\r\n      \r\n        for(let i = 0; i < 20; i++){\r\n            let isMe = false;\r\n            if(i % 2 === 0) {\r\n                isMe = true;\r\n            }\r\n            const newMsg = {\r\n                _id: `${i}`,\r\n                author: `Author: ${i}`,\r\n                body: `The body of message ${i}`,\r\n                avatar: defaultImg,\r\n                me: isMe,\r\n                timing: '0:00'\r\n            }\r\n            store.addMessage(i, newMsg);\r\n\r\n        }\r\n\r\n        for (let c = 0; c<10; c++){\r\n            const newChannel ={\r\n                _id: `${c}`,\r\n                title: `Channel title ${c}`,\r\n                lastMessage: `Hey there is.. ${c}`,\r\n                members: new OrderedMap({\r\n                    '1': true,\r\n                    '2': true,\r\n                }),\r\n                messages: new OrderedMap(),\r\n            }\r\n            const moreMsgId =`${c + 1}`;\r\n            const msgId = `${c}`;\r\n            newChannel.messages = newChannel.messages.set(msgId, true);\r\n            newChannel.messages = newChannel.messages.set(moreMsgId, true);\r\n            store.addChannel(c, newChannel);\r\n        }\r\n\r\n    }\r\n    componentDidMount(){\r\n        window.addEventListener('resize', this._onResi);\r\n        this.addTestMessages();\r\n    }\r\n    componentWillUnmount(){\r\n        window.removeEventListener('resize', this._onResi);\r\n    }\r\n    render() {\r\n        const { height, newMessage } = this.state;\r\n        const { store } = this.props;\r\n        const activeChannel = store.getActiveChannel();\r\n        const messages = store.getMessagesFromChannel(activeChannel);\r\n        const members = store.getMembersFromChannel(activeChannel);\r\n        const channels = store.getChannels();\r\n        const style = {\r\n            height: height,\r\n        }\r\n        return (\r\n            <div style={style} className=\"app3\">\r\n                <div className=\"chat-header\">\r\n                    <div className=\"header-left\">\r\n                        <div className=\"action\">\r\n                            <Link className=\"btn-primary\">New Message</Link>\r\n                        </div>\r\n                        </div>\r\n                        <div className=\"header-mid\">\r\n                            <h3>Title</h3>\r\n                        </div>\r\n                        <div className=\"header-right\">\r\n                            <div className=\"user-bar\">\r\n                                <div className=\"name-user\">nDs</div>\r\n                                <img src={defaultImg} alt=\"user-img\" className=\"img-user\"></img>\r\n                            </div>\r\n                        </div>\r\n                </div>\r\n                <div className=\"chat-main\">\r\n                    <div className=\"sidebar-left\">\r\n                        <div className=\"chanels\">\r\n                            {channels.map((channel, index) =>{\r\n                                return (\r\n                                    <div onClick= {(index) => {\r\n                                        store.setActiveChannelId(channel._id);\r\n                                    }} key={channel._id} className={className('chanel', {'active' : _.get(activeChannel, '_id') === _.get(channel, '_id', null)})}>\r\n                                        <div className=\"user-img\">\r\n                                            <img src={defaultImg} alt=\"user-img\" />\r\n                                        </div>\r\n                                        <div className=\"chanel-info\">\r\n                                            <h4>{channel.title}</h4>\r\n                                            <p>{channel.lastMessage}</p>\r\n                                        </div>\r\n                                    </div>\r\n                                )\r\n                            })}\r\n                            \r\n                        </div>\r\n                    </div>\r\n                    <div className=\"chat-content\">\r\n                        <div className=\"messages\">\r\n                            { \r\n                                messages.map((mess, index) => { \r\n                                    return (\r\n                                        <div key={index} className={`${mess.me ? 'message-me' : 'message'}`}>\r\n                                        <img src={mess.avatar} alt=\"user-img\" className=\"img-user\"></img>\r\n                                        <div className=\"message-body\">\r\n                                            <div className=\"username\">{`${mess.me ? 'Me' : mess.author}`} say:</div>\r\n                                            <p className=\"message-text\">\r\n                                                { this.renderMessage(mess) }\r\n                                                <p className=\"timing\">{mess.timing}</p>\r\n                                            </p>\r\n                                        </div>\r\n                                        </div>\r\n                                    );\r\n                                })\r\n                            }\r\n                           \r\n                            {/*  <div className=\"message-me\">\r\n                                 <img src={defaultImg} alt=\"user-img\" className=\"img-user\"></img>\r\n                                 <div className=\"message-body\">\r\n                                     <div className=\"username\">Me say:</div>\r\n                                     <p className=\"message-text\">\r\n                                         Hello you come app chat!\r\n                                         <p className=\"timing\">0:00</p>\r\n                                     </p>\r\n                                   \r\n                                 </div>\r\n                             </div> */}\r\n                        </div>\r\n                        <div className=\"message-input\">\r\n                            <form \r\n                                onSubmit= { this.handleSubmit }\r\n                                className=\"message-form\">\r\n                                <input>\r\n                                <textarea  \r\n                                    id = \"message\"\r\n                                    ref={(input)=> this.input = input}\r\n                                    type = \"text\"\r\n                                    className = \"form-control\"\r\n                                    value = { newMessage }\r\n                                    autoComplete = {'off'}\r\n                                    placeholder = \"Type something interesting\"\r\n                                    onKeyDown={this.onKeyPress}\r\n                                    // onKeyUp = { (e) => {\r\n                                    //     console.log(\"key:\", e.key);\r\n                                    //      if(e.keyCode === 13 && !e.shiftKey) {\r\n                                    //         this.form.submit();\r\n                                    //      }}\r\n                                    // }\r\n                                    onChange = {\r\n                                    \t({target})=>{\r\n                                    \t\tthis.setState({newMessage:target.value})\r\n                                    \t}\r\n                                    }\r\n                                    />\r\n                                </input>\r\n                               \r\n                                <button\r\n                                    // disabled = { message.length < 1 }\r\n                                    type = \"submit\"\r\n                                    className = \"send\"\r\n                                    onClick = { this.handleSubmit }\r\n                                > Send </button>\r\n                            </form>\r\n\t\t\t            </div>\r\n                    </div>\r\n                   \r\n                    <div className=\"sidebar-right\">\r\n                        <div className=\"title-right\">Members</div>\r\n                        <div className=\"chanels\">\r\n                            { members.map((member, index) => {\r\n                                return (\r\n                                    <div key ={ index } className=\"chanel\">\r\n                                        <div className=\"user-img\">\r\n                                            <img src={defaultImg} alt=\"user-img\" />\r\n                                        </div>\r\n                                        <div className=\"chanel-info\">\r\n                                            <h4>{ member.name }</h4>\r\n                                            <p>Joined: 2000 years ago</p>\r\n                                        </div>\r\n                                    </div>\r\n                                )\r\n                            })}\r\n                            \r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}