{"ast":null,"code":"var _jsxFileName = \"C:\\\\myProJects\\\\Server\\\\weatherapp\\\\src\\\\components\\\\aboutApp\\\\FeedbackApp.js\";\nimport React from \"react\";\nimport { // FormControl,\nTextField, Button, Grid // CircularProgress,\n, LinearProgress, Typography, Divider } from \"@material-ui/core\";\nimport { loadReCaptcha, ReCaptcha } from \"react-recaptcha-v3\";\nimport axios from \"../../apis/axios\"; // import { GlobalContext } from \"../GlobalState\";\n\nlet captchaToken;\n\nconst FeedbackApp = () => {\n  // const [{}, dispatch] = useContext(GlobalContext);\n  // const setSnackbarMsg = React.useCallback(\n  //   data => {\n  //     dispatch({ type: \"setSnackbarMsg\", snippet: data });\n  //   },\n  //   [dispatch]\n  // );\n  const [isSending, setIsSending] = React.useState(false);\n  const formEl = React.useRef(null);\n  const formElEmail = React.useRef(null);\n\n  const submitFormEmail = async e => {\n    setIsSending(true);\n    const formData = new FormData(formElEmail.current);\n    const email = formData.get(\"email\");\n    const message = formData.get(\"message\");\n    const token = captchaToken;\n    e.preventDefault();\n    const post = {\n      email: email,\n      message: message,\n      token: captchaToken\n    };\n    await axios.post('/ndsapi/mail', post).then(function (response) {\n      // console.log(response.data.status);\n      // console.log(response.data.message);\n      // also clear the form\n      alert(\"Your Message Sent\");\n      formElEmail.current.reset(); // setSnackbarMsg(response.data.status);\n\n      setIsSending(false);\n    }).catch(function (error) {\n      // console.log(error.response.status);\n      if (error.response) {\n        if (error.response.status === 429) {\n          formElEmail.current.reset();\n          alert(\"Message failed to send please try again\"); // setSnackbarMsg(\"We accept limited feedback!\");\n        }\n      }\n\n      setIsSending(false);\n    }); //   const response = await fetch(\"http://localhost:9150\", { \n    //     method: 'POST', \n    //     headers: { \n    //         'Content-type': 'application/json'\n    //     }, \n    //     body: JSON.stringify({email, message, token}) \n    //   }); \n    //     const resData = await response.json(); \n    //     if (resData.status === 'success'){\n    //       setIsSending(false);\n    //       formElEmail.current.reset();\n    //       this.resetForm()\n    //   }else if(resData.status === 'fail'){\n    //       setIsSending(false);\n    //   }\n  };\n\n  const submitForm = async e => {\n    // set state to sending\n    setIsSending(true);\n    const formData = new FormData(formEl.current);\n    const name = formData.get(\"name\");\n    const email = formData.get(\"email\");\n    const message = formData.get(\"message\");\n    e.preventDefault();\n    const post = {\n      name: name,\n      email: email,\n      message: message,\n      token: captchaToken,\n      timestamp: new Date()\n    };\n    await axios.post('/ndsapi/feedback', post).then(function (response) {\n      console.log(response.data.status);\n      console.log(response.data.message); // also clear the form\n\n      formEl.current.reset();\n      alert(\"Your Message Sent\"); // setSnackbarMsg(response.data.status);\n\n      setIsSending(false);\n    }).catch(function (error) {\n      // console.log(error.response.status);\n      if (error.response) {\n        if (error.response.status === 429) {\n          formEl.current.reset();\n          alert(\"Message failed to send please try again\"); // setSnackbarMsg(\"We accept limited feedback!\");\n        }\n      }\n\n      setIsSending(false);\n    });\n  };\n\n  React.useEffect(() => {\n    loadReCaptcha(\"6Le1toEUAAAAAITyNwqEMaz3hFAYzciSJDMomrgN\");\n  }, []);\n\n  const verifyCallback = token => {\n    console.log(token);\n    captchaToken = token;\n    const captchaBox = document.querySelector(\".grecaptcha-badge\");\n    captchaBox.remove(); // remove captcha badge\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"privacy-app\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h4\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 9\n    }\n  }, \"Feedbacks\", \" \")), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"header-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 9\n    }\n  }, \"Ch\\xFAng t\\xF4i lu\\xF4n s\\u1EB5n s\\xE0ng nh\\u1EADn \\xFD ki\\u1EBFn \\u0111\\xF3ng g\\xF3p t\\u1EEB ng\\u01B0\\u1EDDi d\\xF9ng v\\u1EC1 nh\\u1EEFng v\\u1EA5n \\u0111\\u1EC1 c\\u1EA7n ho\\xE0n thi\\u1EC7n ho\\u1EB7c c\\xE1c l\\u1ED7i x\\u1EA3y ra khi App v\\u1EADn h\\xE0nh m\\xE0 nh\\xF3m ph\\xE1t tri\\u1EC3n ch\\u01B0a s\\u1EEDa \\u0111\\u01B0\\u1EE3c.\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 9\n    }\n  }), \"(We are always ready to receive feedback from users about issues that need to be completed or errors occurring when the App is running but the development team has not fixed it.) B\\xE1o c\\xE1o v\\u1EC1 c\\xE1c v\\u1EA5n \\u0111\\u1EC1 vi ph\\u1EA1m s\\u1EED d\\u1EE5ng m\\xE0 ng\\u01B0\\u1EDDi d\\xF9ng ph\\u1EA3n h\\u1ED3i. Hi\\u1EC7n c\\xF3 2 ph\\u01B0\\u01A1ng th\\u1EE9c \\u0111\\u1EC3 ng\\u01B0\\u1EDDi d\\xF9ng trao \\u0111\\u1ED5i v\\u1EDBi nh\\xF3m ph\\xE1t tri\\u1EC3n.\"), \"(Report of usage violations that users respond to. There are 2 methods for users to talk to the development team)\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 9\n    }\n  }, \"Through the nDsApp Server(Th\\xF4ng qua Server nDsApp)\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"i\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 9\n    }\n  }, \"S\\u1EED d\\u1EE5ng mail \\u0111\\xE3 x\\xE1c minh \\u0111\\u1EC3 ch\\xFAng bi\\u1EBFt b\\u1EA1n l\\xE0 ai v\\xE0 li\\xEAn l\\u1EA1c l\\u1EA1i b\\u1EA1n n\\u1EBFu c\\u1EA7n (Khuy\\u1EBFn Ngh\\u1ECB D\\xF9ng)\"), \"(Use verified mail to let them know who you are and get back to you if needed (Recommended))\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    component: \"form\",\n    ref: formEl,\n    onSubmit: submitForm,\n    container: true,\n    required: true,\n    justify: \"center\",\n    style: {\n      width: \"100%\",\n      margin: \"0 auto\",\n      padding: '1rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ReCaptcha, {\n    sitekey: \"6Le1toEUAAAAAITyNwqEMaz3hFAYzciSJDMomrgN\" // action=\"action_name\"\n    ,\n    verifyCallback: verifyCallback,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    id: \"outlined-email-input\",\n    label: \"Name\",\n    type: \"text\",\n    name: \"name\",\n    autoComplete: \"name\",\n    margin: \"normal\",\n    variant: \"outlined\",\n    fullWidth: true,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    id: \"outlined-email-input\",\n    label: \"Email\",\n    type: \"email\",\n    name: \"email\",\n    autoComplete: \"email\",\n    margin: \"normal\",\n    variant: \"outlined\",\n    fullWidth: true,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    id: \"outlined-email-input\",\n    label: \"Feedback\",\n    multiline: true,\n    rows: \"4\",\n    type: \"text\",\n    name: \"message\",\n    autoComplete: \"feedback\",\n    margin: \"normal\",\n    variant: \"outlined\",\n    fullWidth: true,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 11\n    }\n  }), isSending ? /*#__PURE__*/React.createElement(LinearProgress, {\n    style: {\n      width: \"100%\",\n      transform: \"translateY(-12px)\",\n      borderRadius: \"2px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 13\n    }\n  }) : null, /*#__PURE__*/React.createElement(Button, {\n    style: {\n      marginTop: \"10px\"\n    },\n    variant: \"outlined\",\n    color: \"primary\",\n    type: \"submit\",\n    disabled: isSending ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 11\n    }\n  }, isSending ? \"Sending Feedback\" : \"Send Feedback\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"deliver\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"email-feedback-method\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 7\n    }\n  }, \"Reply via mail to nDs address(Ph\\u1EA3n h\\u1ED3i qua mail t\\u1EDBi \\u0111\\u1ECBa ch\\u1EC9 c\\u1EE7a nDs)\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    component: \"form\",\n    ref: formElEmail,\n    onSubmit: submitFormEmail,\n    container: true,\n    required: true,\n    justify: \"center\",\n    style: {\n      width: \"100%\",\n      margin: \"0 auto\",\n      padding: '1rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ReCaptcha, {\n    sitekey: \"6Le1toEUAAAAAITyNwqEMaz3hFAYzciSJDMomrgN\" // action=\"action_email\"\n    ,\n    verifyCallback: verifyCallback,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    id: \"outlined-email-input\",\n    label: \"Email\",\n    type: \"email\",\n    name: \"email\",\n    autoComplete: \"email\",\n    margin: \"normal\",\n    variant: \"outlined\",\n    fullWidth: true,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    id: \"outlined-email-input\",\n    label: \"Feedback\",\n    multiline: true,\n    rows: \"4\",\n    type: \"text\",\n    name: \"message\",\n    autoComplete: \"feedback\",\n    margin: \"normal\",\n    variant: \"outlined\",\n    fullWidth: true,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 11\n    }\n  }), isSending ? /*#__PURE__*/React.createElement(LinearProgress, {\n    style: {\n      width: \"100%\",\n      transform: \"translateY(-12px)\",\n      borderRadius: \"2px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 13\n    }\n  }) : null, /*#__PURE__*/React.createElement(Button, {\n    style: {\n      marginTop: \"10px\"\n    },\n    variant: \"outlined\",\n    color: \"primary\",\n    type: \"submit\",\n    disabled: isSending ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 11\n    }\n  }, isSending ? \"Sending Feedback\" : \"Send Feedback\")))));\n};\n\nexport default FeedbackApp;","map":{"version":3,"sources":["C:/myProJects/Server/weatherapp/src/components/aboutApp/FeedbackApp.js"],"names":["React","TextField","Button","Grid","LinearProgress","Typography","Divider","loadReCaptcha","ReCaptcha","axios","captchaToken","FeedbackApp","isSending","setIsSending","useState","formEl","useRef","formElEmail","submitFormEmail","e","formData","FormData","current","email","get","message","token","preventDefault","post","then","response","alert","reset","catch","error","status","submitForm","name","timestamp","Date","console","log","data","useEffect","verifyCallback","captchaBox","document","querySelector","remove","width","margin","padding","transform","borderRadius","marginTop"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {\r\n  // FormControl,\r\n  TextField,\r\n  Button,\r\n  Grid,\r\n  // CircularProgress,\r\n  LinearProgress,\r\n  Typography,\r\n  Divider\r\n} from \"@material-ui/core\";\r\nimport { loadReCaptcha, ReCaptcha } from \"react-recaptcha-v3\";\r\nimport axios from \"../../apis/axios\";\r\n// import { GlobalContext } from \"../GlobalState\";\r\n\r\nlet captchaToken;\r\nconst FeedbackApp = () => {\r\n  // const [{}, dispatch] = useContext(GlobalContext);\r\n\r\n  // const setSnackbarMsg = React.useCallback(\r\n  //   data => {\r\n  //     dispatch({ type: \"setSnackbarMsg\", snippet: data });\r\n  //   },\r\n  //   [dispatch]\r\n  // );\r\n  const [isSending, setIsSending] = React.useState(false);\r\n  const formEl = React.useRef(null);\r\n  const formElEmail = React.useRef(null);\r\n  const submitFormEmail = async (e) => {\r\n    setIsSending(true);\r\n    const formData = new FormData(formElEmail.current);\r\n    const email = formData.get(\"email\");\r\n    const message = formData.get(\"message\");\r\n    const token = captchaToken;\r\n    \r\n    e.preventDefault();\r\n    const post = {\r\n      email: email,\r\n      message: message,\r\n      token: captchaToken,\r\n      }\r\n      await axios\r\n      .post('/ndsapi/mail', post)\r\n      .then(function(response) {\r\n        // console.log(response.data.status);\r\n        // console.log(response.data.message);\r\n        // also clear the form\r\n        alert(\"Your Message Sent\"); \r\n        formElEmail.current.reset();\r\n        // setSnackbarMsg(response.data.status);\r\n        setIsSending(false);\r\n      })\r\n      .catch(function(error) {\r\n        // console.log(error.response.status);\r\n        if (error.response) {\r\n          if (error.response.status === 429) {\r\n            formElEmail.current.reset();\r\n            alert(\"Message failed to send please try again\")\r\n            // setSnackbarMsg(\"We accept limited feedback!\");\r\n          }\r\n        }\r\n        setIsSending(false);\r\n      });\r\n  //   const response = await fetch(\"http://localhost:9150\", { \r\n  //     method: 'POST', \r\n  //     headers: { \r\n  //         'Content-type': 'application/json'\r\n  //     }, \r\n  //     body: JSON.stringify({email, message, token}) \r\n  //   }); \r\n  //     const resData = await response.json(); \r\n  //     if (resData.status === 'success'){\r\n  //       setIsSending(false);\r\n  //       formElEmail.current.reset();\r\n       \r\n  //       this.resetForm()\r\n  //   }else if(resData.status === 'fail'){\r\n  //       setIsSending(false);\r\n        \r\n        \r\n  //   }\r\n\r\n  }\r\n\r\n  const submitForm = async (e) => {\r\n    // set state to sending\r\n    setIsSending(true);\r\n    const formData = new FormData(formEl.current);\r\n    const name = formData.get(\"name\");\r\n    const email = formData.get(\"email\");\r\n    const message = formData.get(\"message\");\r\n\r\n    e.preventDefault();\r\n\r\n    const post = {\r\n      name: name,\r\n      email: email,\r\n      message: message,\r\n      token: captchaToken,\r\n      timestamp: new Date(),\r\n      }\r\n\r\n    await axios\r\n          .post('/ndsapi/feedback', post)\r\n          .then(function(response) {\r\n            console.log(response.data.status);\r\n            console.log(response.data.message);\r\n            // also clear the form\r\n            formEl.current.reset();\r\n            alert(\"Your Message Sent\");\r\n            // setSnackbarMsg(response.data.status);\r\n            setIsSending(false);\r\n          })\r\n          .catch(function(error) {\r\n            // console.log(error.response.status);\r\n            if (error.response) {\r\n              if (error.response.status === 429) {\r\n                formEl.current.reset();\r\n                alert(\"Message failed to send please try again\")\r\n                // setSnackbarMsg(\"We accept limited feedback!\");\r\n              }\r\n            }\r\n            setIsSending(false);\r\n          });\r\n      };\r\n\r\n  React.useEffect(() => {\r\n    loadReCaptcha(\"6Le1toEUAAAAAITyNwqEMaz3hFAYzciSJDMomrgN\");\r\n  }, []);\r\n\r\n  const verifyCallback = token => {\r\n    console.log(token);\r\n    captchaToken = token;\r\n    const captchaBox = document.querySelector(\".grecaptcha-badge\");\r\n    captchaBox.remove();\r\n    // remove captcha badge\r\n  };\r\n\r\n  return (\r\n    <div className=\"privacy-app\">\r\n      <header>\r\n        <Typography variant=\"h4\" gutterBottom={true}>\r\n            Feedbacks{\" \"}\r\n        </Typography>\r\n      </header>\r\n      <Divider />\r\n      <br />\r\n      <div className=\"header-feedback\">\r\n        <p>Chúng tôi luôn sẵn sàng nhận ý kiến đóng góp từ người dùng về những vấn đề cần hoàn thiện hoặc các lỗi xảy ra khi App vận hành mà nhóm phát triển chưa sửa được. \r\n        <br/>(We are always ready to receive feedback from users about issues that need to be completed or errors occurring when the App is running but the development team has not fixed it.)\r\n        Báo cáo về các vấn đề vi phạm sử dụng mà người dùng phản hồi. Hiện có 2 phương thức để người dùng trao đổi với nhóm phát triển.</p>\r\n        (Report of usage violations that users respond to. There are 2 methods for users to talk to the development team)\r\n        <br /><br />\r\n        <h4>Through the nDsApp Server(Thông qua Server nDsApp)</h4>\r\n        <br />\r\n        <i>Sử dụng mail đã xác minh để chúng biết bạn là ai và liên lạc lại bạn nếu cần (Khuyến Nghị Dùng)</i> \r\n        (Use verified mail to let them know who you are and get back to you if needed (Recommended))      \r\n      </div>\r\n      <div className=\"form-feedback\">\r\n        <Grid\r\n          component=\"form\"\r\n          ref={formEl}\r\n          onSubmit={submitForm}\r\n          container\r\n          required\r\n          justify=\"center\"\r\n          style={{ width: \"100%\", margin: \"0 auto\", padding: '1rem' }}\r\n        >\r\n          <ReCaptcha\r\n            sitekey=\"6Le1toEUAAAAAITyNwqEMaz3hFAYzciSJDMomrgN\"\r\n            // action=\"action_name\"\r\n            verifyCallback={verifyCallback}\r\n          />\r\n          <TextField\r\n            id=\"outlined-email-input\"\r\n            label=\"Name\"\r\n            type=\"text\"\r\n            name=\"name\"\r\n            autoComplete=\"name\"\r\n            margin=\"normal\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            required\r\n          />\r\n          <TextField\r\n            id=\"outlined-email-input\"\r\n            label=\"Email\"\r\n            type=\"email\"\r\n            name=\"email\"\r\n            autoComplete=\"email\"\r\n            margin=\"normal\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            required\r\n          />\r\n          <TextField\r\n            id=\"outlined-email-input\"\r\n            label=\"Feedback\"\r\n            multiline\r\n            rows=\"4\"\r\n            type=\"text\"\r\n            name=\"message\"\r\n            autoComplete=\"feedback\"\r\n            margin=\"normal\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            required\r\n          />\r\n          {isSending ? (\r\n            <LinearProgress\r\n              style={{\r\n                width: \"100%\",\r\n                transform: \"translateY(-12px)\",\r\n                borderRadius: \"2px\"\r\n              }}\r\n            />\r\n          ) : null}\r\n          <Button\r\n            style={{ marginTop: \"10px\" }}\r\n            variant=\"outlined\"\r\n            color=\"primary\"\r\n            type=\"submit\"\r\n            disabled={isSending ? true : false}\r\n          >\r\n            {/* if sending is true then show circular progress */}\r\n            {isSending ? \"Sending Feedback\" : \"Send Feedback\"}\r\n          </Button>\r\n        </Grid>\r\n      </div>\r\n\r\n      <div className=\"deliver\"></div>\r\n\r\n      <div className=\"email-feedback-method\">\r\n      <h4>Reply via mail to nDs address(Phản hồi qua mail tới địa chỉ của nDs)</h4>\r\n      <div className=\"form-feedback\">\r\n        <Grid\r\n          component=\"form\"\r\n          ref={formElEmail}\r\n          onSubmit={submitFormEmail}\r\n          container\r\n          required\r\n          justify=\"center\"\r\n          style={{ width: \"100%\", margin: \"0 auto\", padding: '1rem' }}\r\n        >\r\n          <ReCaptcha\r\n            sitekey=\"6Le1toEUAAAAAITyNwqEMaz3hFAYzciSJDMomrgN\"\r\n            // action=\"action_email\"\r\n            verifyCallback={verifyCallback}\r\n          />\r\n          <TextField\r\n            id=\"outlined-email-input\"\r\n            label=\"Email\"\r\n            type=\"email\"\r\n            name=\"email\"\r\n            autoComplete=\"email\"\r\n            margin=\"normal\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            required\r\n          />\r\n          <TextField\r\n            id=\"outlined-email-input\"\r\n            label=\"Feedback\"\r\n            multiline\r\n            rows=\"4\"\r\n            type=\"text\"\r\n            name=\"message\"\r\n            autoComplete=\"feedback\"\r\n            margin=\"normal\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            required\r\n          />\r\n          {isSending ? (\r\n            <LinearProgress\r\n              style={{\r\n                width: \"100%\",\r\n                transform: \"translateY(-12px)\",\r\n                borderRadius: \"2px\"\r\n              }}\r\n            />\r\n          ) : null}\r\n          <Button\r\n            style={{ marginTop: \"10px\" }}\r\n            variant=\"outlined\"\r\n            color=\"primary\"\r\n            type=\"submit\"\r\n            disabled={isSending ? true : false}\r\n          >\r\n            {/* if sending is true then show circular progress */}\r\n            {isSending ? \"Sending Feedback\" : \"Send Feedback\"}\r\n          </Button>\r\n        </Grid>\r\n      </div>       \r\n      </div>\r\n     \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FeedbackApp;\r\n"]},"metadata":{},"sourceType":"module"}