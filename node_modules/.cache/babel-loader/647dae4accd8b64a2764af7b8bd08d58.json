{"ast":null,"code":"var _jsxFileName = \"C:\\\\myProJects\\\\Server\\\\weatherapp\\\\src\\\\components\\\\GetAudio.js\";\nimport React, { Component } from 'react'; // import defaultImg from '../images/logoSvg.svg';\n\nimport _ from 'lodash';\nimport { AppRegistry, StyleSheet, Text, View, TouchableHighlight, Platform, PermissionsAndroid } from 'react-native';\nimport Sound from 'react-native-sound';\nimport { AudioRecorder, AudioUtils } from 'react-native-audio';\nexport class GetAudio extends Component {\n  constructor() {\n    super();\n\n    this.onClickOutSide = e => {\n      if (this.ref && !this.ref.contains(e.target)) {\n        console.log(\"Here click out side login form!\");\n        this.setState({\n          showUserFrom: false,\n          showUserMenu: false\n        });\n      }\n    };\n\n    this.state = {\n      currentTime: 0.0,\n      recording: false,\n      paused: false,\n      stoppedRecording: false,\n      finished: false,\n      audioPath: AudioUtils.DocumentDirectoryPath + '/test.aac',\n      hasPermission: undefined\n    };\n  }\n\n  prepareRecordingPath(audioPath) {\n    AudioRecorder.prepareRecordingAtPath(audioPath, {\n      SampleRate: 22050,\n      Channels: 1,\n      AudioQuality: \"Low\",\n      AudioEncoding: \"aac\",\n      AudioEncodingBitRate: 32000\n    });\n  }\n\n  componentDidMount() {\n    window.addEventListener('mousedown', this.onClickOutSide);\n    console.log('Didmount');\n    AudioRecorder.requestAuthorization().then(isAuthorised => {\n      this.setState({\n        hasPermission: isAuthorised\n      });\n      if (!isAuthorised) return;\n      this.prepareRecordingPath(this.state.audioPath);\n\n      AudioRecorder.onProgress = data => {\n        this.setState({\n          currentTime: Math.floor(data.currentTime)\n        });\n      };\n\n      AudioRecorder.onFinished = data => {\n        // Android callback comes in the form of a promise instead.\n        if (Platform.OS === 'ios') {\n          this._finishRecording(data.status === \"OK\", data.audioFileURL, data.audioFileSize);\n        }\n      };\n    });\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('mousedown', this.onClickOutSide);\n    console.log('Unmount');\n  }\n\n  _renderButton(title, onPress, active) {\n    var style = active ? styles.activeButtonText : styles.buttonText;\n    return /*#__PURE__*/React.createElement(TouchableHighlight, {\n      style: styles.button,\n      onPress: onPress,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Text, {\n      style: style,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }\n    }, title));\n  }\n\n  _renderPauseButton(onPress, active) {\n    var style = active ? styles.activeButtonText : styles.buttonText;\n    var title = this.state.paused ? \"RESUME\" : \"PAUSE\";\n    return /*#__PURE__*/React.createElement(TouchableHighlight, {\n      style: styles.button,\n      onPress: onPress,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Text, {\n      style: style,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }\n    }, title));\n  }\n\n  async _pause() {\n    if (!this.state.recording) {\n      console.warn('Can\\'t pause, not recording!');\n      return;\n    }\n\n    try {\n      const filePath = await AudioRecorder.pauseRecording();\n      this.setState({\n        paused: true\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  async _resume() {\n    if (!this.state.paused) {\n      console.warn('Can\\'t resume, not paused!');\n      return;\n    }\n\n    try {\n      await AudioRecorder.resumeRecording();\n      this.setState({\n        paused: false\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  async _stop() {\n    if (!this.state.recording) {\n      console.warn('Can\\'t stop, not recording!');\n      return;\n    }\n\n    this.setState({\n      stoppedRecording: true,\n      recording: false,\n      paused: false\n    });\n\n    try {\n      const filePath = await AudioRecorder.stopRecording();\n\n      if (Platform.OS === 'android') {\n        this._finishRecording(true, filePath);\n      }\n\n      return filePath;\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  async _play() {\n    if (this.state.recording) {\n      await this._stop();\n    } // These timeouts are a hacky workaround for some issues with react-native-sound.\n    // See https://github.com/zmxv/react-native-sound/issues/89.\n\n\n    setTimeout(() => {\n      var sound = new Sound(this.state.audioPath, '', error => {\n        if (error) {\n          console.log('failed to load the sound', error);\n        }\n      });\n      setTimeout(() => {\n        sound.play(success => {\n          if (success) {\n            console.log('successfully finished playing');\n          } else {\n            console.log('playback failed due to audio decoding errors');\n          }\n        });\n      }, 100);\n    }, 100);\n  }\n\n  async _record() {\n    if (this.state.recording) {\n      console.warn('Already recording!');\n      return;\n    }\n\n    if (!this.state.hasPermission) {\n      console.warn('Can\\'t record, no permission granted!');\n      return;\n    }\n\n    if (this.state.stoppedRecording) {\n      this.prepareRecordingPath(this.state.audioPath);\n    }\n\n    this.setState({\n      recording: true,\n      paused: false\n    });\n\n    try {\n      const filePath = await AudioRecorder.startRecording();\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  _finishRecording(didSucceed, filePath, fileSize) {\n    this.setState({\n      finished: didSucceed\n    });\n    console.log(`Finished recording of duration ${this.state.currentTime} seconds at path: ${filePath} and size of ${fileSize || 0} bytes`);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(View, {\n      style: styles.container,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(View, {\n      style: styles.controls,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 15\n      }\n    }, this._renderButton(\"RECORD\", () => {\n      this._record();\n    }, this.state.recording), this._renderButton(\"PLAY\", () => {\n      this._play();\n    }), this._renderButton(\"STOP\", () => {\n      this._stop();\n    }), this._renderPauseButton(() => {\n      this.state.paused ? this._resume() : this._pause();\n    }), /*#__PURE__*/React.createElement(Text, {\n      style: styles.progressText,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 17\n      }\n    }, this.state.currentTime, \"s\")));\n  }\n\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#2b608a\"\n  },\n  controls: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    flex: 1\n  },\n  progressText: {\n    paddingTop: 50,\n    fontSize: 50,\n    color: \"#fff\"\n  },\n  button: {\n    padding: 20\n  },\n  disabledButtonText: {\n    color: '#eee'\n  },\n  buttonText: {\n    fontSize: 20,\n    color: \"#fff\"\n  },\n  activeButtonText: {\n    fontSize: 20,\n    color: \"#B81F00\"\n  }\n});\nexport default GetAudio;","map":{"version":3,"sources":["C:/myProJects/Server/weatherapp/src/components/GetAudio.js"],"names":["React","Component","_","AppRegistry","StyleSheet","Text","View","TouchableHighlight","Platform","PermissionsAndroid","Sound","AudioRecorder","AudioUtils","GetAudio","constructor","onClickOutSide","e","ref","contains","target","console","log","setState","showUserFrom","showUserMenu","state","currentTime","recording","paused","stoppedRecording","finished","audioPath","DocumentDirectoryPath","hasPermission","undefined","prepareRecordingPath","prepareRecordingAtPath","SampleRate","Channels","AudioQuality","AudioEncoding","AudioEncodingBitRate","componentDidMount","window","addEventListener","requestAuthorization","then","isAuthorised","onProgress","data","Math","floor","onFinished","OS","_finishRecording","status","audioFileURL","audioFileSize","componentWillUnmount","removeEventListener","_renderButton","title","onPress","active","style","styles","activeButtonText","buttonText","button","_renderPauseButton","_pause","warn","filePath","pauseRecording","error","_resume","resumeRecording","_stop","stopRecording","_play","setTimeout","sound","play","success","_record","startRecording","didSucceed","fileSize","render","container","controls","progressText","create","flex","backgroundColor","justifyContent","alignItems","paddingTop","fontSize","color","padding","disabledButtonText"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\n// import defaultImg from '../images/logoSvg.svg';\r\nimport _ from 'lodash';\r\nimport {\r\n    AppRegistry,\r\n    StyleSheet,\r\n    Text,\r\n    View,\r\n    TouchableHighlight,\r\n    Platform,\r\n    PermissionsAndroid,\r\n  } from 'react-native';\r\n  \r\n  import Sound from 'react-native-sound';\r\n  import {AudioRecorder, AudioUtils} from 'react-native-audio';\r\n\r\n\r\nexport class GetAudio extends Component {\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            currentTime: 0.0,\r\n            recording: false,\r\n            paused: false,\r\n            stoppedRecording: false,\r\n            finished: false,\r\n            audioPath: AudioUtils.DocumentDirectoryPath + '/test.aac',\r\n            hasPermission: undefined,\r\n        }\r\n    }\r\n    prepareRecordingPath(audioPath){\r\n        AudioRecorder.prepareRecordingAtPath(audioPath, {\r\n          SampleRate: 22050,\r\n          Channels: 1,\r\n          AudioQuality: \"Low\",\r\n          AudioEncoding: \"aac\",\r\n          AudioEncodingBitRate: 32000\r\n        });\r\n      }\r\n    onClickOutSide = (e) => {\r\n        if(this.ref && !this.ref.contains(e.target)){\r\n            console.log(\"Here click out side login form!\");\r\n            this.setState({\r\n                showUserFrom: false,\r\n                showUserMenu: false\r\n            })\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        window.addEventListener('mousedown', this.onClickOutSide);\r\n        console.log('Didmount');\r\n        AudioRecorder.requestAuthorization().then((isAuthorised) => {\r\n            this.setState({ hasPermission: isAuthorised });\r\n    \r\n            if (!isAuthorised) return;\r\n    \r\n            this.prepareRecordingPath(this.state.audioPath);\r\n    \r\n            AudioRecorder.onProgress = (data) => {\r\n              this.setState({currentTime: Math.floor(data.currentTime)});\r\n            };\r\n    \r\n            AudioRecorder.onFinished = (data) => {\r\n              // Android callback comes in the form of a promise instead.\r\n              if (Platform.OS === 'ios') {\r\n                this._finishRecording(data.status === \"OK\", data.audioFileURL, data.audioFileSize);\r\n              }\r\n            };\r\n          });\r\n    }\r\n    componentWillUnmount(){\r\n        window.removeEventListener('mousedown', this.onClickOutSide);\r\n        console.log('Unmount');\r\n    }\r\n    _renderButton(title, onPress, active) {\r\n        var style = (active) ? styles.activeButtonText : styles.buttonText;\r\n  \r\n        return (\r\n          <TouchableHighlight style={styles.button} onPress={onPress}>\r\n            <Text style={style}>\r\n              {title}\r\n            </Text>\r\n          </TouchableHighlight>\r\n        );\r\n      }\r\n  \r\n      _renderPauseButton(onPress, active) {\r\n        var style = (active) ? styles.activeButtonText : styles.buttonText;\r\n        var title = this.state.paused ? \"RESUME\" : \"PAUSE\";\r\n        return (\r\n          <TouchableHighlight style={styles.button} onPress={onPress}>\r\n            <Text style={style}>\r\n              {title}\r\n            </Text>\r\n          </TouchableHighlight>\r\n        );\r\n      }\r\n  \r\n      async _pause() {\r\n        if (!this.state.recording) {\r\n          console.warn('Can\\'t pause, not recording!');\r\n          return;\r\n        }\r\n  \r\n        try {\r\n          const filePath = await AudioRecorder.pauseRecording();\r\n          this.setState({paused: true});\r\n        } catch (error) {\r\n          console.error(error);\r\n        }\r\n      }\r\n  \r\n      async _resume() {\r\n        if (!this.state.paused) {\r\n          console.warn('Can\\'t resume, not paused!');\r\n          return;\r\n        }\r\n  \r\n        try {\r\n          await AudioRecorder.resumeRecording();\r\n          this.setState({paused: false});\r\n        } catch (error) {\r\n          console.error(error);\r\n        }\r\n      }\r\n  \r\n      async _stop() {\r\n        if (!this.state.recording) {\r\n          console.warn('Can\\'t stop, not recording!');\r\n          return;\r\n        }\r\n  \r\n        this.setState({stoppedRecording: true, recording: false, paused: false});\r\n  \r\n        try {\r\n          const filePath = await AudioRecorder.stopRecording();\r\n  \r\n          if (Platform.OS === 'android') {\r\n            this._finishRecording(true, filePath);\r\n          }\r\n          return filePath;\r\n        } catch (error) {\r\n          console.error(error);\r\n        }\r\n      }\r\n  \r\n      async _play() {\r\n        if (this.state.recording) {\r\n          await this._stop();\r\n        }\r\n  \r\n        // These timeouts are a hacky workaround for some issues with react-native-sound.\r\n        // See https://github.com/zmxv/react-native-sound/issues/89.\r\n        setTimeout(() => {\r\n          var sound = new Sound(this.state.audioPath, '', (error) => {\r\n            if (error) {\r\n              console.log('failed to load the sound', error);\r\n            }\r\n          });\r\n  \r\n          setTimeout(() => {\r\n            sound.play((success) => {\r\n              if (success) {\r\n                console.log('successfully finished playing');\r\n              } else {\r\n                console.log('playback failed due to audio decoding errors');\r\n              }\r\n            });\r\n          }, 100);\r\n        }, 100);\r\n      }\r\n  \r\n      async _record() {\r\n        if (this.state.recording) {\r\n          console.warn('Already recording!');\r\n          return;\r\n        }\r\n  \r\n        if (!this.state.hasPermission) {\r\n          console.warn('Can\\'t record, no permission granted!');\r\n          return;\r\n        }\r\n  \r\n        if(this.state.stoppedRecording){\r\n          this.prepareRecordingPath(this.state.audioPath);\r\n        }\r\n  \r\n        this.setState({recording: true, paused: false});\r\n  \r\n        try {\r\n          const filePath = await AudioRecorder.startRecording();\r\n        } catch (error) {\r\n          console.error(error);\r\n        }\r\n      }\r\n  \r\n      _finishRecording(didSucceed, filePath, fileSize) {\r\n        this.setState({ finished: didSucceed });\r\n        console.log(`Finished recording of duration ${this.state.currentTime} seconds at path: ${filePath} and size of ${fileSize || 0} bytes`);\r\n      }\r\n   \r\n    render() {\r\n        return (\r\n            <View style={styles.container}>\r\n              <View style={styles.controls}>\r\n                {this._renderButton(\"RECORD\", () => {this._record()}, this.state.recording )}\r\n                {this._renderButton(\"PLAY\", () => {this._play()} )}\r\n                {this._renderButton(\"STOP\", () => {this._stop()} )}\r\n                {/* {this._renderButton(\"PAUSE\", () => {this._pause()} )} */}\r\n                {this._renderPauseButton(() => {this.state.paused ? this._resume() : this._pause()})}\r\n                <Text style={styles.progressText}>{this.state.currentTime}s</Text>\r\n              </View>\r\n            </View>\r\n          );\r\n    }\r\n}\r\nvar styles = StyleSheet.create({\r\n    container: {\r\n      flex: 1,\r\n      backgroundColor: \"#2b608a\",\r\n    },\r\n    controls: {\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      flex: 1,\r\n    },\r\n    progressText: {\r\n      paddingTop: 50,\r\n      fontSize: 50,\r\n      color: \"#fff\"\r\n    },\r\n    button: {\r\n      padding: 20\r\n    },\r\n    disabledButtonText: {\r\n      color: '#eee'\r\n    },\r\n    buttonText: {\r\n      fontSize: 20,\r\n      color: \"#fff\"\r\n    },\r\n    activeButtonText: {\r\n      fontSize: 20,\r\n      color: \"#B81F00\"\r\n    }\r\n\r\n  });\r\nexport default GetAudio\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}