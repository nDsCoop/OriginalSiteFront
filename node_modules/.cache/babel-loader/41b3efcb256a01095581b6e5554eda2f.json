{"ast":null,"code":"import _classCallCheck from\"C:\\\\myProJects\\\\Server\\\\weatherapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\myProJects\\\\Server\\\\weatherapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"C:\\\\myProJects\\\\Server\\\\weatherapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"C:\\\\myProJects\\\\Server\\\\weatherapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React,{Component}from'react';import defaultImg from\"../images/logoSvg.svg\";import _ from'lodash';import classNames from'classnames';import{IconButton}from'@material-ui/core';import{MdSettings,MdDeleteForever}from'react-icons/md';export var UserBar=/*#__PURE__*/function(_Component){_inherits(UserBar,_Component);var _super=_createSuper(UserBar);function UserBar(){var _this;_classCallCheck(this,UserBar);_this=_super.call(this);_this.onClickOutSide=function(e){if(_this.ref&&!_this.ref.contains(e.target)){console.log(\"Here click out side login form!\");_this.setState({showUserFrom:false,showUserMenu:false});}};_this.onSubmit=function(e){var store=_this.props.store;var _this$state=_this.state,user=_this$state.user,isLogin=_this$state.isLogin;e.preventDefault();_this.setState({message:null},function(){if(isLogin){store.login(user.email,user.password).then(function(user){_this.setState({message:null,showUserFrom:false,showUserMenu:false});}).catch(function(err){console.log(err);_this.setState({message:{body:err,type:'error'}});});}else{store.register(user).then(function(_){_this.setState({message:{body:'User created',type:'Success'}},function(){// now login this user\nstore.login(user.email,user.password).then(function(user){//\n_this.setState({message:null,showUserFrom:false,showUserMenu:false});}).catch(function(err){console.log(err);_this.setState({message:{body:err,type:'error'}});});});});}});};_this.onTxtfieldChange=function(e){var user=_this.state.user;var field=e.target.name;user[field]=e.target.value;_this.setState({user:user});};_this.state={message:null,showUserFrom:false,isLogin:true,user:{email:'',password:'',name:''}};return _this;}_createClass(UserBar,[{key:\"componentDidMount\",value:function componentDidMount(){window.addEventListener('mousedown',this.onClickOutSide);console.log('Didmount');}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){window.removeEventListener('mousedown',this.onClickOutSide);console.log('Unmount');}},{key:\"render\",value:function render(){var _this2=this;var _this$state2=this.state,user=_this$state2.user,message=_this$state2.message,isLogin=_this$state2.isLogin;var store=this.props.store;var me=store.getCurrentUser();var profileImg=_.get(me,'avatar');var name=_.get(me,'name');var email=_.get(me,'email');var avatar=_.get(me,'avatar');return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:\"user-bar\"},!me?/*#__PURE__*/React.createElement(\"button\",{type:\"button\",onClick:function onClick(e){return _this2.setState({showUserFrom:true});},className:\"login-btn\"},\"Sign In\"):null,/*#__PURE__*/React.createElement(\"div\",{className:\"name-user\"},_.get(me,'name')),/*#__PURE__*/React.createElement(\"img\",{src:profileImg?profileImg:defaultImg,onClick:function onClick(e){return _this2.setState({showUserMenu:true});},alt:\"user-img\",className:\"img-user\"}),me&&this.state.showUserMenu?/*#__PURE__*/React.createElement(\"div\",{className:\"user-form-1\",ref:function ref(_ref){return _this2.ref=_ref;}},/*#__PURE__*/React.createElement(\"form\",{onSubmit:this.onSubmit},/*#__PURE__*/React.createElement(\"ul\",{className:\"form-container\"},/*#__PURE__*/React.createElement(\"li\",null,/*#__PURE__*/React.createElement(\"h4\",null,\"Your Account\")),/*#__PURE__*/React.createElement(\"li\",{className:\"header-menu\"},/*#__PURE__*/React.createElement(\"img\",{src:avatar,alt:\"user-img\"}),/*#__PURE__*/React.createElement(\"span\",null,name)),/*#__PURE__*/React.createElement(\"div\",{className:\"body-menu\"},/*#__PURE__*/React.createElement(\"p\",{htmlFor:\"email\"},\"Name: \",name),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(IconButton,{style:{color:\"rgba(0, 0, 0, 0.5)\"}},/*#__PURE__*/React.createElement(MdSettings,null)))),/*#__PURE__*/React.createElement(\"div\",{className:\"body-menu\"},/*#__PURE__*/React.createElement(\"p\",{htmlFor:\"email\"},\"Eamil: \",email),/*#__PURE__*/React.createElement(\"div\",null,\" \",/*#__PURE__*/React.createElement(IconButton,{style:{color:\"rgba(0, 0, 0, 0.5)\"}},/*#__PURE__*/React.createElement(MdSettings,null)))),/*#__PURE__*/React.createElement(\"div\",{className:\"footer-menu\"},/*#__PURE__*/React.createElement(\"div\",{className:\"img\"},/*#__PURE__*/React.createElement(\"img\",{style:{maxHeight:\"5rem\",maxWidth:\"5rem\"},src:defaultImg,alt:\"nds\"})),/*#__PURE__*/React.createElement(\"div\",{className:\"btn-cc\"},/*#__PURE__*/React.createElement(\"li\",null,/*#__PURE__*/React.createElement(\"button\",{onClick:function onClick(){return store.signOut();},type:\"button\",className:\"login-btn\"},\"Signout\"))))))):null,!me&&this.state.showUserFrom?/*#__PURE__*/React.createElement(\"div\",{className:\"user-form\",ref:function ref(_ref2){return _this2.ref=_ref2;}},/*#__PURE__*/React.createElement(\"form\",{onSubmit:this.onSubmit},/*#__PURE__*/React.createElement(\"ul\",{className:\"form-container\"},/*#__PURE__*/React.createElement(\"li\",null,/*#__PURE__*/React.createElement(\"h4\",null,\"Sign In / Register Your Account\")),/*#__PURE__*/React.createElement(\"li\",null,message?/*#__PURE__*/React.createElement(\"p\",{className:classNames('app-msg',_.get(message,'type'))},_.get(message,'body')):null),!isLogin?/*#__PURE__*/React.createElement(\"li\",null,/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"name\"},\"Name\"),/*#__PURE__*/React.createElement(\"input\",{onChange:function onChange(e){return _this2.onTxtfieldChange(e);},placeholder:\"Your-Name\",required:true,type:\"text\",name:\"name\",value:_.get(user,'name'),id:\"name\"})):null,/*#__PURE__*/React.createElement(\"li\",null,/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"email\"},\"Email\"),/*#__PURE__*/React.createElement(\"input\",{onChange:function onChange(e){return _this2.onTxtfieldChange(e);},placeholder:\"example.vn@nds.com\",required:true,type:\"email\",name:\"email\",value:_.get(user,'email'),id:\"email\"})),/*#__PURE__*/React.createElement(\"li\",null,/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"password\"},\"Password\"),/*#__PURE__*/React.createElement(\"input\",{onChange:function onChange(e){return _this2.onTxtfieldChange(e);},autoComplete:'off',placeholder:\"Your-password\",required:true,type:\"password\",value:_.get(user,'password'),id:\"password\",name:\"password\"})),/*#__PURE__*/React.createElement(\"div\",{className:\"footer-login\"},/*#__PURE__*/React.createElement(\"div\",{className:\"img\"},/*#__PURE__*/React.createElement(\"img\",{style:{maxHeight:\"5rem\",maxWidth:\"5rem\"},src:defaultImg,alt:\"nds\"})),/*#__PURE__*/React.createElement(\"div\",{className:\"btn-cc\"},/*#__PURE__*/React.createElement(\"li\",null,/*#__PURE__*/React.createElement(\"button\",{type:\"submit\",className:\"login-btn\"},isLogin?'Log In':'New Account')),isLogin?/*#__PURE__*/React.createElement(\"li\",null,/*#__PURE__*/React.createElement(\"button\",{onClick:function onClick(){_this2.setState({isLogin:false});},className:\"login-btn\"},\"Create new account?\")):null))))):null));}}]);return UserBar;}(Component);export default UserBar;","map":{"version":3,"sources":["C:/myProJects/Server/weatherapp/src/components/UserBar.js"],"names":["React","Component","_","classNames","IconButton","MdSettings","MdDeleteForever","UserBar","onClickOutSide","e","ref","contains","target","console","log","setState","showUserFrom","showUserMenu","onSubmit","store","props","state","user","isLogin","preventDefault","message","login","email","password","then","catch","err","body","type","register","onTxtfieldChange","field","name","value","window","addEventListener","removeEventListener","me","getCurrentUser","profileImg","get","avatar","defaultImg","color","maxHeight","maxWidth","signOut"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport defaultImg from '../images/logoSvg.svg';\r\nimport _ from 'lodash';\r\nimport classNames from 'classnames';\r\nimport { IconButton } from '@material-ui/core';\r\nimport { MdSettings, MdDeleteForever } from 'react-icons/md';\r\n\r\n\r\n\r\nexport class UserBar extends Component {\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            message: null,\r\n            showUserFrom : false,\r\n            isLogin: true,\r\n            user: {\r\n                email: '',\r\n                password: '',\r\n                name: ''\r\n            }\r\n        }\r\n    }\r\n    \r\n    onClickOutSide = (e) => {\r\n        if(this.ref && !this.ref.contains(e.target)){\r\n            console.log(\"Here click out side login form!\");\r\n            this.setState({\r\n                showUserFrom: false,\r\n                showUserMenu: false\r\n            })\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        window.addEventListener('mousedown', this.onClickOutSide);\r\n        console.log('Didmount');\r\n    }\r\n    componentWillUnmount(){\r\n        window.removeEventListener('mousedown', this.onClickOutSide);\r\n        console.log('Unmount');\r\n    }\r\n    onSubmit = (e) => {\r\n        const { store } = this.props;\r\n        const { user , isLogin } = this.state;\r\n        e.preventDefault();\r\n        this.setState({\r\n            message: null\r\n        }, () => {\r\n            if(isLogin){\r\n                store.login(user.email, user.password).then((user) => {\r\n                    this.setState({\r\n                        message: null,\r\n                        showUserFrom: false,\r\n                        showUserMenu: false\r\n                    })\r\n    \r\n                }).catch((err) => {\r\n                    console.log(err);\r\n                    this.setState({\r\n                        message: {\r\n                            body: err,\r\n                            type: 'error'\r\n                        }\r\n                    })\r\n                });\r\n            } else {\r\n                store.register(user).then((_) => {\r\n                    this.setState({\r\n                        message: {\r\n                            body: 'User created',\r\n                            type: 'Success'\r\n                        }\r\n                    }, () => {\r\n                        // now login this user\r\n                        store.login(user.email, user.password).then((user) => { \r\n                        //\r\n                        this.setState({\r\n                            message: null,\r\n                            showUserFrom: false,\r\n                            showUserMenu: false\r\n                        })\r\n        \r\n                    }).catch((err) => {\r\n                        console.log(err);\r\n                        this.setState({\r\n                            message: {\r\n                                body: err,\r\n                                type: 'error'\r\n                            }\r\n                        })\r\n                        });\r\n                    })\r\n                });\r\n            }\r\n           \r\n        })\r\n\r\n    }\r\n\r\n    onTxtfieldChange = (e) => {\r\n        let { user } = this.state;\r\n        const field = e.target.name;\r\n        user[field] = e.target.value;\r\n        this.setState({\r\n            user: user\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { user, message, isLogin } = this.state;\r\n        const { store } = this.props;\r\n        const me = store.getCurrentUser();\r\n        const profileImg = _.get(me, 'avatar');\r\n        const name = _.get(me,'name');\r\n        const email = _.get(me, 'email');\r\n        const avatar = _.get(me , 'avatar');\r\n        return (\r\n    <>\r\n        <div className=\"user-bar\">\r\n            { !me ? <button type=\"button\" onClick={(e) => this.setState({showUserFrom: true})} className=\"login-btn\">Sign In</button> : null}\r\n            <div className=\"name-user\">{_.get(me, 'name')}</div>\r\n            <img src={profileImg ? profileImg : defaultImg} onClick={(e) => this.setState({showUserMenu: true})}  alt=\"user-img\" className=\"img-user\"></img>\r\n\r\n            { me && this.state.showUserMenu ?  <div className=\"user-form-1\" ref = {(ref) => this.ref = ref}>\r\n                <form onSubmit= {this.onSubmit}>\r\n                <ul className=\"form-container\">\r\n                    <li>\r\n                        <h4>Your Account</h4>\r\n                    </li>\r\n                    {/* <li>\r\n                        { message ? <p className={classNames('app-msg', _.get(message, 'type'))}>\r\n                            {_.get(message, 'body')}\r\n                        </p> : null } \r\n                    </li> */}\r\n                    <li className =\"header-menu\">\r\n                        <img src={avatar} alt=\"user-img\" />\r\n                        <span>{name}</span>\r\n                    </li>\r\n                    <div className =\"body-menu\">\r\n                        <p htmlFor=\"email\">Name: {name}</p>\r\n                        <div>\r\n                        <IconButton  style={{ color: \"rgba(0, 0, 0, 0.5)\"}}>\r\n                            <MdSettings />\r\n                        </IconButton>\r\n                        </div>\r\n                    </div>\r\n                    <div className =\"body-menu\">\r\n                        <p htmlFor=\"email\">Eamil: {email}</p>\r\n                        <div> <IconButton  style={{ color: \"rgba(0, 0, 0, 0.5)\"}}>\r\n                            <MdSettings />\r\n                        </IconButton></div>\r\n                    </div>\r\n                    {/* <li>\r\n                        <label htmlFor=\"text\">\r\n                        UserName\r\n                        </label>\r\n                        <input onChange={(e) => this.onTxtfieldChange(e) } \r\n                        required type=\"text\" name=\"name\"\r\n                        value = {_.get(user, 'name')} \r\n                        id=\"name\" ></input>\r\n                        <button type=\"button\" className=\"login-btn\">Change</button>\r\n                    </li> */}\r\n                    {/* <li>\r\n                        <label htmlFor=\"email\">\r\n                        Email\r\n                        </label>\r\n                        <input onChange={(e) => this.onTxtfieldChange(e) } \r\n                        autoComplete = {email}\r\n                        required type=\"email\" name=\"email\"\r\n                        value = {_.get(user, 'email')} \r\n                        id=\"email\" ></input>\r\n                    </li> */}\r\n                    {/* <li>\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input onChange={(e) => this.onTxtfieldChange(e) }\r\n                        autoComplete = {'off'}  \r\n                        required type=\"password\"\r\n                        value = {_.get(user, 'password')} \r\n                        id=\"password\" name=\"password\" ></input>\r\n                        <button type=\"button\" className=\"login-btn\">Change</button>\r\n                    </li> */}\r\n                    \r\n                    <div className=\"footer-menu\">\r\n                        <div className=\"img\">\r\n                            <img style={{maxHeight: \"5rem\", maxWidth: \"5rem\"}} src={defaultImg} alt=\"nds\"/>\r\n                        </div>\r\n                        <div className=\"btn-cc\">\r\n                        <li>\r\n                        <button onClick = { () => store.signOut()}\r\n                        type=\"button\" className=\"login-btn\">Signout</button>\r\n                        </li>\r\n                    {/* <li>\r\n                        <button className=\"login-btn\" >Create new account?</button>\r\n                    </li> */}\r\n                        </div>\r\n                    </div>\r\n                </ul>\r\n                </form>\r\n                </div>\r\n                :\r\n                null\r\n            }\r\n             { !me && this.state.showUserFrom ? <div className=\"user-form\" ref = {(ref) => this.ref = ref}>\r\n                <form onSubmit= {this.onSubmit}>\r\n                <ul className=\"form-container\">\r\n                    <li>\r\n                        <h4>Sign In / Register Your Account</h4>\r\n                    </li>\r\n                    <li>\r\n                        { message ? <p className={classNames('app-msg', _.get(message, 'type'))}>\r\n                            {_.get(message, 'body')}\r\n                        </p> : null } \r\n                    </li>\r\n                    {\r\n                        !isLogin ? <li>\r\n                        <label htmlFor=\"name\">\r\n                        Name\r\n                        </label>\r\n                        <input onChange={(e) => this.onTxtfieldChange(e) } \r\n                        placeholder=\"Your-Name\" \r\n                        required type=\"text\" name=\"name\"\r\n                        value = {_.get(user, 'name')} \r\n                        id=\"name\" ></input>\r\n                    </li>\r\n                    :\r\n                    null\r\n                    }\r\n                    \r\n                    <li>\r\n                        <label htmlFor=\"email\">\r\n                        Email\r\n                        </label>\r\n                        <input onChange={(e) => this.onTxtfieldChange(e) } \r\n                        placeholder=\"example.vn@nds.com\" \r\n                        required type=\"email\" name=\"email\"\r\n                        value = {_.get(user, 'email')} \r\n                        id=\"email\" ></input>\r\n                    </li>\r\n                    <li>\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input onChange={(e) => this.onTxtfieldChange(e) }\r\n                        autoComplete = {'off'} \r\n                        placeholder=\"Your-password\" \r\n                        required type=\"password\"\r\n                        value = {_.get(user, 'password')} \r\n                        id=\"password\" name=\"password\" ></input>\r\n                    </li>\r\n                    <div className=\"footer-login\">\r\n                        <div className=\"img\">\r\n                            <img style={{maxHeight: \"5rem\", maxWidth: \"5rem\"}} src={defaultImg} alt=\"nds\"/>\r\n                        </div>\r\n                        <div className=\"btn-cc\">\r\n                        <li>\r\n                        <button type=\"submit\" className=\"login-btn\">{isLogin ? 'Log In' : 'New Account'}</button>\r\n                    </li>\r\n                    {isLogin ? <li>\r\n                       <button onClick = {() => {\r\n                          this.setState({\r\n                              isLogin: false,\r\n                          })\r\n                      }}\r\n                      className=\"login-btn\" >Create new account?</button>\r\n                      </li> : null }\r\n                        </div>\r\n                    </div>\r\n                </ul>\r\n                </form>\r\n                </div>\r\n                :\r\n                null\r\n        }\r\n \r\n           \r\n           \r\n        \r\n        </div>\r\n    </>\r\n    )\r\n    }\r\n}\r\n\r\nexport default UserBar\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}