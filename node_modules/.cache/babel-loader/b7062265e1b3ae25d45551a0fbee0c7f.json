{"ast":null,"code":"var _jsxFileName = \"C:\\\\myProJects\\\\Server\\\\weatherapp\\\\src\\\\components\\\\MainVideo.js\";\nimport React, { Component } from 'react';\nimport io from 'socket.io-client';\nexport class MainVideo extends Component {\n  constructor(props) {\n    super(props);\n\n    this.createOffer = () => {\n      console.log(\"Offer\");\n      this.pc.createOffer({\n        offerToReceiveVideo: 1\n      }).then(sdp => {\n        console.log(JSON.stringify(sdp));\n        this.pc.setLocalDescription(sdp);\n      }, e => {});\n    };\n\n    this.setRemoteDescription = () => {\n      const desc = JSON.parse(this.textref.value);\n      this.pc.setRemoteDescription(new RTCSessionDescription(desc));\n    };\n\n    this.createAnswer = () => {\n      console.log('Answer');\n      this.pc.createAnswer({\n        offerToReceiveVideo: 1\n      }).then(sdp => {\n        console.log(JSON.stringify(sdp));\n        this.pc.setLocalDescription(sdp);\n      }, e => {});\n    };\n\n    this.addCandidate = () => {\n      const candidate = JSON.parse(this.textref.value);\n      console.log('Adding cadidata: ', candidate);\n      this.pc.addIceCandidate(new RTCIceCandidate(candidate));\n    };\n\n    this.localVideoref = React.createRef();\n    this.remoteVideoref = React.createRef();\n    this.socket = null;\n  } // initSocket = () => {\n  //     const socket = io(socketUrl)\n  //     socket.on('connect', () => {\n  //         console.log(\"connected\");\n  //     })\n  //     this.setState({socket})\n  // }\n\n\n  componentDidMount() {\n    this.socket = io('/webrtcPeer', {\n      path: '/webrtc',\n      query: {}\n    });\n    const pc_config = null;\n    this.pc = new RTCPeerConnection(pc_config);\n\n    this.pc.onicecandidate = e => {\n      if (e.candidate) console.log(JSON.stringify(e.candidate));\n    };\n\n    this.pc.oniceconnectionstatechange = e => {\n      console.log(e);\n    };\n\n    this.pc.onaddstream = e => {\n      this.remoteVideoref.current.srcObject = e.stream;\n    };\n\n    const constraints = {\n      audio: true,\n      video: true\n    };\n\n    const success = stream => {\n      window.localStream = stream;\n      this.localVideoref.current.srcObject = stream;\n      this.pc.onaddstream(stream);\n    };\n\n    const failure = e => {\n      console.log(\"Error: \", e); //\n    };\n\n    navigator.mediaDevices.getUserMedia(constraints).then(success).catch(failure);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"video\", {\n      ref: this.localVideoref,\n      style: {\n        width: 240,\n        height: 240,\n        margin: 5,\n        backgroundColor: 'black'\n      },\n      autoPlay: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"video\", {\n      ref: this.remoteVideoref,\n      style: {\n        width: 240,\n        height: 240,\n        margin: 5,\n        backgroundColor: 'black'\n      },\n      autoPlay: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.createOffer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }\n    }, \"Offer\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.createAnswer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }\n    }, \"Answer\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"textarea\", {\n      style: {\n        height: '2rem',\n        width: '23rem'\n      },\n      ref: ref => {\n        this.textref = ref;\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.setRemoteDescription,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }\n    }, \"Set Remoete Desc\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.addCandidate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }\n    }, \"Add Candidate\"));\n  }\n\n}\nexport default MainVideo;","map":{"version":3,"sources":["C:/myProJects/Server/weatherapp/src/components/MainVideo.js"],"names":["React","Component","io","MainVideo","constructor","props","createOffer","console","log","pc","offerToReceiveVideo","then","sdp","JSON","stringify","setLocalDescription","e","setRemoteDescription","desc","parse","textref","value","RTCSessionDescription","createAnswer","addCandidate","candidate","addIceCandidate","RTCIceCandidate","localVideoref","createRef","remoteVideoref","socket","componentDidMount","path","query","pc_config","RTCPeerConnection","onicecandidate","oniceconnectionstatechange","onaddstream","current","srcObject","stream","constraints","audio","video","success","window","localStream","failure","navigator","mediaDevices","getUserMedia","catch","render","width","height","margin","backgroundColor","ref"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\n\r\nimport io from 'socket.io-client';\r\n\r\nexport class MainVideo extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.localVideoref = React.createRef();\r\n        this.remoteVideoref = React.createRef();\r\n        this.socket = null;\r\n            \r\n       \r\n    }\r\n \r\n    // initSocket = () => {\r\n    //     const socket = io(socketUrl)\r\n    //     socket.on('connect', () => {\r\n    //         console.log(\"connected\");\r\n    //     })\r\n    //     this.setState({socket})\r\n    // }\r\n\r\n    componentDidMount(){\r\n\r\n        this.socket = io(\r\n            '/webrtcPeer',\r\n            {\r\n                path: '/webrtc',\r\n                query: {}\r\n            }\r\n        )\r\n\r\n\r\n        const pc_config = null\r\n        this.pc = new RTCPeerConnection(pc_config)\r\n        this.pc.onicecandidate = (e) => {\r\n            if(e.candidate) console.log(JSON.stringify(e.candidate))\r\n        }\r\n        this.pc.oniceconnectionstatechange = (e) => {\r\n            console.log(e)\r\n        }\r\n        \r\n        this.pc.onaddstream = (e) => {\r\n            this.remoteVideoref.current.srcObject = e.stream\r\n        }\r\n        const constraints = { audio: true, video: true }\r\n\r\n\r\n        const success = (stream) => {\r\n            window.localStream = stream\r\n            this.localVideoref.current.srcObject = stream\r\n            this.pc.onaddstream(stream)\r\n        }\r\n        const failure = (e) => {\r\n            console.log(\"Error: \", e);\r\n            //\r\n        }\r\n        navigator.mediaDevices.getUserMedia( constraints )\r\n        .then( success )\r\n        .catch( failure )\r\n    }\r\n    createOffer = () => {\r\n        console.log(\"Offer\");\r\n        this.pc.createOffer({offerToReceiveVideo: 1})\r\n        .then(sdp => {\r\n            console.log(JSON.stringify(sdp))\r\n            this.pc.setLocalDescription(sdp)\r\n        }, e => {})\r\n    }\r\n    setRemoteDescription = () => {\r\n        const desc = JSON.parse(this.textref.value)\r\n        this.pc.setRemoteDescription(new RTCSessionDescription(desc))\r\n    }\r\n    createAnswer = () => {\r\n        console.log('Answer');\r\n        this.pc.createAnswer({offerToReceiveVideo: 1})\r\n        .then(sdp => {\r\n            console.log(JSON.stringify(sdp))\r\n            this.pc.setLocalDescription(sdp)\r\n        }, e => {})\r\n    }\r\n    addCandidate = () => {\r\n        const candidate = JSON.parse(this.textref.value)\r\n        console.log('Adding cadidata: ', candidate)\r\n\r\n        this.pc.addIceCandidate(new RTCIceCandidate(candidate))\r\n    }\r\n\r\n    render() {\r\n        \r\n        return (\r\n            <div>\r\n                <video ref={this.localVideoref}\r\n                style={{width: 240, height: 240, margin: 5, backgroundColor: 'black'}}\r\n                autoPlay ></video>\r\n                \r\n                <video ref={this.remoteVideoref}\r\n                style={{width: 240, height: 240, margin: 5, backgroundColor: 'black'}}\r\n                autoPlay ></video>\r\n\r\n                <button onClick={this.createOffer}>Offer</button>\r\n                <button onClick={this.createAnswer}>Answer</button>\r\n                <br/>\r\n                <textarea style={{height:'2rem', width: '23rem'}} ref={ref => { this.textref = ref}}/>\r\n                <br/>\r\n                <button onClick={this.setRemoteDescription}>Set Remoete Desc</button>\r\n                <button onClick={this.addCandidate}>Add Candidate</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default MainVideo\r\n"]},"metadata":{},"sourceType":"module"}