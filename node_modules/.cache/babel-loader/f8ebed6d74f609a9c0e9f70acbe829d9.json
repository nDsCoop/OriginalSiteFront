{"ast":null,"code":"var _jsxFileName = \"C:\\\\myProJects\\\\Server\\\\weatherapp\\\\src\\\\components\\\\MainVideo.js\";\nimport React, { Component } from 'react';\nimport io from 'socket.io-client';\nexport class MainVideo extends Component {\n  constructor(props) {\n    super(props);\n\n    this.sendToPeer = (messageType, payload) => {\n      this.socket.emit((messageType, {\n        socketID: this.socket.id,\n        payload\n      }));\n    };\n\n    this.createOffer = () => {\n      console.log(\"Offer\");\n      this.pc.createOffer({\n        offerToReceiveVideo: 1\n      }).then(sdp => {\n        // console.log(JSON.stringify(sdp))\n        this.pc.setLocalDescription(sdp);\n        this.sendToPeer('offerOrAnswer', sdp);\n      });\n    };\n\n    this.setRemoteDescription = () => {\n      const desc = JSON.parse(this.textref.value);\n      this.pc.setRemoteDescription(new RTCSessionDescription(desc));\n    };\n\n    this.createAnswer = () => {\n      console.log('Answer');\n      this.pc.createAnswer({\n        offerToReceiveVideo: 1\n      }).then(sdp => {\n        // console.log(JSON.stringify(sdp))\n        this.pc.setLocalDescription(sdp);\n        this.sendToPeer('offerOrAnswer', sdp);\n      });\n    };\n\n    this.addCandidate = () => {\n      // const candidate = JSON.parse(this.textref.value)\n      // console.log('Adding cadidata: ', candidate)\n      // this.pc.addIceCandidate(new RTCIceCandidate(candidate))\n      this.candidates.forEach(candidate => {\n        console.log(JSON.stringify(candidate));\n        this.pc.addIceCandidate(new RTCIceCandidate(candidate));\n      });\n    };\n\n    this.localVideoref = React.createRef();\n    this.remoteVideoref = React.createRef();\n    this.socket = null;\n    this.candidates = [];\n  } // initSocket = () => {\n  //     const socket = io(socketUrl)\n  //     socket.on('connect', () => {\n  //         console.log(\"connected\");\n  //     })\n  //     this.setState({socket})\n  // }\n\n\n  componentDidMount() {\n    this.socket = io('/webrtcPeer', {\n      path: '/webrtc',\n      query: {}\n    });\n    this.socket.on('connection-success', success => {\n      console.log('Connected', success);\n    });\n    this.socket.on('offerOrAnswer', sdp => {\n      this.textref.value = JSON.stringify(sdp);\n    });\n    this.socket.on('candidate', candidate => {\n      this.candidates = [...this.candidates, candidate];\n    });\n    const pc_config = null;\n    this.pc = new RTCPeerConnection(pc_config);\n\n    this.pc.onicecandidate = e => {\n      if (e.candidate) {\n        this.sendToPeer('candidate', e.candidate);\n      }\n    };\n\n    this.pc.oniceconnectionstatechange = e => {\n      console.log(e);\n    };\n\n    this.pc.onaddstream = e => {\n      this.remoteVideoref.current.srcObject = e.stream;\n    };\n\n    const constraints = {\n      audio: true,\n      video: true\n    };\n\n    const success = stream => {\n      window.localStream = stream;\n      this.localVideoref.current.srcObject = stream;\n      this.pc.onaddstream(stream);\n    };\n\n    const failure = e => {\n      console.log(\"Error: \", e); //\n    };\n\n    navigator.mediaDevices.getUserMedia(constraints).then(success).catch(failure);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"video\", {\n      ref: this.localVideoref,\n      style: {\n        width: 240,\n        height: 240,\n        margin: 5,\n        backgroundColor: 'black'\n      },\n      autoPlay: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"video\", {\n      ref: this.remoteVideoref,\n      style: {\n        width: 240,\n        height: 240,\n        margin: 5,\n        backgroundColor: 'black'\n      },\n      autoPlay: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.createOffer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }\n    }, \"Offer\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.createAnswer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }\n    }, \"Answer\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"textarea\", {\n      style: {\n        height: '2rem',\n        width: '23rem'\n      },\n      ref: ref => {\n        this.textref = ref;\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.setRemoteDescription,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }\n    }, \"Set Remoete Desc\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.addCandidate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }\n    }, \"Add Candidate\"));\n  }\n\n}\nexport default MainVideo;","map":{"version":3,"sources":["C:/myProJects/Server/weatherapp/src/components/MainVideo.js"],"names":["React","Component","io","MainVideo","constructor","props","sendToPeer","messageType","payload","socket","emit","socketID","id","createOffer","console","log","pc","offerToReceiveVideo","then","sdp","setLocalDescription","setRemoteDescription","desc","JSON","parse","textref","value","RTCSessionDescription","createAnswer","addCandidate","candidates","forEach","candidate","stringify","addIceCandidate","RTCIceCandidate","localVideoref","createRef","remoteVideoref","componentDidMount","path","query","on","success","pc_config","RTCPeerConnection","onicecandidate","e","oniceconnectionstatechange","onaddstream","current","srcObject","stream","constraints","audio","video","window","localStream","failure","navigator","mediaDevices","getUserMedia","catch","render","width","height","margin","backgroundColor","ref"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\n\r\nimport io from 'socket.io-client';\r\n\r\nexport class MainVideo extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.localVideoref = React.createRef();\r\n        this.remoteVideoref = React.createRef();\r\n        this.socket = null;\r\n        this.candidates = [];\r\n        \r\n    }\r\n \r\n    // initSocket = () => {\r\n    //     const socket = io(socketUrl)\r\n    //     socket.on('connect', () => {\r\n    //         console.log(\"connected\");\r\n    //     })\r\n    //     this.setState({socket})\r\n    // }\r\n\r\n    componentDidMount(){\r\n\r\n        this.socket = io(\r\n            '/webrtcPeer',\r\n            {\r\n                path: '/webrtc',\r\n                query: {},\r\n               \r\n            }\r\n        )\r\n\r\n        this.socket.on('connection-success', success => {\r\n            console.log('Connected', success);\r\n        });\r\n        this.socket.on('offerOrAnswer', (sdp) => {\r\n            this.textref.value = JSON.stringify(sdp)\r\n        })\r\n        this.socket.on('candidate', (candidate) => {\r\n           this.candidates = [...this.candidates, candidate]\r\n        })\r\n      \r\n\r\n\r\n\r\n        const pc_config = null\r\n        this.pc = new RTCPeerConnection(pc_config)\r\n\r\n        this.pc.onicecandidate = (e) => {\r\n            if(e.candidate) {\r\n                this.sendToPeer('candidate', e.candidate)\r\n            }\r\n        }\r\n        this.pc.oniceconnectionstatechange = (e) => {\r\n            console.log(e)\r\n        }\r\n        \r\n        this.pc.onaddstream = (e) => {\r\n            this.remoteVideoref.current.srcObject = e.stream\r\n        }\r\n        const constraints = { audio: true, video: true }\r\n\r\n\r\n        const success = (stream) => {\r\n            window.localStream = stream\r\n            this.localVideoref.current.srcObject = stream\r\n            this.pc.onaddstream(stream)\r\n        }\r\n        const failure = (e) => {\r\n            console.log(\"Error: \", e);\r\n            //\r\n        }\r\n        navigator.mediaDevices.getUserMedia( constraints )\r\n        .then( success )\r\n        .catch( failure )\r\n    }\r\n    sendToPeer = (messageType, payload) => {\r\n        this.socket.emit((messageType, {\r\n            socketID: this.socket.id,\r\n            payload\r\n        }))\r\n    }\r\n    createOffer = () => {\r\n        console.log(\"Offer\");\r\n        this.pc.createOffer({offerToReceiveVideo: 1})\r\n        .then(sdp => {\r\n            // console.log(JSON.stringify(sdp))\r\n            this.pc.setLocalDescription(sdp)\r\n\r\n            this.sendToPeer('offerOrAnswer', sdp)\r\n        })\r\n    }\r\n    setRemoteDescription = () => {\r\n        const desc = JSON.parse(this.textref.value)\r\n        this.pc.setRemoteDescription(new RTCSessionDescription(desc))\r\n    }\r\n    createAnswer = () => {\r\n        console.log('Answer');\r\n        this.pc.createAnswer({offerToReceiveVideo: 1})\r\n        .then(sdp => {\r\n            // console.log(JSON.stringify(sdp))\r\n            this.pc.setLocalDescription(sdp)\r\n\r\n            this.sendToPeer('offerOrAnswer', sdp)\r\n        })\r\n    }\r\n    addCandidate = () => {\r\n        // const candidate = JSON.parse(this.textref.value)\r\n        // console.log('Adding cadidata: ', candidate)\r\n        // this.pc.addIceCandidate(new RTCIceCandidate(candidate))\r\n        this.candidates.forEach(candidate => {\r\n            console.log(JSON.stringify(candidate))\r\n            this.pc.addIceCandidate( new RTCIceCandidate(candidate))\r\n        })\r\n    }\r\n\r\n    render() {\r\n        \r\n        return (\r\n            <div>\r\n                <video ref={this.localVideoref}\r\n                style={{width: 240, height: 240, margin: 5, backgroundColor: 'black'}}\r\n                autoPlay ></video>\r\n                \r\n                <video ref={this.remoteVideoref}\r\n                style={{width: 240, height: 240, margin: 5, backgroundColor: 'black'}}\r\n                autoPlay ></video>\r\n\r\n                <button onClick={this.createOffer}>Offer</button>\r\n                <button onClick={this.createAnswer}>Answer</button>\r\n                <br/>\r\n                <textarea style={{height:'2rem', width: '23rem'}} ref= { ref => { this.textref = ref }}/>\r\n                <br/>\r\n                <button onClick={this.setRemoteDescription}>Set Remoete Desc</button>\r\n                <button onClick={this.addCandidate}>Add Candidate</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default MainVideo\r\n"]},"metadata":{},"sourceType":"module"}