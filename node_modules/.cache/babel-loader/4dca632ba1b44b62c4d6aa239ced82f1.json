{"ast":null,"code":"import _objectDestructuringEmpty from\"C:\\\\myProJects\\\\Server\\\\weatherapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectDestructuringEmpty\";import _slicedToArray from\"C:\\\\myProJects\\\\Server\\\\weatherapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useContext,useCallback}from\"react\";import{FormControl,TextField,Button,Grid,CircularProgress,LinearProgress}from\"@material-ui/core\";import{loadReCaptcha,ReCaptcha}from\"react-recaptcha-v3\";import axios from\"axios\";import{GlobalContext}from\"../GlobalState\";var captchaToken;var FeedbackForm=function FeedbackForm(){var _useContext=useContext(GlobalContext),_useContext2=_slicedToArray(_useContext,2);_objectDestructuringEmpty(_useContext2[0]);var dispatch=_useContext2[1];var setSnackbarMsg=React.useCallback(function(data){dispatch({type:\"setSnackbarMsg\",snippet:data});},[dispatch]);var _React$useState=React.useState(false),_React$useState2=_slicedToArray(_React$useState,2),isSending=_React$useState2[0],setIsSending=_React$useState2[1];var formEl=React.useRef(null);var submitForm=function submitForm(e){// set state to sending\nsetIsSending(true);var formData=new FormData(formEl.current);var name=formData.get(\"name\");var email=formData.get(\"email\");var message=formData.get(\"message\");e.preventDefault();var post={name:name,email:email,message:message,captcha:captchaToken};axios.post(\"http://localhost:3000\",post).then(function(response){console.log(response.data.status);// also clear the form\nformEl.current.reset();setSnackbarMsg(response.data.status);setIsSending(false);}).catch(function(error){// console.log(error.response.status);\nif(error.response){if(error.response.status===429){formEl.current.reset();setSnackbarMsg(\"We accept limited feedback!\");}}setIsSending(false);});};React.useEffect(function(){loadReCaptcha(\"6Le1toEUAAAAAITyNwqEMaz3hFAYzciSJDMomrgN\");},[]);var verifyCallback=function verifyCallback(token){// console.log(token);\ncaptchaToken=token;var captchaBox=document.querySelector(\".grecaptcha-badge\");captchaBox.remove();// remove captcha badge\n};return/*#__PURE__*/React.createElement(Grid,{component:\"form\",ref:formEl,onSubmit:submitForm,container:true,required:true,justify:\"center\",style:{width:\"90%\",maxWidth:\"500px\",margin:\"0 auto\"}},/*#__PURE__*/React.createElement(ReCaptcha,{sitekey:\"6Le1toEUAAAAAITyNwqEMaz3hFAYzciSJDMomrgN\",action:\"action_name\",verifyCallback:verifyCallback}),/*#__PURE__*/React.createElement(TextField,{id:\"outlined-email-input\",label:\"Name\",type:\"text\",name:\"name\",autoComplete:\"name\",margin:\"normal\",variant:\"outlined\",fullWidth:true,required:true}),/*#__PURE__*/React.createElement(TextField,{id:\"outlined-email-input\",label:\"Email\",type:\"email\",name:\"email\",autoComplete:\"email\",margin:\"normal\",variant:\"outlined\",fullWidth:true,required:true}),/*#__PURE__*/React.createElement(TextField,{id:\"outlined-email-input\",label:\"Feedback\",multiline:true,rows:\"4\",type:\"text\",name:\"message\",autoComplete:\"feedback\",margin:\"normal\",variant:\"outlined\",fullWidth:true,required:true}),isSending?/*#__PURE__*/React.createElement(LinearProgress,{style:{width:\"100%\",transform:\"translateY(-12px)\",borderRadius:\"2px\"}}):null,/*#__PURE__*/React.createElement(Button,{style:{marginTop:\"10px\"},variant:\"outlined\",color:\"primary\",type:\"submit\",disabled:isSending?true:false},isSending?\"Sending Feedback\":\"Send Feedback\"));};export default FeedbackForm;","map":{"version":3,"sources":["C:/myProJects/Server/weatherapp/src/components/sections/FeedbackForm.js"],"names":["React","useContext","useCallback","FormControl","TextField","Button","Grid","CircularProgress","LinearProgress","loadReCaptcha","ReCaptcha","axios","GlobalContext","captchaToken","FeedbackForm","dispatch","setSnackbarMsg","data","type","snippet","useState","isSending","setIsSending","formEl","useRef","submitForm","e","formData","FormData","current","name","get","email","message","preventDefault","post","captcha","then","response","console","log","status","reset","catch","error","useEffect","verifyCallback","token","captchaBox","document","querySelector","remove","width","maxWidth","margin","transform","borderRadius","marginTop"],"mappings":"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","sourcesContent":["import React, {useContext, useCallback} from \"react\";\r\nimport {\r\n  FormControl,\r\n  TextField,\r\n  Button,\r\n  Grid,\r\n  CircularProgress,\r\n  LinearProgress\r\n} from \"@material-ui/core\";\r\nimport { loadReCaptcha, ReCaptcha } from \"react-recaptcha-v3\";\r\nimport axios from \"axios\";\r\nimport { GlobalContext } from \"../GlobalState\";\r\n\r\nlet captchaToken;\r\nconst FeedbackForm = () => {\r\n  const [{}, dispatch] = useContext(GlobalContext);\r\n\r\n  const setSnackbarMsg = React.useCallback(\r\n    data => {\r\n      dispatch({ type: \"setSnackbarMsg\", snippet: data });\r\n    },\r\n    [dispatch]\r\n  );\r\n  const [isSending, setIsSending] = React.useState(false);\r\n  const formEl = React.useRef(null);\r\n\r\n  const submitForm = e => {\r\n    // set state to sending\r\n    setIsSending(true);\r\n    const formData = new FormData(formEl.current);\r\n    const name = formData.get(\"name\");\r\n    const email = formData.get(\"email\");\r\n    const message = formData.get(\"message\");\r\n\r\n    e.preventDefault();\r\n\r\n    const post = {\r\n      name: name,\r\n      email: email,\r\n      message: message,\r\n      captcha: captchaToken\r\n    };\r\n\r\n    axios\r\n      .post(\"http://localhost:3000\", post)\r\n      .then(function(response) {\r\n        console.log(response.data.status);\r\n        // also clear the form\r\n        formEl.current.reset();\r\n        setSnackbarMsg(response.data.status);\r\n        setIsSending(false);\r\n      })\r\n      .catch(function(error) {\r\n        // console.log(error.response.status);\r\n        if (error.response) {\r\n          if (error.response.status === 429) {\r\n            formEl.current.reset();\r\n\r\n            setSnackbarMsg(\"We accept limited feedback!\");\r\n          }\r\n        }\r\n        setIsSending(false);\r\n      });\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    loadReCaptcha(\"6Le1toEUAAAAAITyNwqEMaz3hFAYzciSJDMomrgN\");\r\n  }, []);\r\n\r\n  const verifyCallback = token => {\r\n    // console.log(token);\r\n    captchaToken = token;\r\n    const captchaBox = document.querySelector(\".grecaptcha-badge\");\r\n    captchaBox.remove();\r\n    // remove captcha badge\r\n  };\r\n\r\n  return (\r\n    <Grid\r\n      component=\"form\"\r\n      ref={formEl}\r\n      onSubmit={submitForm}\r\n      container\r\n      required\r\n      justify=\"center\"\r\n      style={{ width: \"90%\", maxWidth: \"500px\", margin: \"0 auto\" }}\r\n    >\r\n      <ReCaptcha\r\n        sitekey=\"6Le1toEUAAAAAITyNwqEMaz3hFAYzciSJDMomrgN\"\r\n        action=\"action_name\"\r\n        verifyCallback={verifyCallback}\r\n      />\r\n      <TextField\r\n        id=\"outlined-email-input\"\r\n        label=\"Name\"\r\n        type=\"text\"\r\n        name=\"name\"\r\n        autoComplete=\"name\"\r\n        margin=\"normal\"\r\n        variant=\"outlined\"\r\n        fullWidth\r\n        required\r\n      />\r\n      <TextField\r\n        id=\"outlined-email-input\"\r\n        label=\"Email\"\r\n        type=\"email\"\r\n        name=\"email\"\r\n        autoComplete=\"email\"\r\n        margin=\"normal\"\r\n        variant=\"outlined\"\r\n        fullWidth\r\n        required\r\n      />\r\n      <TextField\r\n        id=\"outlined-email-input\"\r\n        label=\"Feedback\"\r\n        multiline\r\n        rows=\"4\"\r\n        type=\"text\"\r\n        name=\"message\"\r\n        autoComplete=\"feedback\"\r\n        margin=\"normal\"\r\n        variant=\"outlined\"\r\n        fullWidth\r\n        required\r\n      />\r\n      {isSending ? (\r\n        <LinearProgress\r\n          style={{\r\n            width: \"100%\",\r\n            transform: \"translateY(-12px)\",\r\n            borderRadius: \"2px\"\r\n          }}\r\n        />\r\n      ) : null}\r\n      <Button\r\n        style={{ marginTop: \"10px\" }}\r\n        variant=\"outlined\"\r\n        color=\"primary\"\r\n        type=\"submit\"\r\n        disabled={isSending ? true : false}\r\n      >\r\n        {/* if sending is true then show circular progress */}\r\n        {isSending ? \"Sending Feedback\" : \"Send Feedback\"}\r\n      </Button>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default FeedbackForm;\r\n"]},"metadata":{},"sourceType":"module"}