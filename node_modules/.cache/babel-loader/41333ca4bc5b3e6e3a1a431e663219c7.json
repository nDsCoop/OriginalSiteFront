{"ast":null,"code":"import React,{useState}from\"react\";import{IconButton,CircularProgress}from\"@material-ui/core/\";import{PauseCircleFilled,PlayCircleFilled,Pause,PlayArrow}from\"@material-ui/icons/\";var PlayPauseButton=function PlayPauseButton(_ref){var player=_ref.player,audioState=_ref.audioState,minimized=_ref.minimized;var togglePlayPause=function togglePlayPause(e){if(audioState===\"playing\"){player.pause();}else if(audioState===\"paused\"){player.play();}e.stopPropagation();};var showPlayPause=function showPlayPause(){if(audioState===\"playing\"){// if the state will be minimized then we will return the nromal pause button\nif(minimized){return/*#__PURE__*/React.createElement(Pause,{style:{fontSize:\"3em\",opacity:\".8\"}});}return/*#__PURE__*/React.createElement(PauseCircleFilled,{style:{fontSize:\"4em\"},color:\"primary\"});}else if(audioState===\"paused\"||audioState===\"loaded\"){if(minimized){return/*#__PURE__*/React.createElement(PlayArrow,{style:{fontSize:\"3em\",opacity:\".8\"}});}return/*#__PURE__*/React.createElement(PlayCircleFilled,{style:{fontSize:\"4em\"},color:\"primary\"});}else if(audioState===\"loading\"){return/*#__PURE__*/React.createElement(CircularProgress,null);}};return/*#__PURE__*/React.createElement(IconButton,{size:\"small\",color:minimized?\"secondary\":\"primary\",\"aria-label\":\"Pause\",onClick:togglePlayPause,disableFocusRipple:true,disableRipple:true},showPlayPause());};export default PlayPauseButton;","map":{"version":3,"sources":["C:/myProJects/Server/weatherapp/src/components/player/PlayPauseButton.js"],"names":["React","useState","IconButton","CircularProgress","PauseCircleFilled","PlayCircleFilled","Pause","PlayArrow","PlayPauseButton","player","audioState","minimized","togglePlayPause","e","pause","play","stopPropagation","showPlayPause","fontSize","opacity"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,OAASC,UAAT,CAAqBC,gBAArB,KAA6C,oBAA7C,CACA,OACEC,iBADF,CAEEC,gBAFF,CAGEC,KAHF,CAIEC,SAJF,KAKO,qBALP,CAOA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,MAAuC,IAApCC,CAAAA,MAAoC,MAApCA,MAAoC,CAA5BC,UAA4B,MAA5BA,UAA4B,CAAhBC,SAAgB,MAAhBA,SAAgB,CAC7D,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAAAC,CAAC,CAAI,CAC3B,GAAIH,UAAU,GAAK,SAAnB,CAA8B,CAC5BD,MAAM,CAACK,KAAP,GACD,CAFD,IAEO,IAAIJ,UAAU,GAAK,QAAnB,CAA6B,CAClCD,MAAM,CAACM,IAAP,GACD,CACDF,CAAC,CAACG,eAAF,GACD,CAPD,CASA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,EAAM,CAC1B,GAAIP,UAAU,GAAK,SAAnB,CAA8B,CAC5B;AACA,GAAIC,SAAJ,CAAe,CACb,mBAAO,oBAAC,KAAD,EAAO,KAAK,CAAE,CAAEO,QAAQ,CAAE,KAAZ,CAAmBC,OAAO,CAAE,IAA5B,CAAd,EAAP,CACD,CACD,mBAAO,oBAAC,iBAAD,EAAmB,KAAK,CAAE,CAAED,QAAQ,CAAE,KAAZ,CAA1B,CAA+C,KAAK,CAAC,SAArD,EAAP,CACD,CAND,IAMO,IAAIR,UAAU,GAAK,QAAf,EAA2BA,UAAU,GAAK,QAA9C,CAAwD,CAC7D,GAAIC,SAAJ,CAAe,CACb,mBAAO,oBAAC,SAAD,EAAW,KAAK,CAAE,CAAEO,QAAQ,CAAE,KAAZ,CAAmBC,OAAO,CAAE,IAA5B,CAAlB,EAAP,CACD,CACD,mBAAO,oBAAC,gBAAD,EAAkB,KAAK,CAAE,CAAED,QAAQ,CAAE,KAAZ,CAAzB,CAA8C,KAAK,CAAC,SAApD,EAAP,CACD,CALM,IAKA,IAAIR,UAAU,GAAK,SAAnB,CAA8B,CACnC,mBAAO,oBAAC,gBAAD,MAAP,CACD,CACF,CAfD,CAiBA,mBACE,oBAAC,UAAD,EACE,IAAI,CAAC,OADP,CAEE,KAAK,CAAEC,SAAS,CAAG,WAAH,CAAiB,SAFnC,CAGE,aAAW,OAHb,CAIE,OAAO,CAAEC,eAJX,CAKE,kBAAkB,CAAE,IALtB,CAME,aAAa,CAAE,IANjB,EAQGK,aAAa,EARhB,CADF,CAYD,CAvCD,CAyCA,cAAeT,CAAAA,eAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport { IconButton, CircularProgress } from \"@material-ui/core/\";\r\nimport {\r\n  PauseCircleFilled,\r\n  PlayCircleFilled,\r\n  Pause,\r\n  PlayArrow\r\n} from \"@material-ui/icons/\";\r\n\r\nconst PlayPauseButton = ({ player, audioState, minimized }) => {\r\n  const togglePlayPause = e => {\r\n    if (audioState === \"playing\") {\r\n      player.pause();\r\n    } else if (audioState === \"paused\") {\r\n      player.play();\r\n    }\r\n    e.stopPropagation();\r\n  };\r\n\r\n  const showPlayPause = () => {\r\n    if (audioState === \"playing\") {\r\n      // if the state will be minimized then we will return the nromal pause button\r\n      if (minimized) {\r\n        return <Pause style={{ fontSize: \"3em\", opacity: \".8\" }} />;\r\n      }\r\n      return <PauseCircleFilled style={{ fontSize: \"4em\" }} color=\"primary\" />;\r\n    } else if (audioState === \"paused\" || audioState === \"loaded\") {\r\n      if (minimized) {\r\n        return <PlayArrow style={{ fontSize: \"3em\", opacity: \".8\" }} />;\r\n      }\r\n      return <PlayCircleFilled style={{ fontSize: \"4em\" }} color=\"primary\" />;\r\n    } else if (audioState === \"loading\") {\r\n      return <CircularProgress />;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <IconButton\r\n      size=\"small\"\r\n      color={minimized ? \"secondary\" : \"primary\"}\r\n      aria-label=\"Pause\"\r\n      onClick={togglePlayPause}\r\n      disableFocusRipple={true}\r\n      disableRipple={true}\r\n    >\r\n      {showPlayPause()}\r\n    </IconButton>\r\n  );\r\n};\r\n\r\nexport default PlayPauseButton;\r\n"]},"metadata":{},"sourceType":"module"}