{"ast":null,"code":"var _jsxFileName = \"C:\\\\myProJects\\\\Server\\\\weatherapp\\\\src\\\\components\\\\UserBar.js\";\nimport React, { Component } from 'react';\nimport defaultImg from '../images/svgnds.png';\nimport _ from 'lodash';\nimport classNames from 'classnames';\nimport { IconButton } from '@material-ui/core';\nimport { MdEdit, MdCheck } from 'react-icons/md'; // import axios from \"axios\";\n\nimport fetchJsonp from \"fetch-jsonp\";\nconst GeoAPI = \"https://ipapi.co/jsonp\";\nexport class UserBar extends Component {\n  constructor() {\n    super();\n\n    this.handleEditNow = e => {\n      e.preventDefault();\n      const {\n        store\n      } = this.props;\n      const {\n        user,\n        edit\n      } = this.state;\n      console.log(edit);\n      console.log(user);\n    };\n\n    this.fetchIPclient = () => {\n      try {\n        fetchJsonp(`${GeoAPI}`).then(function (response) {\n          return response.json();\n        }).then(json => {\n          let {\n            user\n          } = this.state;\n          const field = 'ipClient';\n          user[field] = json;\n          this.setState({\n            user: user\n          });\n        }).catch(function (ex) {\n          console.log(\"parsing failed\", ex);\n        });\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    this.onClickOutSide = e => {\n      if (this.ref && !this.ref.contains(e.target)) {\n        console.log(\"Here click out side login form!\");\n        this.setState({\n          showUserFrom: false,\n          showUserMenu: false\n        });\n      }\n    };\n\n    this.onSubmit = e => {\n      const {\n        store\n      } = this.props;\n      const {\n        user,\n        isLogin\n      } = this.state; // console.log(user)\n\n      e.preventDefault();\n      this.setState({\n        message: null\n      }, () => {\n        if (isLogin) {\n          try {\n            store.login(user.email, user.password, user.ipClient.ip).then(user => {\n              this.setState({\n                message: null,\n                showUserFrom: false,\n                showUserMenu: false\n              });\n            }).catch(err => {\n              console.log(err);\n              this.setState({\n                message: {\n                  body: err,\n                  type: 'error'\n                }\n              });\n            });\n          } catch (err) {\n            console.log(err);\n            this.setState({\n              message: {\n                body: 'An error occurred, please try again later!',\n                type: 'error'\n              }\n            });\n          }\n        } else {\n          if (user.password === user.repassword) {\n            store.register(user).then(_ => {\n              this.setState({\n                message: {\n                  body: 'User created',\n                  type: 'Success'\n                }\n              }, () => {\n                // now login this user\n                store.login(user.email, user.password).then(user => {\n                  //\n                  this.setState({\n                    message: null,\n                    showUserFrom: false,\n                    showUserMenu: false\n                  });\n                }).catch(err => {\n                  console.log(err);\n                  this.setState({\n                    message: {\n                      body: err,\n                      type: 'error'\n                    }\n                  });\n                });\n              });\n            }).catch(err => {\n              console.log(err);\n              this.setState({\n                message: {\n                  body: err,\n                  type: 'error'\n                }\n              });\n            });\n          } else {\n            console.log(user.repassword, 'and', user.password);\n            this.setState({\n              message: {\n                body: 'Password not Comfirm',\n                type: 'error'\n              }\n            });\n          }\n        }\n      });\n    };\n\n    this.onTxtfieldChange = e => {\n      let {\n        user\n      } = this.state;\n      const field = e.target.name;\n      user[field] = e.target.value;\n      this.setState({\n        user: user\n      });\n    };\n\n    this.onTxtfieldEChange = e => {\n      let {\n        user\n      } = this.state;\n      const field = e.target.name;\n      user[field] = e.target.value;\n      this.setState({\n        user: user\n      });\n    };\n\n    this.state = {\n      message: null,\n      showUserFrom: false,\n      isLogin: true,\n      edit: '',\n      editAcc: false,\n      user: {\n        email: '',\n        password: '',\n        repassword: '',\n        name: '',\n        ipClient: null,\n        birthday: '',\n        country: '',\n        phone: ''\n      }\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener('mousedown', this.onClickOutSide);\n    this.fetchIPclient();\n    console.log('Didmount and fetch ipClient');\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('mousedown', this.onClickOutSide);\n    console.log('Unmount');\n  }\n\n  render() {\n    const {\n      user,\n      message,\n      isLogin,\n      edit,\n      editAcc\n    } = this.state;\n    const {\n      store\n    } = this.props;\n    const me = store.getCurrentUser();\n\n    const profileImg = _.get(me, 'avatar');\n\n    const name = _.get(me, 'name');\n\n    const email = _.get(me, 'email');\n\n    const country = _.get(me, 'country');\n\n    const phone = _.get(me, 'phone');\n\n    const avatar = _.get(me, 'avatar');\n\n    const birthday = _.get(me, 'birthday');\n\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"user-bar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }\n    }, !me ? /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      onClick: e => this.setState({\n        showUserFrom: true\n      }),\n      className: \"login-btn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 21\n      }\n    }, \"Sign In\") : null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"name-user\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 13\n      }\n    }, _.get(me, 'name')), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"img-user\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"img-profile\",\n      src: profileImg ? profileImg : defaultImg,\n      onClick: e => this.setState({\n        showUserMenu: true\n      }),\n      alt: \"user-img\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 17\n      }\n    })), me && this.state.showUserMenu ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"user-form\",\n      ref: ref => this.ref = ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 48\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"form-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 25\n      }\n    }, \"Your Account\")), editAcc ? /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 35\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      style: {\n        textTransform: 'capitalize'\n      },\n      htmlFor: edit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 25\n      }\n    }, edit), /*#__PURE__*/React.createElement(\"input\", {\n      onChange: e => this.onTxtfieldEChange(e),\n      placeholder: \"Your-Name\",\n      required: true,\n      type: \"text\",\n      name: edit,\n      value: _.get(user, {\n        edit\n      }),\n      id: edit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(MdCheck, {\n      onClick: this.handleEditNow,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 25\n      }\n    })) : null, /*#__PURE__*/React.createElement(\"li\", {\n      className: \"header-menu\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: avatar,\n      alt: \"user-img\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 25\n      }\n    }, name)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"body-menu\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      htmlFor: \"email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 25\n      }\n    }, \"Your Name: \", name), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      style: {\n        color: \"rgba(0, 0, 0, 0.5)\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(MdEdit, {\n      onClick: this.setState({\n        editAcc: true,\n        edit: 'name'\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 29\n      }\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"body-menu\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      htmlFor: \"email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 25\n      }\n    }, \"Birthday: \", birthday), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 25\n      }\n    }, \" \", /*#__PURE__*/React.createElement(IconButton, {\n      style: {\n        color: \"rgba(0, 0, 0, 0.5)\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(MdEdit, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 29\n      }\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"body-menu\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      htmlFor: \"email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 25\n      }\n    }, \"Email Address: \", email), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 25\n      }\n    }, \" \", /*#__PURE__*/React.createElement(IconButton, {\n      style: {\n        color: \"rgba(0, 0, 0, 0.5)\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(MdEdit, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 29\n      }\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"body-menu\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      htmlFor: \"email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 25\n      }\n    }, \"Contact Number: \", phone), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 25\n      }\n    }, \" \", /*#__PURE__*/React.createElement(IconButton, {\n      style: {\n        color: \"rgba(0, 0, 0, 0.5)\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(MdEdit, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 29\n      }\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"body-menu\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      htmlFor: \"email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 25\n      }\n    }, \"Country: \", country), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 25\n      }\n    }, \" \", /*#__PURE__*/React.createElement(IconButton, {\n      style: {\n        color: \"rgba(0, 0, 0, 0.5)\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(MdEdit, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 29\n      }\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"footer-menu\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"img\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      style: {\n        maxHeight: \"5rem\",\n        maxWidth: \"5rem\"\n      },\n      src: defaultImg,\n      alt: \"nds\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"btn-cc\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => store.signOut(),\n      type: \"button\",\n      className: \"login-btn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 25\n      }\n    }, \"Signout\"))))))) : null, !me && this.state.showUserFrom ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"user-form\",\n      ref: ref => this.ref = ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"form-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 25\n      }\n    }, \"Sign In / Register Your Account\")), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 21\n      }\n    }, message ? /*#__PURE__*/React.createElement(\"p\", {\n      className: classNames('app-msg', _.get(message, 'type')),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 37\n      }\n    }, _.get(message, 'body')) : null), !isLogin ? /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 36\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 25\n      }\n    }, \"Name\"), /*#__PURE__*/React.createElement(\"input\", {\n      onChange: e => this.onTxtfieldChange(e),\n      placeholder: \"Your-Name\",\n      required: true,\n      type: \"text\",\n      name: \"name\",\n      value: _.get(user, 'name'),\n      id: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 25\n      }\n    })) : null, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 25\n      }\n    }, \"Email\"), /*#__PURE__*/React.createElement(\"input\", {\n      onChange: e => this.onTxtfieldChange(e),\n      placeholder: \"example.vn@nds.com\",\n      required: true,\n      type: \"email\",\n      name: \"email\",\n      value: _.get(user, 'email'),\n      id: \"email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 25\n      }\n    }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n      onChange: e => this.onTxtfieldChange(e),\n      autoComplete: 'off',\n      placeholder: \"Your-password\",\n      required: true,\n      type: \"password\",\n      value: _.get(user, 'password'),\n      id: \"password\",\n      name: \"password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 25\n      }\n    })), !isLogin ? /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 36\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"repassword\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 25\n      }\n    }, \"Comfirm Password\"), /*#__PURE__*/React.createElement(\"input\", {\n      onChange: e => this.onTxtfieldChange(e),\n      placeholder: \"Re-password\",\n      required: true,\n      type: \"password\",\n      name: \"repassword\",\n      value: _.get(user, 'repassword'),\n      id: \"repassword\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 25\n      }\n    })) : null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"footer-login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"img\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      style: {\n        maxHeight: \"5rem\",\n        maxWidth: \"5rem\"\n      },\n      src: defaultImg,\n      alt: \"nds\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"btn-cc\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"login-btn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 29\n      }\n    }, isLogin ? 'Log In' : 'Create Now')), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      onClick: () => {\n        this.setState({\n          isLogin: !isLogin\n        });\n      },\n      className: \"login-btn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 25\n      }\n    }, \" \", isLogin ? 'Create New Account?' : 'Already have an account?', \" \"))))))) : null));\n  }\n\n}\nexport default UserBar;","map":{"version":3,"sources":["C:/myProJects/Server/weatherapp/src/components/UserBar.js"],"names":["React","Component","defaultImg","_","classNames","IconButton","MdEdit","MdCheck","fetchJsonp","GeoAPI","UserBar","constructor","handleEditNow","e","preventDefault","store","props","user","edit","state","console","log","fetchIPclient","then","response","json","field","setState","catch","ex","err","onClickOutSide","ref","contains","target","showUserFrom","showUserMenu","onSubmit","isLogin","message","login","email","password","ipClient","ip","body","type","repassword","register","onTxtfieldChange","name","value","onTxtfieldEChange","editAcc","birthday","country","phone","componentDidMount","window","addEventListener","componentWillUnmount","removeEventListener","render","me","getCurrentUser","profileImg","get","avatar","textTransform","color","maxHeight","maxWidth","signOut"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport defaultImg from '../images/svgnds.png';\r\nimport _ from 'lodash';\r\nimport classNames from 'classnames';\r\nimport { IconButton } from '@material-ui/core';\r\nimport { MdEdit, MdCheck } from 'react-icons/md';\r\n// import axios from \"axios\";\r\nimport fetchJsonp from \"fetch-jsonp\";\r\nconst GeoAPI = \"https://ipapi.co/jsonp\";\r\n\r\nexport class UserBar extends Component {\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            message: null,\r\n            showUserFrom : false,\r\n            isLogin: true,\r\n            edit: '',\r\n            editAcc: false,\r\n            user: {\r\n                email: '',\r\n                password: '',\r\n                repassword: '',\r\n                name: '',\r\n                ipClient: null,\r\n                birthday: '',\r\n                country: '',\r\n                phone: '',\r\n            }\r\n        }\r\n       \r\n    }\r\n\r\n    handleEditNow = (e) => {\r\n        e.preventDefault();\r\n        const { store } = this.props;\r\n        const { user, edit } = this.state;\r\n        console.log(edit);\r\n        console.log(user);\r\n    }\r\n    fetchIPclient = () => {\r\n        try{\r\n            fetchJsonp(`${GeoAPI}`)\r\n            .then(function(response) {\r\n                return response.json();\r\n              })\r\n              .then(json => {\r\n                let { user } = this.state;\r\n                const field = 'ipClient';\r\n                user[field] = json;\r\n                this.setState({ user: user})\r\n              })\r\n              .catch(function(ex) {\r\n                console.log(\"parsing failed\", ex);\r\n              });\r\n        }\r\n        catch (err){ console.log(err) }\r\n\r\n      };\r\n    onClickOutSide = (e) => {\r\n        if(this.ref && !this.ref.contains(e.target)){\r\n            console.log(\"Here click out side login form!\");\r\n            this.setState({\r\n                showUserFrom: false,\r\n                showUserMenu: false\r\n            })\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        window.addEventListener('mousedown', this.onClickOutSide);\r\n        this.fetchIPclient();\r\n        console.log('Didmount and fetch ipClient');\r\n    }\r\n    componentWillUnmount(){\r\n        window.removeEventListener('mousedown', this.onClickOutSide);\r\n        console.log('Unmount');\r\n    }\r\n    onSubmit = (e) => {\r\n\r\n        const { store } = this.props;\r\n        const { user , isLogin } = this.state;\r\n        // console.log(user)\r\n        e.preventDefault();\r\n        this.setState({\r\n            message: null\r\n        }, () => {\r\n            if(isLogin){\r\n                try{\r\n                    store.login(user.email, user.password, user.ipClient.ip).then((user) => {\r\n\r\n                        this.setState({\r\n                            message: null,\r\n                            showUserFrom: false,\r\n                            showUserMenu: false\r\n                        })\r\n        \r\n                    }).catch((err) => {\r\n                        console.log(err);\r\n                        this.setState({\r\n                            message: {\r\n                                body: err,\r\n                                type: 'error'\r\n                            }\r\n                        })\r\n                    });\r\n                }\r\n                catch (err) {\r\n                    console.log(err);\r\n                    this.setState({\r\n                        message: {\r\n                            body: 'An error occurred, please try again later!',\r\n                            type: 'error'\r\n                        }\r\n                    })\r\n                }\r\n               \r\n            } else {\r\n                if(user.password === user.repassword){\r\n                    store.register(user).then((_) => {\r\n                        this.setState({\r\n                            message: {\r\n                                body: 'User created',\r\n                                type: 'Success'\r\n                            }\r\n                        }, () => {\r\n                            // now login this user\r\n                            store.login(user.email, user.password).then((user) => { \r\n                            //\r\n                            this.setState({\r\n                                message: null,\r\n                                showUserFrom: false,\r\n                                showUserMenu: false\r\n                            })\r\n            \r\n                        }).catch((err) => {\r\n                            console.log(err);\r\n                            this.setState({\r\n                                message: {\r\n                                    body: err,\r\n                                    type: 'error'\r\n                                }\r\n                            })\r\n                            });\r\n                        })\r\n                    }).catch((err) => {\r\n                        console.log(err);\r\n                        this.setState({\r\n                            message: {\r\n                                body: err,\r\n                                type: 'error'\r\n                            }\r\n                        })\r\n                    });\r\n                }else{\r\n                    console.log(user.repassword, 'and' , user.password);\r\n                    this.setState({\r\n                        message: {\r\n                            body: 'Password not Comfirm',\r\n                            type: 'error'\r\n                        }\r\n                    })\r\n                }\r\n                \r\n            }\r\n           \r\n        })\r\n\r\n    }\r\n\r\n    onTxtfieldChange = (e) => {\r\n        let { user } = this.state;\r\n        const field = e.target.name;\r\n        user[field] = e.target.value;\r\n        this.setState({\r\n            user: user\r\n        });\r\n    }\r\n    onTxtfieldEChange = (e) => {\r\n        let { user } = this.state;\r\n        const field = e.target.name;\r\n        user[field] = e.target.value;\r\n        this.setState({\r\n            user: user\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { user, message, isLogin, edit, editAcc } = this.state;\r\n        const { store } = this.props;\r\n        const me = store.getCurrentUser();\r\n        const profileImg = _.get(me, 'avatar');\r\n        const name = _.get(me,'name');\r\n        const email = _.get(me, 'email');\r\n        const country = _.get(me, 'country');\r\n        const phone = _.get(me, 'phone');\r\n        const avatar = _.get(me , 'avatar');\r\n        const birthday = _.get(me, 'birthday');\r\n        return (\r\n    <>\r\n        <div className=\"user-bar\">\r\n            { !me ? <button type=\"button\" onClick={(e) => this.setState({showUserFrom: true})} className=\"login-btn\">Sign In</button> : null}\r\n            <div className=\"name-user\">{_.get(me, 'name')}</div>\r\n            <div className=\"img-user\">\r\n                <img className=\"img-profile\" src={profileImg ? profileImg : defaultImg} onClick={(e) => this.setState({showUserMenu: true})}  alt=\"user-img\"></img>\r\n            </div>\r\n\r\n            { me && this.state.showUserMenu ?  <div className=\"user-form\" ref = {(ref) => this.ref = ref}>\r\n                <form onSubmit= {this.onSubmit}>\r\n                <ul className=\"form-container\">\r\n                    <li>\r\n                        <h4>Your Account</h4>\r\n                    </li>\r\n                    {\r\n                        editAcc ? <li>\r\n                        <label style={{textTransform: 'capitalize'}} htmlFor={edit}>\r\n                            {edit}\r\n                        </label>\r\n                        <input onChange={(e) => this.onTxtfieldEChange(e) } \r\n                        placeholder=\"Your-Name\" \r\n                        required type=\"text\" name={edit}\r\n                        value = {_.get(user, {edit})} \r\n                        id={edit} ></input>\r\n                        <MdCheck onClick={this.handleEditNow} />\r\n                    </li>\r\n                    :\r\n                    null\r\n                    }\r\n                    <li className =\"header-menu\">\r\n                        <img src={avatar} alt=\"user-img\" />\r\n                        <span>{name}</span>\r\n                    </li>\r\n                    <div className =\"body-menu\">\r\n                        <p htmlFor=\"email\">Your Name: {name}</p>\r\n                        <div>\r\n                        <IconButton  style={{ color: \"rgba(0, 0, 0, 0.5)\"}}>\r\n                            <MdEdit onClick = {this.setState({\r\n                                    editAcc: true,\r\n                                    edit: 'name'\r\n                            })} />\r\n                        </IconButton>\r\n                        </div>\r\n                    </div>\r\n                    <div className =\"body-menu\">\r\n                        <p htmlFor=\"email\">Birthday: {birthday}</p>\r\n                        <div> <IconButton  style={{ color: \"rgba(0, 0, 0, 0.5)\"}}>\r\n                            <MdEdit />\r\n                        </IconButton></div>\r\n                    </div>\r\n                    <div className =\"body-menu\">\r\n                        <p htmlFor=\"email\">Email Address: {email}</p>\r\n                        <div> <IconButton  style={{ color: \"rgba(0, 0, 0, 0.5)\"}}>\r\n                            <MdEdit />\r\n                        </IconButton></div>\r\n                    </div>\r\n                    <div className =\"body-menu\">\r\n                        <p htmlFor=\"email\">Contact Number: {phone}</p>\r\n                        <div> <IconButton  style={{ color: \"rgba(0, 0, 0, 0.5)\"}}>\r\n                            <MdEdit />\r\n                        </IconButton></div>\r\n                    </div>\r\n                    <div className =\"body-menu\">\r\n                        <p htmlFor=\"email\">Country: {country}</p>\r\n                        <div> <IconButton  style={{ color: \"rgba(0, 0, 0, 0.5)\"}}>\r\n                            <MdEdit />\r\n                        </IconButton></div>\r\n                    </div>\r\n                  \r\n                    \r\n                   \r\n                    <div className=\"footer-menu\">\r\n                        <div className=\"img\">\r\n                            <img style={{maxHeight: \"5rem\", maxWidth: \"5rem\"}} src={defaultImg} alt=\"nds\"/>\r\n                        </div>\r\n                        <div className=\"btn-cc\">\r\n                        <li>\r\n                        <button onClick = { () => store.signOut()}\r\n                        type=\"button\" className=\"login-btn\">Signout</button>\r\n                        </li>\r\n                    {/* <li>\r\n                        <button className=\"login-btn\" >Create new account?</button>\r\n                    </li> */}\r\n                        </div>\r\n                    </div>\r\n                </ul>\r\n                </form>\r\n                </div>\r\n                :\r\n                null\r\n            }\r\n             { !me && this.state.showUserFrom ? <div className=\"user-form\" ref = {(ref) => this.ref = ref}>\r\n                <form onSubmit= {this.onSubmit}>\r\n                <ul className=\"form-container\">\r\n                    <li>\r\n                        <h4>Sign In / Register Your Account</h4>\r\n                    </li>\r\n                    <li>\r\n                        { message ? <p className={classNames('app-msg', _.get(message, 'type'))}>\r\n                            {_.get(message, 'body')}\r\n                        </p> : null } \r\n                    </li>\r\n                    {\r\n                        !isLogin ? <li>\r\n                        <label htmlFor=\"name\">\r\n                        Name\r\n                        </label>\r\n                        <input onChange={(e) => this.onTxtfieldChange(e) } \r\n                        placeholder=\"Your-Name\" \r\n                        required type=\"text\" name=\"name\"\r\n                        value = {_.get(user, 'name')} \r\n                        id=\"name\" ></input>\r\n                    </li>\r\n                    :\r\n                    null\r\n                    }\r\n                    \r\n                    <li>\r\n                        <label htmlFor=\"email\">\r\n                        Email\r\n                        </label>\r\n                        <input onChange={(e) => this.onTxtfieldChange(e) } \r\n                        placeholder=\"example.vn@nds.com\" \r\n                        required type=\"email\" name=\"email\"\r\n                        value = {_.get(user, 'email')} \r\n                        id=\"email\" ></input>\r\n                    </li>\r\n                    <li>\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input onChange={(e) => this.onTxtfieldChange(e) }\r\n                        autoComplete = {'off'} \r\n                        placeholder=\"Your-password\" \r\n                        required type=\"password\"\r\n                        value = {_.get(user, 'password')} \r\n                        id=\"password\" name=\"password\" ></input>\r\n                    </li>\r\n                    {\r\n                        !isLogin ? <li>\r\n                        <label htmlFor=\"repassword\">\r\n                        Comfirm Password\r\n                        </label>\r\n                        <input onChange={(e) => this.onTxtfieldChange(e) } \r\n                        placeholder=\"Re-password\" \r\n                        required type=\"password\" name=\"repassword\"\r\n                        value = {_.get(user, 'repassword')} \r\n                        id=\"repassword\" ></input>\r\n                    </li>\r\n                    :\r\n                    null\r\n                    }\r\n                    <div className=\"footer-login\">\r\n                        <div className=\"img\">\r\n                            <img style={{maxHeight: \"5rem\", maxWidth: \"5rem\"}} src={defaultImg} alt=\"nds\"/>\r\n                        </div>\r\n                        <div className=\"btn-cc\">\r\n                        <li>\r\n                            <button type=\"submit\" className=\"login-btn\">{isLogin ? 'Log In' : 'Create Now'}</button>\r\n                        </li>\r\n                        <li>\r\n                        <button type=\"button\" onClick = {() => {\r\n                          this.setState({\r\n                              isLogin: !isLogin,\r\n                          })\r\n                      }}\r\n                      className=\"login-btn\" > { isLogin ? 'Create New Account?' : 'Already have an account?' } </button>\r\n                      </li>\r\n                        </div>\r\n                    </div>\r\n                </ul>\r\n                </form>\r\n                </div>\r\n                :\r\n                null\r\n        }\r\n \r\n           \r\n           \r\n        \r\n        </div>\r\n    </>\r\n    )\r\n    }\r\n}\r\n\r\nexport default UserBar\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}