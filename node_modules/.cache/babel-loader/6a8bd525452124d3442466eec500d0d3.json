{"ast":null,"code":"var _jsxFileName = \"C:\\\\myProJects\\\\WeatherApp\\\\weatherapp\\\\src\\\\components\\\\sections\\\\HomePage.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Typography } from \"@material-ui/core\";\nimport SongCard from \"./SongCard\";\nimport youtubeSearch from \"../../apis/yotubeSearch\"; // make a permanent playlist object with few songs catergory\n\nconst playlistsIds = {\n  LatestSongs: \"PLFgquLnL59akA2PflFpeQG9L01VFg90wS\",\n  VpopSongs: \"PLWW7O4OXAEuPL8HUT5ELAOwdvpPA1YZd6\",\n  EdmSongs: \"PLw-VjHDlEOgs658kAHR_LAaILBXb-s6Q5\",\n  TopBolloywood: \"PLcRN7uK9CFpPkvCc-08tWOQo6PAg4u0lA\",\n  TopPop: \"PLDcnymzs18LU4Kexrs91TVdfnplU3I5zs\",\n  Reggaeton: \"PLS_oEMUyvA728OZPmF9WPKjsGtfC75LiN\"\n};\nlet slowConnectionTimeout;\n\nconst HomePage = () => {\n  // for home playlist\n  const [songObj, setSongObj] = useState({});\n\n  const fetchFromApi = () => {\n    slowConnectionTimeout = setTimeout(() => {}, 5000);\n\n    const getTrendingMusic = async () => {\n      const res = await youtubeSearch.get(\"videos\", {\n        params: {\n          chart: \"mostPopular\",\n          videoCategoryId: \"10\",\n          regionCode: localStorage.getItem(\"country_code\")\n        }\n      });\n      return res.data.items;\n    };\n\n    const getPlayListItems = async data => {\n      const res = await youtubeSearch.get(\"playlistItems\", {\n        params: {\n          playlistId: data\n        }\n      });\n      return res.data.items;\n    };\n\n    getTrendingMusic().then(data => {\n      setSongObj(prevState => {\n        return { ...prevState,\n          ...{\n            trending: data\n          }\n        };\n      });\n    });\n    getPlayListItems(playlistsIds.LatestSongs).then(data => {\n      setSongObj(prevState => {\n        return { ...prevState,\n          ...{\n            latestSongs: data\n          }\n        };\n      });\n    });\n    getPlayListItems(playlistsIds.VpopSongs).then(data => {\n      setSongObj(prevState => {\n        return { ...prevState,\n          ...{\n            vpopSongs: data\n          }\n        };\n      });\n    });\n    getPlayListItems(playlistsIds.TopBolloywood).then(data => {\n      setSongObj(prevState => {\n        return { ...prevState,\n          ...{\n            topVietnam: data\n          }\n        };\n      });\n    });\n  };\n\n  useEffect(() => {\n    const startingTime = new Date();\n    const storedTime = localStorage.getItem(\"trackTime\");\n    const savedSongs = JSON.parse(localStorage.getItem(\"homePageSongObj\"));\n\n    if (!window.navigator.onLine) {\n      alert(\"You don't have internet!\");\n    }\n\n    const checkTimeAndFetch = () => {\n      const timeElapsed = new Date() - Date.parse(storedTime); //parse the date\n\n      const timeElapsedInHr = timeElapsed / (1000 * 60 * 60); //convert ms into hr\n      // if time is more than 12 hr we will fetch from the api\n\n      console.log(\"Saved song\", savedSongs);\n\n      if (timeElapsedInHr > 12 || !savedSongs.latestSongs) {\n        fetchFromApi();\n        localStorage.setItem(\"trackTime\", startingTime); //dont forgot to update the time\n      } else {\n        setSongObj(savedSongs);\n      }\n    };\n\n    if (!storedTime) {\n      // if no time stored we will store it\n      localStorage.setItem(\"trackTime\", startingTime);\n      fetchFromApi();\n    } else {\n      checkTimeAndFetch();\n    }\n  }, []); // if song object changes we will push it to localstoarge\n\n  useEffect(() => {\n    localStorage.setItem(\"homePageSongObj\", JSON.stringify(songObj));\n  }, [songObj]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(SongCard, {\n    songs: songObj.trending,\n    categotyTitle: \"Trending Now\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(SongCard, {\n    songs: songObj.latestSongs,\n    categotyTitle: \"Latest Music\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(SongCard, {\n    songs: songObj.romanticSongs,\n    categotyTitle: \"Romantic Mood\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(SongCard, {\n    songs: songObj.topBolloywood,\n    categotyTitle: \"Top Bollywood\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default HomePage;","map":{"version":3,"sources":["C:/myProJects/WeatherApp/weatherapp/src/components/sections/HomePage.js"],"names":["React","useState","useEffect","Typography","SongCard","youtubeSearch","playlistsIds","LatestSongs","VpopSongs","EdmSongs","TopBolloywood","TopPop","Reggaeton","slowConnectionTimeout","HomePage","songObj","setSongObj","fetchFromApi","setTimeout","getTrendingMusic","res","get","params","chart","videoCategoryId","regionCode","localStorage","getItem","data","items","getPlayListItems","playlistId","then","prevState","trending","latestSongs","vpopSongs","topVietnam","startingTime","Date","storedTime","savedSongs","JSON","parse","window","navigator","onLine","alert","checkTimeAndFetch","timeElapsed","timeElapsedInHr","console","log","setItem","stringify","romanticSongs","topBolloywood"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Typography } from \"@material-ui/core\";\r\n\r\nimport SongCard from \"./SongCard\";\r\n\r\nimport youtubeSearch from \"../../apis/yotubeSearch\";\r\n\r\n// make a permanent playlist object with few songs catergory\r\nconst playlistsIds = {\r\n  LatestSongs: \"PLFgquLnL59akA2PflFpeQG9L01VFg90wS\",\r\n  VpopSongs: \"PLWW7O4OXAEuPL8HUT5ELAOwdvpPA1YZd6\",\r\n  EdmSongs: \"PLw-VjHDlEOgs658kAHR_LAaILBXb-s6Q5\",\r\n  TopBolloywood: \"PLcRN7uK9CFpPkvCc-08tWOQo6PAg4u0lA\",\r\n  TopPop: \"PLDcnymzs18LU4Kexrs91TVdfnplU3I5zs\",\r\n  Reggaeton: \"PLS_oEMUyvA728OZPmF9WPKjsGtfC75LiN\"\r\n};\r\n\r\nlet slowConnectionTimeout;\r\nconst HomePage = () => {\r\n  // for home playlist\r\n  const [songObj, setSongObj] = useState({});\r\n\r\n  const fetchFromApi = () => {\r\n    slowConnectionTimeout = setTimeout(() => {}, 5000);\r\n\r\n    const getTrendingMusic = async () => {\r\n      const res = await youtubeSearch.get(\"videos\", {\r\n        params: {\r\n          chart: \"mostPopular\",\r\n          videoCategoryId: \"10\",\r\n          regionCode: localStorage.getItem(\"country_code\")\r\n        }\r\n      });\r\n\r\n      return res.data.items;\r\n    };\r\n\r\n    const getPlayListItems = async data => {\r\n      const res = await youtubeSearch.get(\"playlistItems\", {\r\n        params: {\r\n          playlistId: data\r\n        }\r\n      });\r\n      return res.data.items;\r\n    };\r\n\r\n    getTrendingMusic().then(data => {\r\n      setSongObj(prevState => {\r\n        return { ...prevState, ...{ trending: data } };\r\n      });\r\n    });\r\n\r\n    getPlayListItems(playlistsIds.LatestSongs).then(data => {\r\n      setSongObj(prevState => {\r\n        return { ...prevState, ...{ latestSongs: data } };\r\n      });\r\n    });\r\n\r\n    getPlayListItems(playlistsIds.VpopSongs).then(data => {\r\n      setSongObj(prevState => {\r\n        return { ...prevState, ...{ vpopSongs: data } };\r\n      });\r\n    });\r\n\r\n    getPlayListItems(playlistsIds.TopBolloywood).then(data => {\r\n      setSongObj(prevState => {\r\n        return { ...prevState, ...{ topVietnam: data } };\r\n      });\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const startingTime = new Date();\r\n    const storedTime = localStorage.getItem(\"trackTime\");\r\n    const savedSongs = JSON.parse(localStorage.getItem(\"homePageSongObj\"));\r\n\r\n    if (!window.navigator.onLine) {\r\n      alert(\"You don't have internet!\");\r\n    }\r\n\r\n    const checkTimeAndFetch = () => {\r\n      const timeElapsed = new Date() - Date.parse(storedTime); //parse the date\r\n\r\n      const timeElapsedInHr = timeElapsed / (1000 * 60 * 60); //convert ms into hr\r\n\r\n      // if time is more than 12 hr we will fetch from the api\r\n\r\n      console.log(\"Saved song\", savedSongs);\r\n      if (timeElapsedInHr > 12 || !savedSongs.latestSongs) {\r\n        fetchFromApi();\r\n        localStorage.setItem(\"trackTime\", startingTime); //dont forgot to update the time\r\n      } else {\r\n        setSongObj(savedSongs);\r\n      }\r\n    };\r\n\r\n    if (!storedTime) {\r\n      // if no time stored we will store it\r\n      localStorage.setItem(\"trackTime\", startingTime);\r\n      fetchFromApi();\r\n    } else {\r\n      checkTimeAndFetch();\r\n    }\r\n  }, []);\r\n\r\n  // if song object changes we will push it to localstoarge\r\n  useEffect(() => {\r\n    localStorage.setItem(\"homePageSongObj\", JSON.stringify(songObj));\r\n  }, [songObj]);\r\n\r\n  return (\r\n    <>\r\n      <br />\r\n      <SongCard songs={songObj.trending} categotyTitle={\"Trending Now\"} />\r\n\r\n      <SongCard songs={songObj.latestSongs} categotyTitle={\"Latest Music\"} />\r\n\r\n      <SongCard songs={songObj.romanticSongs} categotyTitle={\"Romantic Mood\"} />\r\n\r\n      <SongCard songs={songObj.topBolloywood} categotyTitle={\"Top Bollywood\"} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n"]},"metadata":{},"sourceType":"module"}