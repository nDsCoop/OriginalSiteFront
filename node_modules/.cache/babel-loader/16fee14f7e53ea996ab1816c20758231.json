{"ast":null,"code":"var _jsxFileName = \"C:\\\\myProJects\\\\Server\\\\weatherapp\\\\src\\\\components\\\\App3.js\";\nimport React, { Component } from 'react';\nimport defaultImg from \"../images/Logomini.svg\";\nimport { Link } from 'react-router-dom';\nimport { OrderedMap } from 'immutable';\nimport _ from 'lodash';\nimport { ObjectID } from \"../helpers/objectid\";\nexport default class App3 extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = e => {\n      const {\n        newMessage\n      } = this.state;\n      const {\n        store\n      } = this.props;\n      console.log(newMessage);\n      const messageId = new ObjectID().toString();\n      const channel = store.getActiveChannel();\n\n      const channelId = _.get(channel, '_id', null);\n\n      const currentUser = store.getCurrentUser();\n      const message = {\n        _id: messageId,\n        channelId: channelId,\n        body: newMessage,\n        author: _.get(currentUser, 'name'),\n        avatar: defaultImg,\n        me: true\n      };\n      e.preventDefault();\n      store.addMessage(messageId, message);\n      this.setState({\n        newMessage: \"\"\n      });\n    };\n\n    this._onResi = () => {\n      this.setState({\n        height: window.innerHeight\n      });\n    };\n\n    this.addTestMessages = () => {\n      const {\n        store\n      } = this.props;\n\n      for (let i = 0; i < 20; i++) {\n        let isMe = false;\n\n        if (i % 2 === 0) {\n          isMe = true;\n        }\n\n        const newMsg = {\n          _id: `${i}`,\n          author: `Author: ${i}`,\n          body: `The body of message ${i}`,\n          avatar: defaultImg,\n          me: isMe,\n          timing: '0:00'\n        };\n        store.addMessage(i, newMsg);\n      }\n\n      for (let c = 0; c < 10; c++) {\n        const newChannel = {\n          _id: `${c}`,\n          title: `Channel title ${c}`,\n          lastMessage: `Hey there is.. ${c}`,\n          members: new OrderedMap({\n            '1': true,\n            '2': true\n          }),\n          messages: new OrderedMap()\n        };\n        const moreMsgId = `${c + 1}`;\n        const msgId = `${c}`;\n        newChannel.messages = newChannel.messages.set(msgId, true);\n        newChannel.messages = newChannel.messages.set(moreMsgId, true);\n        store.addChannel(c, newChannel);\n      }\n    };\n\n    this.state = {\n      height: window.innerHeight,\n      newMessage: ''\n    };\n  }\n\n  renderMessage(message) {\n    return /*#__PURE__*/React.createElement(\"p\", {\n      dangerouslySetInnerHTML: {\n        __html: _.get(message, 'body')\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 16\n      }\n    });\n  }\n\n  componentDidMount() {\n    window.addEventListener('resize', this._onResi);\n    this.addTestMessages();\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this._onResi);\n  }\n\n  render() {\n    const {\n      height,\n      newMessage\n    } = this.state;\n    const {\n      store\n    } = this.props;\n    const activeChannel = store.getActiveChannel();\n    const messages = store.getMessagesFromChannel(activeChannel);\n    const members = store.getMembersFromChannel(activeChannel);\n    const chanels = store.getChannels();\n    const style = {\n      height: height\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: style,\n      className: \"app3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"chat-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header-left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"action\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      className: \"btn-primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 29\n      }\n    }, \"New Message\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header-mid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 29\n      }\n    }, \"Title\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"user-bar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"name-user\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 33\n      }\n    }, \"nDs\"), /*#__PURE__*/React.createElement(\"img\", {\n      src: defaultImg,\n      alt: \"user-img\",\n      className: \"img-user\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 33\n      }\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"chat-main\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"sidebar-left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"chanels\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 25\n      }\n    }, chanels.map((chanel, index) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        onClick: index => {\n          store.setActiveChannelId(chanel._id);\n        },\n        key: chanel._id,\n        className: \"chanel\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"user-img\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: defaultImg,\n        alt: \"user-img\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 45\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"chanel-info\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 45\n        }\n      }, chanel.title), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 45\n        }\n      }, chanel.lastMessage)));\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"chat-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"messages\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 25\n      }\n    }, messages.map((mess, index) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: index,\n        className: `${mess.me ? 'message-me' : 'message'}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: mess.avatar,\n        alt: \"user-img\",\n        className: \"img-user\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 41\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"message-body\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"username\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 45\n        }\n      }, `${mess.me ? 'Me' : mess.author}`, \" say:\"), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"message-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 45\n        }\n      }, this.renderMessage(mess), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"timing\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 49\n        }\n      }, mess.timing))));\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"message-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      // onSubmit={ this.handleSubmit }\n      className: \"message-form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      id: \"message\",\n      ref: \"messageinput\",\n      type: \"text\",\n      className: \"form-control\",\n      value: newMessage,\n      autoComplete: 'off',\n      placeholder: \"Type something interesting\",\n      onKeyUp: e => {\n        console.log(\"key:\", e.key);\n\n        if (e.key === 'Enter' && !e.key !== 'Shift') {\n          this.handleSubmit();\n        }\n      },\n      onChange: ({\n        target\n      }) => {\n        this.setState({\n          newMessage: target.value\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      // disabled = { message.length < 1 }\n      type: \"submit\",\n      className: \"send\",\n      onClick: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 33\n      }\n    }, \" Send \")))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"sidebar-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"title-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 25\n      }\n    }, \"Members\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"chanels\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 25\n      }\n    }, members.map((member, index) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: index,\n        className: \"chanel\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"user-img\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: defaultImg,\n        alt: \"user-img\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 45\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"chanel-info\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 45\n        }\n      }, member.name), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 45\n        }\n      }, \"Joined: 2000 years ago\")));\n    })))));\n  }\n\n}","map":{"version":3,"sources":["C:/myProJects/Server/weatherapp/src/components/App3.js"],"names":["React","Component","Link","OrderedMap","_","ObjectID","App3","constructor","props","handleSubmit","e","newMessage","state","store","console","log","messageId","toString","channel","getActiveChannel","channelId","get","currentUser","getCurrentUser","message","_id","body","author","avatar","defaultImg","me","preventDefault","addMessage","setState","_onResi","height","window","innerHeight","addTestMessages","i","isMe","newMsg","timing","c","newChannel","title","lastMessage","members","messages","moreMsgId","msgId","set","addChannel","renderMessage","__html","componentDidMount","addEventListener","componentWillUnmount","removeEventListener","render","activeChannel","getMessagesFromChannel","getMembersFromChannel","chanels","getChannels","style","map","chanel","index","setActiveChannelId","mess","key","target","value","member","name"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,UAAT,QAA2B,WAA3B;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,SAAQC,QAAR,QAAuB,qBAAvB;AAGA,eAAe,MAAMC,IAAN,SAAmBL,SAAnB,CAA6B;AACxCM,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SAWlBC,YAXkB,GAWFC,CAAD,IAAO;AAClB,YAAM;AAAEC,QAAAA;AAAF,UAAiB,KAAKC,KAA5B;AACA,YAAM;AAAEC,QAAAA;AAAF,UAAY,KAAKL,KAAvB;AAEAM,MAAAA,OAAO,CAACC,GAAR,CAAYJ,UAAZ;AAEA,YAAMK,SAAS,GAAG,IAAIX,QAAJ,GAAeY,QAAf,EAAlB;AACA,YAAMC,OAAO,GAAGL,KAAK,CAACM,gBAAN,EAAhB;;AACA,YAAMC,SAAS,GAAGhB,CAAC,CAACiB,GAAF,CAAMH,OAAN,EAAgB,KAAhB,EAAuB,IAAvB,CAAlB;;AACA,YAAMI,WAAW,GAAGT,KAAK,CAACU,cAAN,EAApB;AACA,YAAMC,OAAO,GAAG;AACZC,QAAAA,GAAG,EAAET,SADO;AAEZI,QAAAA,SAAS,EAAEA,SAFC;AAGZM,QAAAA,IAAI,EAAGf,UAHK;AAIZgB,QAAAA,MAAM,EAAGvB,CAAC,CAACiB,GAAF,CAAMC,WAAN,EAAmB,MAAnB,CAJG;AAKZM,QAAAA,MAAM,EAAEC,UALI;AAMZC,QAAAA,EAAE,EAAE;AANQ,OAAhB;AAQApB,MAAAA,CAAC,CAACqB,cAAF;AACAlB,MAAAA,KAAK,CAACmB,UAAN,CAAiBhB,SAAjB,EAA4BQ,OAA5B;AACA,WAAKS,QAAL,CAAc;AAACtB,QAAAA,UAAU,EAAE;AAAb,OAAd;AACH,KAhCiB;;AAAA,SAiClBuB,OAjCkB,GAiCR,MAAM;AACZ,WAAKD,QAAL,CAAc;AAACE,QAAAA,MAAM,EAAEC,MAAM,CAACC;AAAhB,OAAd;AACH,KAnCiB;;AAAA,SAoClBC,eApCkB,GAoCA,MAAM;AACpB,YAAM;AAACzB,QAAAA;AAAD,UAAU,KAAKL,KAArB;;AAGA,WAAI,IAAI+B,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAG,EAAnB,EAAuBA,CAAC,EAAxB,EAA2B;AACvB,YAAIC,IAAI,GAAG,KAAX;;AACA,YAAGD,CAAC,GAAG,CAAJ,KAAU,CAAb,EAAgB;AACZC,UAAAA,IAAI,GAAG,IAAP;AACH;;AACD,cAAMC,MAAM,GAAG;AACXhB,UAAAA,GAAG,EAAG,GAAEc,CAAE,EADC;AAEXZ,UAAAA,MAAM,EAAG,WAAUY,CAAE,EAFV;AAGXb,UAAAA,IAAI,EAAG,uBAAsBa,CAAE,EAHpB;AAIXX,UAAAA,MAAM,EAAEC,UAJG;AAKXC,UAAAA,EAAE,EAAEU,IALO;AAMXE,UAAAA,MAAM,EAAE;AANG,SAAf;AAQA7B,QAAAA,KAAK,CAACmB,UAAN,CAAiBO,CAAjB,EAAoBE,MAApB;AAEH;;AAED,WAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAC,EAAlB,EAAsBA,CAAC,EAAvB,EAA0B;AACtB,cAAMC,UAAU,GAAE;AACdnB,UAAAA,GAAG,EAAG,GAAEkB,CAAE,EADI;AAEdE,UAAAA,KAAK,EAAG,iBAAgBF,CAAE,EAFZ;AAGdG,UAAAA,WAAW,EAAG,kBAAiBH,CAAE,EAHnB;AAIdI,UAAAA,OAAO,EAAE,IAAI5C,UAAJ,CAAe;AACpB,iBAAK,IADe;AAEpB,iBAAK;AAFe,WAAf,CAJK;AAQd6C,UAAAA,QAAQ,EAAE,IAAI7C,UAAJ;AARI,SAAlB;AAUA,cAAM8C,SAAS,GAAG,GAAEN,CAAC,GAAG,CAAE,EAA1B;AACA,cAAMO,KAAK,GAAI,GAAEP,CAAE,EAAnB;AACAC,QAAAA,UAAU,CAACI,QAAX,GAAsBJ,UAAU,CAACI,QAAX,CAAoBG,GAApB,CAAwBD,KAAxB,EAA+B,IAA/B,CAAtB;AACAN,QAAAA,UAAU,CAACI,QAAX,GAAsBJ,UAAU,CAACI,QAAX,CAAoBG,GAApB,CAAwBF,SAAxB,EAAmC,IAAnC,CAAtB;AACApC,QAAAA,KAAK,CAACuC,UAAN,CAAiBT,CAAjB,EAAoBC,UAApB;AACH;AAEJ,KA3EiB;;AAEd,SAAKhC,KAAL,GAAa;AACTuB,MAAAA,MAAM,EAAEC,MAAM,CAACC,WADN;AAET1B,MAAAA,UAAU,EAAE;AAFH,KAAb;AAKH;;AACD0C,EAAAA,aAAa,CAAC7B,OAAD,EAAS;AAClB,wBAAO;AAAG,MAAA,uBAAuB,EAAE;AAAC8B,QAAAA,MAAM,EAAElD,CAAC,CAACiB,GAAF,CAAMG,OAAN,EAAe,MAAf;AAAT,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH;;AAkED+B,EAAAA,iBAAiB,GAAE;AACfnB,IAAAA,MAAM,CAACoB,gBAAP,CAAwB,QAAxB,EAAkC,KAAKtB,OAAvC;AACA,SAAKI,eAAL;AACH;;AACDmB,EAAAA,oBAAoB,GAAE;AAClBrB,IAAAA,MAAM,CAACsB,mBAAP,CAA2B,QAA3B,EAAqC,KAAKxB,OAA1C;AACH;;AACDyB,EAAAA,MAAM,GAAG;AACL,UAAM;AAAExB,MAAAA,MAAF;AAAUxB,MAAAA;AAAV,QAAyB,KAAKC,KAApC;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAY,KAAKL,KAAvB;AACA,UAAMoD,aAAa,GAAG/C,KAAK,CAACM,gBAAN,EAAtB;AACA,UAAM6B,QAAQ,GAAGnC,KAAK,CAACgD,sBAAN,CAA6BD,aAA7B,CAAjB;AACA,UAAMb,OAAO,GAAGlC,KAAK,CAACiD,qBAAN,CAA4BF,aAA5B,CAAhB;AACA,UAAMG,OAAO,GAAGlD,KAAK,CAACmD,WAAN,EAAhB;AACA,UAAMC,KAAK,GAAG;AACV9B,MAAAA,MAAM,EAAEA;AADE,KAAd;AAGA,wBACI;AAAK,MAAA,KAAK,EAAE8B,KAAZ;AAAmB,MAAA,SAAS,EAAC,MAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD;AAAM,MAAA,SAAS,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,CADJ,CADJ,eAMQ;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,CANR,eASQ;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,eAEI;AAAK,MAAA,GAAG,EAAEpC,UAAV;AAAsB,MAAA,GAAG,EAAC,UAA1B;AAAqC,MAAA,SAAS,EAAC,UAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ,CATR,CADJ,eAiBI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKkC,OAAO,CAACG,GAAR,CAAY,CAACC,MAAD,EAASC,KAAT,KAAkB;AAC3B,0BACI;AAAK,QAAA,OAAO,EAAIA,KAAD,IAAW;AACtBvD,UAAAA,KAAK,CAACwD,kBAAN,CAAyBF,MAAM,CAAC1C,GAAhC;AACH,SAFD;AAEG,QAAA,GAAG,EAAE0C,MAAM,CAAC1C,GAFf;AAEoB,QAAA,SAAS,EAAC,QAF9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAGI;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAK,QAAA,GAAG,EAAEI,UAAV;AAAsB,QAAA,GAAG,EAAC,UAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CAHJ,eAMI;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKsC,MAAM,CAACtB,KAAZ,CADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAIsB,MAAM,CAACrB,WAAX,CAFJ,CANJ,CADJ;AAaH,KAdA,CADL,CADJ,CADJ,eAqBI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEQE,QAAQ,CAACkB,GAAT,CAAa,CAACI,IAAD,EAAOF,KAAP,KAAiB;AAC1B,0BACI;AAAK,QAAA,GAAG,EAAEA,KAAV;AAAiB,QAAA,SAAS,EAAG,GAAEE,IAAI,CAACxC,EAAL,GAAU,YAAV,GAAyB,SAAU,EAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACA;AAAK,QAAA,GAAG,EAAEwC,IAAI,CAAC1C,MAAf;AAAuB,QAAA,GAAG,EAAC,UAA3B;AAAsC,QAAA,SAAS,EAAC,UAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,eAEA;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA4B,GAAE0C,IAAI,CAACxC,EAAL,GAAU,IAAV,GAAiBwC,IAAI,CAAC3C,MAAO,EAA3D,UADJ,eAEI;AAAG,QAAA,SAAS,EAAC,cAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACM,KAAK0B,aAAL,CAAmBiB,IAAnB,CADN,eAEI;AAAG,QAAA,SAAS,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAuBA,IAAI,CAAC5B,MAA5B,CAFJ,CAFJ,CAFA,CADJ;AAYH,KAbD,CAFR,CADJ,eA+BI;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AACI;AACA,MAAA,SAAS,EAAC,cAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAII;AACI,MAAA,EAAE,EAAG,SADT;AAEI,MAAA,GAAG,EAAI,cAFX;AAGI,MAAA,IAAI,EAAG,MAHX;AAII,MAAA,SAAS,EAAG,cAJhB;AAKI,MAAA,KAAK,EAAK/B,UALd;AAMI,MAAA,YAAY,EAAI,KANpB;AAOI,MAAA,WAAW,EAAG,4BAPlB;AAQI,MAAA,OAAO,EAAMD,CAAD,IAAO;AACfI,QAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBL,CAAC,CAAC6D,GAAtB;;AACC,YAAG7D,CAAC,CAAC6D,GAAF,KAAU,OAAV,IAAqB,CAAC7D,CAAC,CAAC6D,GAAH,KAAW,OAAnC,EAA4C;AACxC,eAAK9D,YAAL;AACH;AAAC,OAZX;AAcI,MAAA,QAAQ,EACP,CAAC;AAAC+D,QAAAA;AAAD,OAAD,KAAY;AACX,aAAKvC,QAAL,CAAc;AAACtB,UAAAA,UAAU,EAAC6D,MAAM,CAACC;AAAnB,SAAd;AACA,OAjBN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,eAwBI;AACI;AACA,MAAA,IAAI,EAAG,QAFX;AAGI,MAAA,SAAS,EAAG,MAHhB;AAII,MAAA,OAAO,EAAK,KAAKhE,YAJrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAxBJ,CADJ,CA/BJ,CArBJ,eAuFI;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,eAEI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACMsC,OAAO,CAACmB,GAAR,CAAY,CAACQ,MAAD,EAASN,KAAT,KAAmB;AAC7B,0BACI;AAAK,QAAA,GAAG,EAAIA,KAAZ;AAAoB,QAAA,SAAS,EAAC,QAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAK,QAAA,GAAG,EAAEvC,UAAV;AAAsB,QAAA,GAAG,EAAC,UAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ,eAII;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAM6C,MAAM,CAACC,IAAb,CADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAFJ,CAJJ,CADJ;AAWH,KAZC,CADN,CAFJ,CAvFJ,CAjBJ,CADJ;AAiIH;;AA/NuC","sourcesContent":["import React, { Component } from 'react'\r\nimport defaultImg from '../images/Logomini.svg';\r\nimport { Link } from 'react-router-dom';\r\nimport { OrderedMap } from 'immutable';\r\nimport _ from 'lodash';\r\nimport {ObjectID} from \"../helpers/objectid\";\r\n\r\n\r\nexport default class App3 extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            height: window.innerHeight,\r\n            newMessage: ''\r\n        }\r\n\r\n    }\r\n    renderMessage(message){\r\n        return <p dangerouslySetInnerHTML={{__html: _.get(message, 'body')}}></p>\r\n    }\r\n    handleSubmit = (e) => {\r\n        const { newMessage } = this.state;\r\n        const { store } = this.props;\r\n        \r\n        console.log(newMessage);\r\n\r\n        const messageId = new ObjectID().toString();\r\n        const channel = store.getActiveChannel();\r\n        const channelId = _.get(channel , '_id', null);\r\n        const currentUser = store.getCurrentUser();\r\n        const message = {\r\n            _id: messageId,\r\n            channelId: channelId,\r\n            body : newMessage,\r\n            author : _.get(currentUser, 'name'),\r\n            avatar: defaultImg,\r\n            me: true,\r\n        };\r\n        e.preventDefault();\r\n        store.addMessage(messageId, message);\r\n        this.setState({newMessage: \"\"});\r\n    }\r\n    _onResi = () => {\r\n        this.setState({height: window.innerHeight});\r\n    }\r\n    addTestMessages = () => {\r\n        const {store} = this.props\r\n\r\n      \r\n        for(let i = 0; i < 20; i++){\r\n            let isMe = false;\r\n            if(i % 2 === 0) {\r\n                isMe = true;\r\n            }\r\n            const newMsg = {\r\n                _id: `${i}`,\r\n                author: `Author: ${i}`,\r\n                body: `The body of message ${i}`,\r\n                avatar: defaultImg,\r\n                me: isMe,\r\n                timing: '0:00'\r\n            }\r\n            store.addMessage(i, newMsg);\r\n\r\n        }\r\n\r\n        for (let c = 0; c<10; c++){\r\n            const newChannel ={\r\n                _id: `${c}`,\r\n                title: `Channel title ${c}`,\r\n                lastMessage: `Hey there is.. ${c}`,\r\n                members: new OrderedMap({\r\n                    '1': true,\r\n                    '2': true,\r\n                }),\r\n                messages: new OrderedMap(),\r\n            }\r\n            const moreMsgId =`${c + 1}`;\r\n            const msgId = `${c}`;\r\n            newChannel.messages = newChannel.messages.set(msgId, true);\r\n            newChannel.messages = newChannel.messages.set(moreMsgId, true);\r\n            store.addChannel(c, newChannel);\r\n        }\r\n\r\n    }\r\n    componentDidMount(){\r\n        window.addEventListener('resize', this._onResi);\r\n        this.addTestMessages();\r\n    }\r\n    componentWillUnmount(){\r\n        window.removeEventListener('resize', this._onResi);\r\n    }\r\n    render() {\r\n        const { height, newMessage } = this.state;\r\n        const { store } = this.props;\r\n        const activeChannel = store.getActiveChannel();\r\n        const messages = store.getMessagesFromChannel(activeChannel);\r\n        const members = store.getMembersFromChannel(activeChannel);\r\n        const chanels = store.getChannels();\r\n        const style = {\r\n            height: height,\r\n        }\r\n        return (\r\n            <div style={style} className=\"app3\">\r\n                <div className=\"chat-header\">\r\n                    <div className=\"header-left\">\r\n                        <div className=\"action\">\r\n                            <Link className=\"btn-primary\">New Message</Link>\r\n                        </div>\r\n                        </div>\r\n                        <div className=\"header-mid\">\r\n                            <h3>Title</h3>\r\n                        </div>\r\n                        <div className=\"header-right\">\r\n                            <div className=\"user-bar\">\r\n                                <div className=\"name-user\">nDs</div>\r\n                                <img src={defaultImg} alt=\"user-img\" className=\"img-user\"></img>\r\n                            </div>\r\n                        </div>\r\n                </div>\r\n                <div className=\"chat-main\">\r\n                    <div className=\"sidebar-left\">\r\n                        <div className=\"chanels\">\r\n                            {chanels.map((chanel, index) =>{\r\n                                return (\r\n                                    <div onClick= {(index) => {\r\n                                        store.setActiveChannelId(chanel._id);\r\n                                    }} key={chanel._id} className=\"chanel\">\r\n                                        <div className=\"user-img\">\r\n                                            <img src={defaultImg} alt=\"user-img\" />\r\n                                        </div>\r\n                                        <div className=\"chanel-info\">\r\n                                            <h4>{chanel.title}</h4>\r\n                                            <p>{chanel.lastMessage}</p>\r\n                                        </div>\r\n                                    </div>\r\n                                )\r\n                            })}\r\n                            \r\n                        </div>\r\n                    </div>\r\n                    <div className=\"chat-content\">\r\n                        <div className=\"messages\">\r\n                            { \r\n                                messages.map((mess, index) => { \r\n                                    return (\r\n                                        <div key={index} className={`${mess.me ? 'message-me' : 'message'}`}>\r\n                                        <img src={mess.avatar} alt=\"user-img\" className=\"img-user\"></img>\r\n                                        <div className=\"message-body\">\r\n                                            <div className=\"username\">{`${mess.me ? 'Me' : mess.author}`} say:</div>\r\n                                            <p className=\"message-text\">\r\n                                                { this.renderMessage(mess) }\r\n                                                <p className=\"timing\">{mess.timing}</p>\r\n                                            </p>\r\n                                        </div>\r\n                                        </div>\r\n                                    );\r\n                                })\r\n                            }\r\n                           \r\n                            {/*  <div className=\"message-me\">\r\n                                 <img src={defaultImg} alt=\"user-img\" className=\"img-user\"></img>\r\n                                 <div className=\"message-body\">\r\n                                     <div className=\"username\">Me say:</div>\r\n                                     <p className=\"message-text\">\r\n                                         Hello you come app chat!\r\n                                         <p className=\"timing\">0:00</p>\r\n                                     </p>\r\n                                   \r\n                                 </div>\r\n                             </div> */}\r\n                        </div>\r\n                        <div className=\"message-input\">\r\n                            <form \r\n                                // onSubmit={ this.handleSubmit }\r\n                                className=\"message-form\">\r\n\r\n                                <input \r\n                                    id = \"message\"\r\n                                    ref = {\"messageinput\"}\r\n                                    type = \"text\"\r\n                                    className = \"form-control\"\r\n                                    value = { newMessage }\r\n                                    autoComplete = {'off'}\r\n                                    placeholder = \"Type something interesting\"\r\n                                    onKeyUp = { (e) => {\r\n                                        console.log(\"key:\", e.key);\r\n                                         if(e.key === 'Enter' && !e.key !== 'Shift') {\r\n                                             this.handleSubmit();\r\n                                         }}\r\n                                    }\r\n                                    onChange = {\r\n                                    \t({target})=>{\r\n                                    \t\tthis.setState({newMessage:target.value})\r\n                                    \t}\r\n                                    }\r\n                                    />\r\n                                <button\r\n                                    // disabled = { message.length < 1 }\r\n                                    type = \"submit\"\r\n                                    className = \"send\"\r\n                                    onClick = { this.handleSubmit }\r\n                                > Send </button>\r\n                            </form>\r\n\t\t\t            </div>\r\n                    </div>\r\n                   \r\n                    <div className=\"sidebar-right\">\r\n                        <div className=\"title-right\">Members</div>\r\n                        <div className=\"chanels\">\r\n                            { members.map((member, index) => {\r\n                                return (\r\n                                    <div key ={ index } className=\"chanel\">\r\n                                        <div className=\"user-img\">\r\n                                            <img src={defaultImg} alt=\"user-img\" />\r\n                                        </div>\r\n                                        <div className=\"chanel-info\">\r\n                                            <h4>{ member.name }</h4>\r\n                                            <p>Joined: 2000 years ago</p>\r\n                                        </div>\r\n                                    </div>\r\n                                )\r\n                            })}\r\n                            \r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}