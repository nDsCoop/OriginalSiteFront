{"ast":null,"code":"import _slicedToArray from\"C:\\\\myProJects\\\\Server\\\\weatherapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState,useContext}from\"react\";import{BrowserRouter as Router,Route,Switch}from\"react-router-dom\";import SimpleAppBar from\"./header/SimpleAppBar\";import MainPlayer from\"./player/MainPlayer\";import SwipeMenu from\"./SwipeMenu\";import SnackbarMessage from\"./SnackbarMessage\";import{MuiThemeProvider,createMuiTheme}from\"@material-ui/core/styles\";import{blueGrey,blue}from\"@material-ui/core/colors\";import{useCheckDarkmode}from\"./sections/SettingsPage\";import{GlobalContext}from\"./GlobalState\";import CurrentSection from\"./CurrentSection\";var body=document.querySelector(\"body\");var defaultTheme={palette:{primary:blueGrey,third:blue,secondary:{main:\"#263238\"}},typography:{useNextVariants:true}};var darkTheme={palette:{type:\"dark\",primary:blueGrey,third:blue,secondary:{main:\"#263238\"}},typography:{useNextVariants:true}};var muiDarkTheme=createMuiTheme(darkTheme);var muiDefaultTheme=createMuiTheme(defaultTheme);var App2=function App2(){var _useContext=useContext(GlobalContext),_useContext2=_slicedToArray(_useContext,2),themeSelectValue=_useContext2[0].themeSelectValue,dispatch=_useContext2[1];var _useCheckDarkmode=useCheckDarkmode(),checkDarkMode=_useCheckDarkmode.checkDarkMode;useEffect(function(){checkDarkMode();if(navigator.userAgent.match(/Android/i)){body.style.overscrollBehavior=\"none\";// this is to disable pull refresh on android\n}},[]);useEffect(function(){if(themeSelectValue===\"Dark\"){body.classList.add(\"dark\");}else{body.classList.remove(\"dark\");}},[themeSelectValue]);return/*#__PURE__*/React.createElement(MuiThemeProvider,{theme:themeSelectValue===\"Dark\"?muiDarkTheme:muiDefaultTheme},/*#__PURE__*/React.createElement(Switch,null,/*#__PURE__*/React.createElement(Router,null,/*#__PURE__*/React.createElement(SimpleAppBar,null),/*#__PURE__*/React.createElement(Route,{component:CurrentSection}),/*#__PURE__*/React.createElement(SwipeMenu,null))));};export default App2;","map":{"version":3,"sources":["C:/myProJects/Server/weatherapp/src/components/App2.js"],"names":["React","useEffect","useState","useContext","BrowserRouter","Router","Route","Switch","SimpleAppBar","MainPlayer","SwipeMenu","SnackbarMessage","MuiThemeProvider","createMuiTheme","blueGrey","blue","useCheckDarkmode","GlobalContext","CurrentSection","body","document","querySelector","defaultTheme","palette","primary","third","secondary","main","typography","useNextVariants","darkTheme","type","muiDarkTheme","muiDefaultTheme","App2","themeSelectValue","dispatch","checkDarkMode","navigator","userAgent","match","style","overscrollBehavior","classList","add","remove"],"mappings":"8JAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,CAAqCC,UAArC,KAAuD,OAAvD,CACA,OAASC,aAAa,GAAIC,CAAAA,MAA1B,CAAkCC,KAAlC,CAAyCC,MAAzC,KAAuD,kBAAvD,CAEA,MAAOC,CAAAA,YAAP,KAAyB,uBAAzB,CACA,MAAOC,CAAAA,UAAP,KAAuB,qBAAvB,CACA,MAAOC,CAAAA,SAAP,KAAsB,aAAtB,CACA,MAAOC,CAAAA,eAAP,KAA4B,mBAA5B,CACA,OAASC,gBAAT,CAA2BC,cAA3B,KAAiD,0BAAjD,CACA,OAASC,QAAT,CAAmBC,IAAnB,KAA+B,0BAA/B,CAEA,OAASC,gBAAT,KAAiC,yBAAjC,CACA,OAASC,aAAT,KAA8B,eAA9B,CACA,MAAOC,CAAAA,cAAP,KAA2B,kBAA3B,CAEA,GAAMC,CAAAA,IAAI,CAAGC,QAAQ,CAACC,aAAT,CAAuB,MAAvB,CAAb,CAEA,GAAMC,CAAAA,YAAY,CAAG,CACnBC,OAAO,CAAE,CACPC,OAAO,CAAEV,QADF,CAEPW,KAAK,CAAEV,IAFA,CAGPW,SAAS,CAAE,CACTC,IAAI,CAAE,SADG,CAHJ,CADU,CAQnBC,UAAU,CAAE,CACVC,eAAe,CAAE,IADP,CARO,CAArB,CAaA,GAAMC,CAAAA,SAAS,CAAG,CAChBP,OAAO,CAAE,CACPQ,IAAI,CAAE,MADC,CAEPP,OAAO,CAAEV,QAFF,CAGPW,KAAK,CAAEV,IAHA,CAIPW,SAAS,CAAE,CACTC,IAAI,CAAE,SADG,CAJJ,CADO,CAShBC,UAAU,CAAE,CACVC,eAAe,CAAE,IADP,CATI,CAAlB,CAcA,GAAMG,CAAAA,YAAY,CAAGnB,cAAc,CAACiB,SAAD,CAAnC,CACA,GAAMG,CAAAA,eAAe,CAAGpB,cAAc,CAACS,YAAD,CAAtC,CAEA,GAAMY,CAAAA,IAAI,CAAG,QAAPA,CAAAA,IAAO,EAAM,iBACwB/B,UAAU,CAACc,aAAD,CADlC,4CACRkB,gBADQ,iBACRA,gBADQ,CACYC,QADZ,uCAGSpB,gBAAgB,EAHzB,CAGTqB,aAHS,mBAGTA,aAHS,CAKjBpC,SAAS,CAAC,UAAM,CACdoC,aAAa,GAEb,GAAIC,SAAS,CAACC,SAAV,CAAoBC,KAApB,CAA0B,UAA1B,CAAJ,CAA2C,CACzCrB,IAAI,CAACsB,KAAL,CAAWC,kBAAX,CAAgC,MAAhC,CACA;AACD,CACF,CAPQ,CAON,EAPM,CAAT,CASAzC,SAAS,CAAC,UAAM,CACd,GAAIkC,gBAAgB,GAAK,MAAzB,CAAiC,CAC/BhB,IAAI,CAACwB,SAAL,CAAeC,GAAf,CAAmB,MAAnB,EACD,CAFD,IAEO,CACLzB,IAAI,CAACwB,SAAL,CAAeE,MAAf,CAAsB,MAAtB,EACD,CACF,CANQ,CAMN,CAACV,gBAAD,CANM,CAAT,CAQA,mBACE,oBAAC,gBAAD,EAAkB,KAAK,CAAEA,gBAAgB,GAAK,MAArB,CAA8BH,YAA9B,CAA6CC,eAAtE,eACE,oBAAC,MAAD,mBACA,oBAAC,MAAD,mBACM,oBAAC,YAAD,MADN,cAEM,oBAAC,KAAD,EAAO,SAAS,CAAEf,cAAlB,EAFN,cAGM,oBAAC,SAAD,MAHN,CADA,CADF,CADF,CAYD,CAlCD,CAmCA,cAAegB,CAAAA,IAAf","sourcesContent":["import React, { useEffect, useState, useContext } from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\n\r\nimport SimpleAppBar from \"./header/SimpleAppBar\";\r\nimport MainPlayer from \"./player/MainPlayer\";\r\nimport SwipeMenu from \"./SwipeMenu\";\r\nimport SnackbarMessage from \"./SnackbarMessage\";\r\nimport { MuiThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\r\nimport { blueGrey, blue } from \"@material-ui/core/colors\";\r\n\r\nimport { useCheckDarkmode } from \"./sections/SettingsPage\";\r\nimport { GlobalContext } from \"./GlobalState\";\r\nimport CurrentSection from \"./CurrentSection\";\r\n\r\nconst body = document.querySelector(\"body\");\r\n\r\nconst defaultTheme = {\r\n  palette: {\r\n    primary: blueGrey,\r\n    third: blue,\r\n    secondary: {\r\n      main: \"#263238\"\r\n    }\r\n  },\r\n  typography: {\r\n    useNextVariants: true\r\n  }\r\n};\r\n\r\nconst darkTheme = {\r\n  palette: {\r\n    type: \"dark\",\r\n    primary: blueGrey,\r\n    third: blue,\r\n    secondary: {\r\n      main: \"#263238\"\r\n    }\r\n  },\r\n  typography: {\r\n    useNextVariants: true\r\n  }\r\n};\r\n\r\nconst muiDarkTheme = createMuiTheme(darkTheme);\r\nconst muiDefaultTheme = createMuiTheme(defaultTheme);\r\n\r\nconst App2 = () => {\r\n  const [{ themeSelectValue }, dispatch] = useContext(GlobalContext);\r\n\r\n  const { checkDarkMode } = useCheckDarkmode();\r\n\r\n  useEffect(() => {\r\n    checkDarkMode();\r\n\r\n    if (navigator.userAgent.match(/Android/i)) {\r\n      body.style.overscrollBehavior = \"none\";\r\n      // this is to disable pull refresh on android\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (themeSelectValue === \"Dark\") {\r\n      body.classList.add(\"dark\");\r\n    } else {\r\n      body.classList.remove(\"dark\");\r\n    }\r\n  }, [themeSelectValue]);\r\n\r\n  return (\r\n    <MuiThemeProvider theme={themeSelectValue === \"Dark\" ? muiDarkTheme : muiDefaultTheme}>\r\n      <Switch>\r\n      <Router>\r\n            <SimpleAppBar />\r\n            <Route component={CurrentSection} />\r\n            <SwipeMenu />\r\n        </Router> \r\n      </Switch>\r\n       \r\n    </MuiThemeProvider>\r\n  );\r\n};\r\nexport default App2;\r\n"]},"metadata":{},"sourceType":"module"}