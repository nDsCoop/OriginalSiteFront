{"ast":null,"code":"var _jsxFileName = \"C:\\\\myProJects\\\\Server\\\\weatherapp\\\\src\\\\components\\\\App3.js\";\nimport React, { Component } from 'react'; // import defaultImg from '../images/Logosvg3.svg';\n\nimport className from 'classnames';\nimport { Link, Redirect } from 'react-router-dom';\nimport { OrderedMap } from 'immutable';\nimport _ from 'lodash';\nimport { ObjectID } from \"../helpers/objectid\";\nimport { IconButton } from '@material-ui/core';\nimport { CgCloseO, CgSoftwareUpload, CgMoreVerticalAlt } from 'react-icons/cg';\nimport { SiConvertio } from 'react-icons/si';\nimport { MdSettings, MdDeleteForever, MdInsertEmoticon, MdMic, MdVideocam, MdNavigateNext, MdPlayCircleOutline } from 'react-icons/md';\nimport moment from 'moment'; //import Moment from 'react-moment';\n\nimport { UserBar } from \"./UserBar\";\nimport Dropzone from \"react-dropzone\";\nimport Picker, { SKIN_TONE_MEDIUM_DARK } from 'emoji-picker-react';\nimport AudioAnalyser from './library/AudioAnalyser';\nimport Draggable from './Draggable';\nexport default class App3 extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleCreateR = e => {\n      e.preventDefault();\n      const idRoomChat = this.generateId(24);\n      this.setState({\n        idRoomChat: idRoomChat\n      });\n      console.log(idRoomChat);\n    };\n\n    this.dec2hex = dec => {\n      return dec < 10 ? '0' + _.toString(dec) : dec.toString(16);\n    };\n\n    this.generateId = len => {\n      var arr = new Uint8Array((len || 40) / 2);\n      window.crypto.getRandomValues(arr);\n      return Array.from(arr, this.dec2hex).join('');\n    };\n\n    this.handleCreateRoom = e => {\n      const {\n        store\n      } = this.props;\n      e.preventDefault();\n      const {\n        idRoomChat\n      } = this.state;\n\n      if (_.trim(idRoomChat).length) {\n        const messageId = new ObjectID().toString();\n        const channel = store.getActiveChannel();\n\n        const channelId = _.get(channel, '_id', null);\n\n        const currentUser = store.getCurrentUser();\n        const message = {\n          _id: messageId,\n          channelId: channelId,\n          body: 'A new Face Moment Created with ID: ' + idRoomChat,\n          userId: _.get(currentUser, '_id'),\n          type: \"text\",\n          me: true\n        };\n        store.addMessage(messageId, message);\n      }\n\n      this.setState({\n        iShowConfig: false,\n        redirect: true\n      });\n    };\n\n    this.onClickOutSide = e => {\n      if (this.ref && !this.ref.contains(e.target)) {\n        // console.log(\"Here click out side login form!\");\n        this.setState({\n          showEmoji: false\n        });\n      }\n    };\n\n    this.onDrop = files => {\n      const {\n        store\n      } = this.props;\n      console.log(\"file goc: \", files);\n      let formData = new FormData();\n      formData.append(\"file\", files[0]);\n      store.upLoadfile(formData);\n      console.log(\"file format: \", formData);\n    };\n\n    this.sendTyping = () => {\n      const {\n        store\n      } = this.props;\n      const activeChannel = store.getActiveChannel();\n      this.lastUpdateTime = Date.now();\n\n      if (!this.state.isTyping) {\n        this.setState({\n          isTyping: true\n        });\n        store.addTyping(activeChannel, true);\n        this.startCheckingTyping();\n      }\n    };\n\n    this.startCheckingTyping = () => {\n      console.log(\"Typing\");\n      this.typingInterval = setInterval(() => {\n        if (Date.now() - this.lastUpdateTime > 350) {\n          this.setState({\n            isTyping: false\n          });\n          this.stopCheckingTyping();\n        }\n      }, 300);\n    };\n\n    this.stopCheckingTyping = () => {\n      const {\n        store\n      } = this.props;\n      const activeChannel = store.getActiveChannel();\n      console.log(\"Stop Typing\");\n\n      if (this.typingInterval) {\n        clearInterval(this.typingInterval);\n        store.addTyping(activeChannel, false); // console.log(this.state.isTyping);\n      }\n    };\n\n    this.renderChannelTitle = (channel = null) => {\n      const {\n        store\n      } = this.props;\n      const members = store.getMembersFromChannel(channel);\n      const names = [];\n      members.forEach(user => {\n        const name = _.get(user, 'name');\n\n        names.push(name);\n      });\n\n      let title = _.join(names, ', ');\n\n      if (!title && _.get(channel, 'isNew')) {\n        title = 'New Mss';\n      }\n\n      return /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 16\n        }\n      }, title);\n    };\n\n    this.handleOnClick = user => {\n      const {\n        store\n      } = this.props;\n\n      const userId = _.get(user, '_id');\n\n      const channelId = _.get(store.getActiveChannel(), '_id');\n\n      store.addUserToChannel(channelId, userId);\n      this.setState({\n        searchUser: ''\n      });\n    };\n\n    this._onCreateChannel = e => {\n      e.preventDefault();\n      const {\n        store\n      } = this.props;\n      const currentUser = store.getCurrentUser();\n\n      const currentUserId = _.get(currentUser, '_id');\n\n      const channelId = new ObjectID().toString();\n      const channel = {\n        _id: channelId,\n        title: \"\",\n        lastMessage: \"Let's a chat\",\n        members: new OrderedMap(),\n        messages: new OrderedMap(),\n        isNew: true,\n        userId: currentUserId,\n        created: new Date(),\n        typing: false\n      };\n      channel.members = channel.members.set(currentUserId, true);\n      store.onCreateNewChannel(channel);\n    };\n\n    this.scrollMessagesToBottom = () => {\n      if (this.messagesRef) {\n        this.messagesRef.scrollTop = this.messagesRef.scrollHeight;\n      }\n    };\n\n    this.handlePlayMusic = music => {\n      try {\n        this.audio.pause();\n        this.audio.currentTime = 0;\n      } catch (e) {\n        console.log(e);\n      }\n\n      this.audio = new Audio(music);\n      this.audio.play();\n    };\n\n    this.handleStopMusic = music => {\n      this.audio = new Audio(music);\n      this.audio.pause();\n    };\n\n    this.handleSubmit = e => {\n      const {\n        newMessage\n      } = this.state;\n      const {\n        store\n      } = this.props;\n      e.preventDefault();\n\n      if (_.trim(newMessage).length) {\n        const messageId = new ObjectID().toString();\n        const channel = store.getActiveChannel();\n\n        const channelId = _.get(channel, '_id', null);\n\n        const currentUser = store.getCurrentUser();\n        const message = {\n          _id: messageId,\n          channelId: channelId,\n          body: newMessage,\n          userId: _.get(currentUser, '_id'),\n          type: \"text\",\n          me: true\n        };\n        store.addMessage(messageId, message);\n        this.setState({\n          newMessage: \"\"\n        });\n      }\n\n      this.setState({\n        newMessage: \"\",\n        showEmoji: false\n      });\n    };\n\n    this._onResi = () => {\n      this.setState({\n        height: window.innerHeight\n      });\n    };\n\n    this.state = {\n      height: window.innerHeight,\n      newMessage: '',\n      searchUser: '',\n      showSearchUser: false,\n      isTyping: false,\n      showEmoji: false,\n      audio: null,\n      temp: 5000,\n      isShowGetAud: false,\n      record: false,\n      openToolChat: false,\n      English: true,\n      iShowConfig: false,\n      idRoomChat: '',\n      redirect: false\n    };\n  }\n\n  getRandomInt(max) {\n    return Math.floor(Math.random() * Math.floor(max));\n  }\n\n  async startRecording() {\n    const {\n      store\n    } = this.props;\n    const audio = await navigator.mediaDevices.getUserMedia({\n      audio: true,\n      video: false\n    });\n    this.setState({\n      audio\n    });\n    this.setState({\n      isShowGetAud: true\n    });\n    this.setState({\n      record: true\n    });\n    const chunks = [];\n    const recoder = new MediaRecorder(audio);\n    recoder.start();\n\n    recoder.ondataavailable = function (e) {\n      chunks.push(e.data);\n      const namefile = new ObjectID().toString();\n      let files = new File(chunks, `${namefile + '.mp3'}`, {\n        type: \"audio/wav\"\n      });\n      const path = URL.createObjectURL(files);\n      files.path = `${_.toString(path.substring(27) + '.mp3')}`;\n\n      const name = _.toString(files.path);\n\n      files.fileName = `${name}`; // console.log(\"file goc 1: \", files);\n\n      let file = [];\n      file.push(files);\n      console.log(\"File goc\", file);\n      const formData = new FormData();\n      formData.append('file', file[0]);\n      store.upLoadfile(formData);\n    };\n  } //stop\n\n\n  stopRecording() {\n    if (this.state.audio !== null) {\n      this.state.audio.getTracks().forEach(track => track.stop());\n      this.setState({\n        audio: null\n      });\n      this.setState({\n        record: false\n      });\n    } else {\n      console.log(\"Error shortage-lenght!\");\n    }\n  }\n\n  renderChannelAvatar(channel) {\n    const {\n      store\n    } = this.props;\n    const members = store.getMembersFromChannel(channel);\n    const maxDisplay = 4;\n    const total = members.size > maxDisplay ? maxDisplay : members.size;\n    const avatars = members.map((user, index) => {\n      return index < maxDisplay ? /*#__PURE__*/React.createElement(\"img\", {\n        key: index,\n        src: _.get(user, 'avatar'),\n        alt: _.get(user, 'name'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 42\n        }\n      }) : null;\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: className('channel-avatars', `channel-avatars-${total}`),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 16\n      }\n    }, avatars);\n  }\n\n  // addTestMessages = () => {\n  //     const {store} = this.props\n  //     for(let i = 0; i < 20; i++){\n  //         let isMe = false;\n  //         if(i % 2 === 0) {\n  //             isMe = true;\n  //         }\n  //         const newMsg = {\n  //             _id: `${i}`,\n  //             author: `Author: ${i}`,\n  //             body: `The body of message ${i}`,\n  //             avatar: defaultImg,\n  //             me: isMe,\n  //             timing: '0:00'\n  //         }\n  //         store.addMessage(i, newMsg);\n  //     }\n  //     for (let c = 0; c<10; c++){\n  //         const newChannel ={\n  //             _id: `${c}`,\n  //             title: `Channel title ${c}`,\n  //             lastMessage: `Hey there is.. ${c}`,\n  //             members: new OrderedMap({\n  //                 '1': true,\n  //                 '2': true,\n  //             }),\n  //             messages: new OrderedMap(),\n  //             created: new Date(),\n  //         }\n  //         const moreMsgId =`${c + 1}`;\n  //         const msgId = `${c}`;\n  //         newChannel.messages = newChannel.messages.set(msgId, true);\n  //         newChannel.messages = newChannel.messages.set(moreMsgId, true);\n  //         store.addChannel(c, newChannel);\n  //     }\n  // }\n  componentDidUpdate() {\n    this.scrollMessagesToBottom(); // console.log(\"CDidUpdate\");\n  }\n\n  componentDidMount() {\n    window.addEventListener('resize', this._onResi);\n    window.addEventListener('mousedown', this.onClickOutSide); // this.addTestMessages();\n    // console.log(\"CDidMount\");\n  }\n\n  componentWillUnmount() {\n    this.stopCheckingTyping();\n    window.removeEventListener('resize', this._onResi);\n    window.removeEventListener('mousedown', this.onClickOutSide); // console.log(\"CWillUnMount\");\n  }\n\n  render() {\n    const {\n      height,\n      newMessage,\n      showEmoji,\n      isShowGetAud,\n      openToolChat,\n      English,\n      iShowConfig,\n      redirect\n    } = this.state;\n    const {\n      store\n    } = this.props;\n    const isConnected = store.isConnected();\n    const activeChannel = store.getActiveChannel();\n    const messages = store.getMessagesFromChannel(activeChannel);\n    const members = store.getMembersFromChannel(activeChannel);\n    const channels = store.getChannels();\n    const usersList = store.getSearchUsers();\n    const me = store.getCurrentUser();\n\n    const onEmojiClick = (event, emojiObject) => {\n      this.setState({\n        newMessage: `${emojiObject.emoji}`\n      });\n      console.log(`${emojiObject.emoji}`);\n    };\n\n    const style = {\n      height: height\n    };\n\n    const resultSearch = () => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"search-user\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 440,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"user-list\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 441,\n          columnNumber: 25\n        }\n      }, usersList.map((user, index) => {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          onClick: () => this.handleOnClick(user),\n          key: index,\n          className: \"user\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 443,\n            columnNumber: 36\n          }\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          src: user.avatar,\n          alt: user.name,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 444,\n            columnNumber: 29\n          }\n        }), /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 445,\n            columnNumber: 29\n          }\n        }, user.name));\n      })));\n    };\n\n    if (redirect) {\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/page3/Facemoment/\" + this.state.idRoomChat + '?' + _.get(me, '_id') + this.getRandomInt(9),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 454,\n          columnNumber: 20\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: style,\n      className: \"app3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 462,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"chat-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 463,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header-left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 464,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"action\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 465,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"\",\n      onClick: e => this._onCreateChannel(e),\n      className: \"btn-primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 466,\n        columnNumber: 29\n      }\n    }, \"AddNew\"))), _.get(activeChannel, 'isNew') ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"toolbar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 469,\n        columnNumber: 54\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      className: \"tool\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 470,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"textarea\", {\n      type: \"text\",\n      value: this.state.searchUser,\n      placeholder: \"To UserName/Email\",\n      onChange: e => {\n        const searchTxt = _.get(e, 'target.value');\n\n        this.setState({\n          searchUser: searchTxt\n        }, () => {\n          store.startSearchUsers(searchTxt);\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 471,\n        columnNumber: 29\n      }\n    })), resultSearch()) : null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header-mid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 489,\n        columnNumber: 21\n      }\n    }, this.renderChannelTitle(activeChannel)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 492,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(UserBar, {\n      store: store,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 493,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"toolsRight-bar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 494,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      style: {\n        color: \"rgba(0, 0, 0, 0.5)\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 495,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(MdSettings, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 496,\n        columnNumber: 29\n      }\n    }))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"chat-main\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 501,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"sidebar-left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 502,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"chanels\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 503,\n        columnNumber: 25\n      }\n    }, channels.map((channel, index) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        onClick: index => {\n          store.setActiveChannelId(channel._id);\n        },\n        key: channel._id,\n        className: className('chanel', {\n          'active': _.get(activeChannel, '_id') === _.get(channel, '_id', null)\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 506,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"user-img\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 509,\n          columnNumber: 41\n        }\n      }, this.renderChannelAvatar(channel)), /*#__PURE__*/React.createElement(\"div\", {\n        className: className('chanel-info', {\n          'notify': _.get(channel, 'notify', null)\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 512,\n          columnNumber: 41\n        }\n      }, this.renderChannelTitle(channel), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 514,\n          columnNumber: 45\n        }\n      }, `${channel.lastMessage}`.substring(0, 7) === 'uploads' ? 'An Attached file' : `${channel.lastMessage}`)));\n    }))), iShowConfig ? /*#__PURE__*/React.createElement(Draggable, {\n      style: {\n        zIndex: 101,\n        position: 'absolute',\n        right: 0,\n        cursor: 'move',\n        maxHeight: '40rem'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 527,\n        columnNumber: 40\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"conf-video\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 534,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"form-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 535,\n        columnNumber: 34\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 536,\n        columnNumber: 38\n      }\n    }, \"Config Face Moment\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleCreateRoom,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 539,\n        columnNumber: 38\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 540,\n        columnNumber: 38\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 541,\n        columnNumber: 41\n      }\n    }, \"ID Room\"), /*#__PURE__*/React.createElement(\"input\", {\n      // onChange={(e) => this.onTxtfieldChange(e) } \n      placeholder: \"ndsRoom\",\n      required: \"true\",\n      type: \"text\",\n      name: \"room\",\n      value: this.state.idRoomChat,\n      onChange: ({\n        target\n      }) => {\n        this.setState({\n          idRoomChat: target.value\n        });\n      },\n      id: \"room\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 544,\n        columnNumber: 41\n      }\n    })), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 554,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      onClick: this.handleCreateR,\n      className: \"autofill-ID\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 555,\n        columnNumber: 41\n      }\n    }, \"CreateRanDom\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"footer-conf-video\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 559,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      onClick: e => {\n        this.setState({\n          iShowConfig: false\n        });\n      },\n      className: \"login-btn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 561,\n        columnNumber: 41\n      }\n    }, \"CANCEL\"), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      onClick: this.handleCreateRoom,\n      className: \"login-btn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 562,\n        columnNumber: 41\n      }\n    }, \"CONTINUE\")), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 566,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 567,\n        columnNumber: 41\n      }\n    }, \"Instruction \", /*#__PURE__*/React.createElement(SiConvertio, {\n      onClick: e => {\n        this.setState({\n          English: !English\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 567,\n        columnNumber: 57\n      }\n    })), English ? /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 569,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 570,\n        columnNumber: 45\n      }\n    }, \"Enter ID for the Face Moment room and choose continue\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 571,\n        columnNumber: 45\n      }\n    }, \"Continue means you accept access we using your account registered with the system. And all are confidential.\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 572,\n        columnNumber: 45\n      }\n    }, \"Make sure your friend knows \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 572,\n        columnNumber: 77\n      }\n    }, \"exactly\"), \" ID of the Face Moment room so they can re-enter and continue with it\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 573,\n        columnNumber: 45\n      }\n    }, \"After choosing to continue, the browser will open a Face Moment window consisting of people who have joined by the room name Face Moment\"), /*#__PURE__*/React.createElement(\"li\", {\n      style: {\n        alignItems: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 574,\n        columnNumber: 45\n      }\n    }, \"To leave the Face Moment session you select the \", /*#__PURE__*/React.createElement(CgCloseO, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 574,\n        columnNumber: 127\n      }\n    }), \" icon, Face Moment will self-cancel when there is no member.\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 575,\n        columnNumber: 45\n      }\n    }, \"Shouldn't leaving Face Moment \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 575,\n        columnNumber: 79\n      }\n    }, \"the wrong way\"), \" to avoid affecting the connection of the other people.\"), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 576,\n        columnNumber: 45\n      }\n    }, \"ThankYou so much, according to nDs\")) : /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 579,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 580,\n        columnNumber: 45\n      }\n    }, \"Nh\\u1EADp ID ph\\xF2ng Face Moment v\\xE0 ch\\u1ECDn ti\\u1EBFp t\\u1EE5c\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 581,\n        columnNumber: 45\n      }\n    }, \"Ti\\u1EBFp t\\u1EE5c \\u0111\\u1ED3ng ngh\\u0129a b\\u1EA1n ch\\u1EA5p nh\\u1EADn truy c\\u1EADp d\\xF9ng t\\xE0i kho\\u1EA3n c\\u1EE7a b\\u1EA1n \\u0111\\xE3 \\u0111\\u0103ng k\\xED v\\u1EDBi h\\u1EC7 th\\u1ED1ng. V\\xE0 t\\u1EA5t c\\u1EA3 \\u0111\\u1EC1u \\u0111\\u01B0\\u1EE3c b\\u1EA3o m\\u1EADt.\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 582,\n        columnNumber: 45\n      }\n    }, \"\\u0110\\u1EA3m b\\u1EA3o r\\u1EB1ng b\\u1EA1n c\\u1EE7a b\\u1EA1n bi\\u1EBFt \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 582,\n        columnNumber: 79\n      }\n    }, \"ch\\xEDnh x\\xE1c\"), \" ID c\\u1EE7a ph\\xF2ng Face Moment \\u0111\\u1EC3 h\\u1ECD c\\xF3 th\\u1EC3 nh\\u1EADp l\\u1EA1i v\\xE0 ti\\u1EBFp t\\u1EE5c v\\u1EDBi n\\xF3\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 583,\n        columnNumber: 45\n      }\n    }, \"Sau khi ch\\u1ECDn ti\\u1EBFp t\\u1EE5c tr\\xECnh duy\\u1EC7t s\\u1EBD m\\u1EDF c\\u1EEDa s\\u1ED5 Face Moment g\\u1ED3m nh\\u1EEFng ng\\u01B0\\u1EDDi \\u0111\\xE3 tham gia b\\u1EB1ng t\\xEAn ph\\xF2ng Face Moment\"), /*#__PURE__*/React.createElement(\"li\", {\n      style: {\n        alignItems: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 584,\n        columnNumber: 45\n      }\n    }, \"\\u0110\\u1EC3 r\\u1EDDi kh\\u1ECFi phi\\xEAn Face Moment b\\u1EA1n ch\\u1ECDn v\\xE0o bi\\u1EC3u t\\u01B0\\u1EE3ng \", /*#__PURE__*/React.createElement(CgCloseO, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 584,\n        columnNumber: 133\n      }\n    }), \", Face Moment s\\u1EBD t\\u1EF1 hu\\u1EF7 khi kh\\xF4ng c\\xF2n th\\xE0nh vi\\xEAn n\\xE0o.\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 585,\n        columnNumber: 45\n      }\n    }, \"H\\u1EA1n ch\\u1EBF r\\u1EDDi kh\\u1ECFi Face Moment \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 585,\n        columnNumber: 78\n      }\n    }, \"sai c\\xE1ch\"), \" \\u0111\\u1EC3 tr\\xE1nh \\u1EA3nh h\\u01B0\\u1EDFng \\u0111\\u1EBFn k\\u1EBFt n\\u1ED1i c\\u1EE7a nh\\u1EEFng ng\\u01B0\\u1EDDi c\\xF2n l\\u1EA1i.\"), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 586,\n        columnNumber: 45\n      }\n    }, \"C\\u1EA3m \\u01A1n m\\u1ECDi ng\\u01B0\\u1EDDi, theo nDs\")))))) : null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"chat-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 598,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"toolChat\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 599,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 600,\n        columnNumber: 29\n      }\n    }, !openToolChat ? /*#__PURE__*/React.createElement(IconButton, {\n      onClick: e => {\n        this.setState({\n          openToolChat: !openToolChat\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 601,\n        columnNumber: 51\n      }\n    }, /*#__PURE__*/React.createElement(CgMoreVerticalAlt, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 601,\n        columnNumber: 129\n      }\n    })) : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"toolChats\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 601,\n        columnNumber: 166\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      onClick: e => {\n        this.setState({\n          iShowConfig: !iShowConfig\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 602,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(MdVideocam, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 603,\n        columnNumber: 41\n      }\n    })), /*#__PURE__*/React.createElement(IconButton, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 605,\n        columnNumber: 38\n      }\n    }, /*#__PURE__*/React.createElement(Dropzone, {\n      onDrop: this.onDrop,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 606,\n        columnNumber: 37\n      }\n    }, ({\n      getRootProps,\n      getInputProps\n    }) => /*#__PURE__*/React.createElement(\"section\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 608,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", Object.assign({}, getRootProps(), {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 609,\n        columnNumber: 45\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", Object.assign({}, getInputProps(), {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 610,\n        columnNumber: 49\n      }\n    })), /*#__PURE__*/React.createElement(CgSoftwareUpload, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 611,\n        columnNumber: 53\n      }\n    }))))), /*#__PURE__*/React.createElement(IconButton, {\n      onClick: e => {\n        this.setState({\n          openToolChat: !openToolChat\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 617,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(MdNavigateNext, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 618,\n        columnNumber: 41\n      }\n    }))))), /*#__PURE__*/React.createElement(\"div\", {\n      ref: ref => this.messagesRef = ref,\n      className: \"messages\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 625,\n        columnNumber: 25\n      }\n    }, messages.map((mess, index) => {\n      const user = _.get(mess, 'user');\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: index,\n        className: `${mess.me ? 'message-me' : 'message'}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 630,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: _.get(user, 'avatar'),\n        alt: \"user-img\",\n        className: \"img-user\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 632,\n          columnNumber: 37\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"message-body\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 634,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"username\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 636,\n          columnNumber: 41\n        }\n      }, `${mess.me ? 'You' : _.get(mess, 'user.name')}`, \" say: \"), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"message-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 638,\n          columnNumber: 41\n        }\n      }, mess.type === `text` ? /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 640,\n          columnNumber: 76\n        }\n      }, mess.body) // this will be either video or image \n      : `${mess.body}`.substring(`${mess.body}`.length - 3, `${mess.body}`.length) === 'mp3' ? /*#__PURE__*/React.createElement(\"div\", {\n        className: \"audio-message\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 646,\n          columnNumber: 53\n        }\n      }, \" \", /*#__PURE__*/React.createElement(MdPlayCircleOutline, {\n        style: {\n          fontSize: '1.5rem',\n          alignItems: 'center'\n        },\n        onClick: () => this.handlePlayMusic(`http://localhost:8080/${mess.body}`),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 646,\n          columnNumber: 86\n        }\n      }), \" Click to Play\") : `${mess.body}`.substring(`${mess.body}`.length - 3, `${mess.body}`.length) === 'mp4' ? /*#__PURE__*/React.createElement(\"video\", {\n        style: {\n          maxWidth: '20rem'\n        },\n        src: `http://localhost:8080/${mess.body}`,\n        alt: \"video\",\n        controls: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 649,\n          columnNumber: 57\n        }\n      }) : /*#__PURE__*/React.createElement(\"img\", {\n        style: {\n          maxWidth: '20rem'\n        },\n        src: `http://localhost:8080/${mess.body}`,\n        alt: \"img\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 651,\n          columnNumber: 57\n        }\n      }), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"timing\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 656,\n          columnNumber: 45\n        }\n      }, mess.timing))));\n    }), showEmoji ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"emoji\",\n      ref: ref => this.ref = ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 665,\n        columnNumber: 46\n      }\n    }, /*#__PURE__*/React.createElement(Picker, {\n      onEmojiClick: onEmojiClick,\n      skinTone: SKIN_TONE_MEDIUM_DARK,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 666,\n        columnNumber: 37\n      }\n    })) : null), isShowGetAud ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"getAdi\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 672,\n        columnNumber: 40\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 673,\n        columnNumber: 33\n      }\n    }, this.state.audio ? /*#__PURE__*/React.createElement(AudioAnalyser, {\n      audio: this.state.audio,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 674,\n        columnNumber: 53\n      }\n    }) : null)) : null, _.get(activeChannel, 'typing') && _.get(activeChannel, 'typier') !== _.get(me, '_id') ? /*#__PURE__*/React.createElement(\"div\", {\n      disabled: newMessage.length > 1,\n      className: \"typing-status\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 679,\n        columnNumber: 114\n      }\n    }, \"Is Typing..\") : null, members.size > 0 ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"message-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 680,\n        columnNumber: 48\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      disabled: newMessage.length < 1,\n      className: \"message-form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 681,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      onClick: () => {\n        this.setState({\n          showEmoji: !showEmoji\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 685,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(MdInsertEmoticon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 686,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(\"textarea\", {\n      id: \"message\",\n      ref: input => this.input = input,\n      type: \"text\",\n      className: \"form-control\",\n      value: newMessage,\n      autoComplete: 'off',\n      placeholder: \"Type something interesting\",\n      onKeyUp: e => {\n        {\n          if (e.keyCode === 13 && !e.shiftKey) {\n            this.handleSubmit(e);\n          }\n        }\n        {\n          if (e.keyCode !== 13) {\n            this.sendTyping();\n          }\n        }\n      },\n      onChange: ({\n        target\n      }) => {\n        this.setState({\n          newMessage: target.value\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 688,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(IconButton, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 711,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(MdMic, {\n      onMouseDown: () => {\n        this.startRecording();\n      },\n      onMouseUp: () => {\n        this.stopRecording();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 712,\n        columnNumber: 41\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      disabled: newMessage.length < 1,\n      type: \"submit\",\n      className: \"send\",\n      onClick: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 715,\n        columnNumber: 33\n      }\n    }, \" Send \"))) : null), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"sidebar-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 728,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"title-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 729,\n        columnNumber: 25\n      }\n    }, \"Members\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"chanels\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 730,\n        columnNumber: 25\n      }\n    }, members.map((member, index) => {\n      const isOnline = _.get(member, 'online', false);\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: index,\n        className: \"chanel\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 735,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"user-img-channel\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 737,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: _.get(member, 'avatar'),\n        alt: \"user-img\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 738,\n          columnNumber: 45\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        className: className('user-status', {\n          'online': isOnline\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 739,\n          columnNumber: 45\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"chanel-info\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 741,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 742,\n          columnNumber: 45\n        }\n      }, member.name), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 743,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(Moment, {\n        fromNow: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 743,\n          columnNumber: 48\n        }\n      }, \"2020-10-23T23:28:11.746Z\"))), /*#__PURE__*/React.createElement(\"div\", {\n        onClick: () => {\n          store.removeMemberFromChannel(activeChannel, member);\n        },\n        className: \"icon-DelUser\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 745,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(IconButton, {\n        style: {\n          color: \"rgb(200, 68, 20)\",\n          fontSize: \"20\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 749,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(MdDeleteForever, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 750,\n          columnNumber: 45\n        }\n      }))));\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"chat-footer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 765,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"footer-left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 766,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"action\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 767,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"footer-mid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 772,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 773,\n        columnNumber: 24\n      }\n    }, \"AllRight nDs, 2020\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"footer-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 775,\n        columnNumber: 21\n      }\n    }, me && !isConnected ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"app-warning-state\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 776,\n        columnNumber: 43\n      }\n    }, \"Reconnecting..\") : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"app-success-state\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 776,\n        columnNumber: 101\n      }\n    }, \"Connected\"))));\n  }\n\n}","map":{"version":3,"sources":["C:/myProJects/Server/weatherapp/src/components/App3.js"],"names":["React","Component","className","Link","Redirect","OrderedMap","_","ObjectID","IconButton","CgCloseO","CgSoftwareUpload","CgMoreVerticalAlt","SiConvertio","MdSettings","MdDeleteForever","MdInsertEmoticon","MdMic","MdVideocam","MdNavigateNext","MdPlayCircleOutline","moment","UserBar","Dropzone","Picker","SKIN_TONE_MEDIUM_DARK","AudioAnalyser","Draggable","App3","constructor","props","handleCreateR","e","preventDefault","idRoomChat","generateId","setState","console","log","dec2hex","dec","toString","len","arr","Uint8Array","window","crypto","getRandomValues","Array","from","join","handleCreateRoom","store","state","trim","length","messageId","channel","getActiveChannel","channelId","get","currentUser","getCurrentUser","message","_id","body","userId","type","me","addMessage","iShowConfig","redirect","onClickOutSide","ref","contains","target","showEmoji","onDrop","files","formData","FormData","append","upLoadfile","sendTyping","activeChannel","lastUpdateTime","Date","now","isTyping","addTyping","startCheckingTyping","typingInterval","setInterval","stopCheckingTyping","clearInterval","renderChannelTitle","members","getMembersFromChannel","names","forEach","user","name","push","title","handleOnClick","addUserToChannel","searchUser","_onCreateChannel","currentUserId","lastMessage","messages","isNew","created","typing","set","onCreateNewChannel","scrollMessagesToBottom","messagesRef","scrollTop","scrollHeight","handlePlayMusic","music","audio","pause","currentTime","Audio","play","handleStopMusic","handleSubmit","newMessage","_onResi","height","innerHeight","showSearchUser","temp","isShowGetAud","record","openToolChat","English","getRandomInt","max","Math","floor","random","startRecording","navigator","mediaDevices","getUserMedia","video","chunks","recoder","MediaRecorder","start","ondataavailable","data","namefile","File","path","URL","createObjectURL","substring","fileName","file","stopRecording","getTracks","track","stop","renderChannelAvatar","maxDisplay","total","size","avatars","map","index","componentDidUpdate","componentDidMount","addEventListener","componentWillUnmount","removeEventListener","render","isConnected","getMessagesFromChannel","channels","getChannels","usersList","getSearchUsers","onEmojiClick","event","emojiObject","emoji","style","resultSearch","avatar","searchTxt","startSearchUsers","color","setActiveChannelId","zIndex","position","right","cursor","maxHeight","value","alignItems","getRootProps","getInputProps","mess","fontSize","maxWidth","timing","input","keyCode","shiftKey","member","isOnline","removeMemberFromChannel"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\n// import defaultImg from '../images/Logosvg3.svg';\r\nimport className from 'classnames';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { OrderedMap } from 'immutable';\r\nimport _ from 'lodash';\r\nimport {ObjectID} from \"../helpers/objectid\";\r\nimport { IconButton } from '@material-ui/core';\r\nimport { CgCloseO, CgSoftwareUpload, CgMoreVerticalAlt } from 'react-icons/cg'\r\nimport { SiConvertio } from 'react-icons/si';\r\nimport { MdSettings, MdDeleteForever, MdInsertEmoticon, MdMic, MdVideocam, MdNavigateNext, MdPlayCircleOutline } from 'react-icons/md';\r\nimport moment from 'moment';\r\n//import Moment from 'react-moment';\r\nimport { UserBar } from \"./UserBar\";\r\nimport Dropzone from \"react-dropzone\";\r\nimport Picker, { SKIN_TONE_MEDIUM_DARK } from 'emoji-picker-react';\r\nimport AudioAnalyser from './library/AudioAnalyser';\r\nimport Draggable from './Draggable';\r\n\r\n\r\n\r\nexport default class App3 extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            height: window.innerHeight,\r\n            newMessage: '',\r\n            searchUser: '',\r\n            showSearchUser : false,\r\n            isTyping: false,\r\n            showEmoji: false,\r\n            audio: null,\r\n            temp : 5000,\r\n            isShowGetAud: false,\r\n            record: false,\r\n            openToolChat: false,\r\n            English: true,\r\n            iShowConfig: false,\r\n            idRoomChat: '',\r\n            redirect: false,\r\n          \r\n        }\r\n\r\n    }\r\n    getRandomInt(max) {\r\n        return Math.floor(Math.random() * Math.floor(max));\r\n    }\r\n\r\n\r\n    handleCreateR = (e) => {\r\n        e.preventDefault();\r\n            const idRoomChat = this.generateId(24);\r\n            this.setState({idRoomChat: idRoomChat});\r\n            console.log(idRoomChat);\r\n      }\r\n    dec2hex = (dec) => {\r\n        return dec < 10\r\n        ? '0' + _.toString(dec)\r\n        : dec.toString(16)\r\n    }\r\n    generateId = (len) => {\r\n        var arr = new Uint8Array((len || 40) / 2)\r\n        window.crypto.getRandomValues(arr)\r\n        return Array.from(arr, this.dec2hex).join('')\r\n    }\r\n\r\n    handleCreateRoom = (e) => {\r\n        const { store } = this.props;\r\n        e.preventDefault();\r\n        const { idRoomChat } = this.state;\r\n       \r\n\r\n        if(_.trim(idRoomChat).length){\r\n            const messageId = new ObjectID().toString();\r\n            const channel = store.getActiveChannel();\r\n            const channelId = _.get(channel , '_id', null);\r\n            const currentUser = store.getCurrentUser();\r\n            const message = {\r\n                _id: messageId,\r\n                channelId: channelId,\r\n                body : 'A new Face Moment Created with ID: '+ idRoomChat,\r\n                userId: _.get(currentUser, '_id'),\r\n                type:\"text\",\r\n                me: true,\r\n            };\r\n            \r\n            store.addMessage(messageId, message);\r\n        }\r\n        \r\n        this.setState({\r\n            iShowConfig: false,\r\n            redirect: true,\r\n        });\r\n    }\r\n   \r\n   \r\n    async startRecording() {\r\n        const {store} = this.props;\r\n        const audio = await navigator.mediaDevices.getUserMedia({\r\n          audio: true,\r\n          video: false,\r\n        });\r\n        this.setState({ audio });\r\n        this.setState({isShowGetAud: true});\r\n        this.setState({ record: true });\r\n\r\n        const chunks = [];\r\n        const recoder = new MediaRecorder(audio);\r\n        recoder.start();\r\n\r\n        recoder.ondataavailable = function(e) {\r\n            chunks.push(e.data);\r\n            const namefile = new ObjectID().toString();\r\n            let files = new File(chunks, `${namefile+'.mp3'}` , {type: \"audio/wav\"});\r\n            const path = URL.createObjectURL(files);\r\n            files.path = `${_.toString(path.substring(27)+'.mp3')}`;\r\n            const name = _.toString(files.path);\r\n            files.fileName = `${name}`;\r\n            // console.log(\"file goc 1: \", files);\r\n            let file = [];\r\n            file.push(files);\r\n            console.log(\"File goc\", file);\r\n            const formData = new FormData();\r\n            formData.append('file', file[0] );\r\n            store.upLoadfile(formData);\r\n        }\r\n    }\r\n        \r\n    //stop\r\n    stopRecording() {\r\n       if(this.state.audio !== null){\r\n        this.state.audio.getTracks().forEach(track => track.stop());\r\n        this.setState({ audio: null });\r\n        this.setState({ record: false }); \r\n       } else {\r\n           console.log(\"Error shortage-lenght!\");\r\n       }\r\n               \r\n        \r\n    }\r\n\r\n\r\n        \r\n        onClickOutSide = (e) => {\r\n            if(this.ref && !this.ref.contains(e.target)){\r\n                // console.log(\"Here click out side login form!\");\r\n                this.setState({\r\n                    showEmoji: false,\r\n                })\r\n            }\r\n        }\r\n\r\n        onDrop = (files) => {\r\n            const {store} = this.props;\r\n            console.log(\"file goc: \",files);\r\n            let formData = new FormData();\r\n            formData.append(\"file\", files[0]);\r\n            store.upLoadfile(formData);\r\n            console.log(\"file format: \",formData);\r\n        }\r\n\r\n\r\n        sendTyping = () =>{\r\n            const { store } = this.props;\r\n            const activeChannel = store.getActiveChannel();\r\n            this.lastUpdateTime = Date.now()\r\n            if(!this.state.isTyping){\r\n                this.setState({isTyping:true});\r\n                store.addTyping(activeChannel, true);\r\n                this.startCheckingTyping();\r\n\r\n            }\r\n        }\r\n\r\n\t/*\r\n\t*\tstartCheckingTyping\r\n\t*\tStart an interval that checks if the user is typing.\r\n\t*/\r\n        startCheckingTyping = ()=>{\r\n            console.log(\"Typing\");\r\n            this.typingInterval = setInterval(()=>{\r\n                if((Date.now() - this.lastUpdateTime) > 350){\r\n                    this.setState({isTyping:false})\r\n                    this.stopCheckingTyping()\r\n                }\r\n            }, 300)\r\n        }\r\n\t/*\r\n\t*\tstopCheckingTyping\r\n\t*\tStart the interval from checking if the user is typing.\r\n\t*/\r\n        stopCheckingTyping = ()=>{\r\n            const { store } = this.props;\r\n            const activeChannel = store.getActiveChannel();\r\n            console.log(\"Stop Typing\");\r\n            if(this.typingInterval){\r\n                clearInterval(this.typingInterval)\r\n                store.addTyping(activeChannel, false);\r\n            // console.log(this.state.isTyping);\r\n            }\r\n        }\r\n\r\n\r\n    renderChannelAvatar(channel){\r\n        const {store} = this.props;\r\n\r\n        const members = store.getMembersFromChannel(channel);\r\n\r\n        const maxDisplay = 4;\r\n        const total = members.size > maxDisplay ? maxDisplay : members.size;\r\n\r\n        const avatars = members.map((user, index) => {\r\n\r\n\r\n\r\n            return index < maxDisplay ?  <img key={index} src={_.get(user, 'avatar')} alt={_.get(user, 'name')} /> : null\r\n\r\n        });\r\n\r\n\r\n        return <div className={className('channel-avatars', `channel-avatars-${total}`)}>{avatars}</div>\r\n    }\r\n    renderChannelTitle = (channel = null) => {\r\n        const { store } = this.props;\r\n        const members = store.getMembersFromChannel(channel);\r\n         const names = [];\r\n\r\n         members.forEach((user) => {\r\n             const name = _.get(user, 'name')\r\n             names.push(name);\r\n         });\r\n         let title = _.join(names, ', ');\r\n         if(!title && _.get(channel, 'isNew')){\r\n             title = 'New Mss';\r\n         }\r\n        return <h4>{title}</h4>\r\n    }\r\n   \r\n    handleOnClick = (user) => {\r\n       \r\n        const { store } =this.props;\r\n        const userId = _.get(user, '_id');\r\n        const channelId = _.get( store.getActiveChannel(),'_id')\r\n        store.addUserToChannel(channelId, userId);\r\n        this.setState({\r\n            searchUser: '',\r\n        })\r\n    }\r\n    _onCreateChannel = (e) => {\r\n        e.preventDefault()\r\n        const { store } =this.props;\r\n        const currentUser = store.getCurrentUser();\r\n        const currentUserId = _.get(currentUser, '_id');\r\n        const channelId = new ObjectID().toString();\r\n        const channel = {\r\n            _id: channelId,\r\n            title: \"\",\r\n            lastMessage: \"Let's a chat\",\r\n            members: new OrderedMap(),\r\n            messages: new OrderedMap(),\r\n            isNew: true,\r\n            userId: currentUserId,\r\n            created: new Date(),\r\n            typing: false,\r\n        };\r\n        channel.members = channel.members.set(currentUserId, true);\r\n        store.onCreateNewChannel(channel);\r\n    }\r\n    scrollMessagesToBottom = () => {\r\n        if(this.messagesRef){\r\n            this.messagesRef.scrollTop = this.messagesRef.scrollHeight;\r\n        }\r\n    }\r\n    // renderMessage(message){\r\n    //     const txt = _.get(message, 'body' , '');\r\n    //     const html = _.split(txt, '\\n').map((m, key) => {\r\n    //         return <p key={key} dangerouslySetInnerHTML={{ __html: m }}></p>\r\n    //     })\r\n\r\n    //         message.substring(0, 8) === \"uploads/\" ?\r\n    //             // this will be either video or image \r\n\r\n    //             message.substring(message.length - 3, message.length) === 'mp4' ?\r\n    //                 <video\r\n    //                     style={{ maxWidth: '200px' }}\r\n    //                     src={`http://localhost:3000/${message.body}`} alt=\"video\"\r\n    //                     type=\"video/mp4\" controls\r\n    //                 />\r\n    //                 :\r\n    //                 <img\r\n    //                     style={{ maxWidth: '200px' }}\r\n    //                     src={`http://localhost:5000/${message.body}`}\r\n    //                     alt=\"img\"\r\n    //                 />\r\n    //         :\r\n    //         <p>\r\n    //             {message.body}\r\n    //         </p>\r\n\r\n        \r\n        \r\n    //     return html;\r\n    // }\r\n\r\n    handlePlayMusic = (music) => {\r\n       \r\n        try {\r\n            this.audio.pause();\r\n            this.audio.currentTime = 0;\r\n         \r\n        } catch (e) {\r\n          console.log(e);\r\n        }\r\n       \r\n        this.audio = new Audio(music);\r\n        this.audio.play();\r\n        \r\n      }\r\n      handleStopMusic = (music) => {\r\n        this.audio = new Audio(music);\r\n        this.audio.pause()\r\n      }\r\n    handleSubmit = (e) => {\r\n\r\n        const { newMessage } = this.state;\r\n        const { store } = this.props;\r\n        e.preventDefault();\r\n\r\n        if(_.trim(newMessage).length){\r\n            const messageId = new ObjectID().toString();\r\n            const channel = store.getActiveChannel();\r\n            const channelId = _.get(channel , '_id', null);\r\n            const currentUser = store.getCurrentUser();\r\n            const message = {\r\n                _id: messageId,\r\n                channelId: channelId,\r\n                body : newMessage,\r\n                userId: _.get(currentUser, '_id'),\r\n                type:\"text\",\r\n                me: true,\r\n            };\r\n            \r\n            store.addMessage(messageId, message);\r\n            this.setState({newMessage: \"\"});\r\n        }\r\n        this.setState({\r\n            newMessage: \"\",\r\n            showEmoji: false\r\n        });\r\n\r\n    };\r\n    _onResi = () => {\r\n        this.setState({height: window.innerHeight});\r\n    }\r\n    // addTestMessages = () => {\r\n    //     const {store} = this.props\r\n\r\n      \r\n    //     for(let i = 0; i < 20; i++){\r\n    //         let isMe = false;\r\n    //         if(i % 2 === 0) {\r\n    //             isMe = true;\r\n    //         }\r\n    //         const newMsg = {\r\n    //             _id: `${i}`,\r\n    //             author: `Author: ${i}`,\r\n    //             body: `The body of message ${i}`,\r\n    //             avatar: defaultImg,\r\n    //             me: isMe,\r\n    //             timing: '0:00'\r\n    //         }\r\n    //         store.addMessage(i, newMsg);\r\n\r\n    //     }\r\n\r\n    //     for (let c = 0; c<10; c++){\r\n    //         const newChannel ={\r\n    //             _id: `${c}`,\r\n    //             title: `Channel title ${c}`,\r\n    //             lastMessage: `Hey there is.. ${c}`,\r\n    //             members: new OrderedMap({\r\n    //                 '1': true,\r\n    //                 '2': true,\r\n    //             }),\r\n    //             messages: new OrderedMap(),\r\n    //             created: new Date(),\r\n    //         }\r\n    //         const moreMsgId =`${c + 1}`;\r\n    //         const msgId = `${c}`;\r\n    //         newChannel.messages = newChannel.messages.set(msgId, true);\r\n    //         newChannel.messages = newChannel.messages.set(moreMsgId, true);\r\n    //         store.addChannel(c, newChannel);\r\n    //     }\r\n\r\n    // }\r\n    componentDidUpdate(){\r\n        this.scrollMessagesToBottom();\r\n        // console.log(\"CDidUpdate\");\r\n       \r\n    }\r\n    componentDidMount(){\r\n        window.addEventListener('resize', this._onResi);\r\n        window.addEventListener('mousedown', this.onClickOutSide);\r\n        // this.addTestMessages();\r\n        // console.log(\"CDidMount\");\r\n    }\r\n    componentWillUnmount(){\r\n        this.stopCheckingTyping()\r\n        window.removeEventListener('resize', this._onResi);\r\n        window.removeEventListener('mousedown', this.onClickOutSide);\r\n        // console.log(\"CWillUnMount\");\r\n    }\r\n    \r\n    render() {\r\n\r\n        const { height, newMessage, showEmoji, isShowGetAud, openToolChat, English, iShowConfig, redirect} = this.state;\r\n        const { store } = this.props;\r\n        const isConnected = store.isConnected();\r\n        const activeChannel = store.getActiveChannel();\r\n        const messages = store.getMessagesFromChannel(activeChannel);\r\n        const members = store.getMembersFromChannel(activeChannel);\r\n        const channels = store.getChannels();\r\n        const usersList = store.getSearchUsers();\r\n        const me = store.getCurrentUser();\r\n      \r\n\r\n        const onEmojiClick = (event, emojiObject) => {\r\n            this.setState({newMessage:`${emojiObject.emoji}`});\r\n            console.log(`${emojiObject.emoji}`);\r\n        }\r\n       \r\n\r\n        const style = {\r\n            height: height,\r\n        }\r\n        \r\n        const resultSearch = () => {\r\n\r\n                return (\r\n                    <div className=\"search-user\">\r\n                        <div className=\"user-list\">\r\n                        {usersList.map((user, index) =>{\r\n                            return <div onClick={() => this.handleOnClick(user)} key={index} className=\"user\">\r\n                            <img src={user.avatar} alt={user.name} />\r\n                            <span>{user.name}</span>\r\n                        </div>\r\n                        })\r\n                        } \r\n                        </div>\r\n                    </div>\r\n                )\r\n        }\r\n        if(redirect){\r\n            return <Redirect to={\"/page3/Facemoment/\" \r\n            + this.state.idRoomChat\r\n            + '?' + _.get(me, '_id') + this.getRandomInt(9)\r\n        }/>\r\n        }\r\n\r\n        return (\r\n\r\n            <div style={style} className=\"app3\">\r\n               <div className=\"chat-header\">\r\n                    <div className=\"header-left\">\r\n                        <div className=\"action\">\r\n                            <Link to='' onClick={(e) => this._onCreateChannel(e)} className=\"btn-primary\">AddNew</Link>\r\n                        </div>\r\n                    </div>\r\n                    {_.get(activeChannel, 'isNew') ? <div className=\"toolbar\">\r\n                        <form className=\"tool\">\r\n                            <textarea\r\n                            type=\"text\"\r\n                            value ={ this.state.searchUser }\r\n                            placeholder=\"To UserName/Email\"\r\n                            onChange = {(e) => {\r\n                                const searchTxt = _.get(e, 'target.value');\r\n                                this.setState({\r\n                                    searchUser: searchTxt,\r\n                                }, () => {\r\n                                    store.startSearchUsers(searchTxt);\r\n                                })\r\n                                \r\n                            }}\r\n                            />\r\n                        </form>\r\n                        {resultSearch()}\r\n                        </div> : null }\r\n\r\n                    <div className=\"header-mid\">\r\n                        { this.renderChannelTitle(activeChannel) }\r\n                    </div>\r\n                    <div className=\"header-right\">\r\n                        <UserBar store = { store } />\r\n                        <div className=\"toolsRight-bar\">\r\n                        <IconButton  style={{ color: \"rgba(0, 0, 0, 0.5)\"}}>\r\n                            <MdSettings />\r\n                        </IconButton>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"chat-main\">\r\n                    <div className=\"sidebar-left\">\r\n                        <div className=\"chanels\">\r\n                            {channels.map((channel, index) =>{\r\n                                return (\r\n                                    <div onClick= {(index) => {\r\n                                        store.setActiveChannelId(channel._id);\r\n                                    }} key={channel._id} className={className('chanel', {'active' : _.get(activeChannel, '_id') === _.get(channel, '_id', null)})}>\r\n                                        <div className=\"user-img\">\r\n                                            {this.renderChannelAvatar(channel)}\r\n                                        </div>\r\n                                        <div className={className('chanel-info',{'notify': _.get(channel, 'notify', null)})}>\r\n                                            {this.renderChannelTitle(channel)}\r\n                                            <p>{\r\n                                            (( `${channel.lastMessage}`).substring(0, 7) === 'uploads') ? 'An Attached file'\r\n                                            :\r\n                                            `${channel.lastMessage}`\r\n                                            }</p>\r\n                                        </div>\r\n                                    </div>\r\n                                )\r\n                            })}\r\n                            \r\n                        </div>\r\n                    </div>\r\n                    {\r\n                        iShowConfig ?  <Draggable style={{\r\n                            zIndex: 101,\r\n                            position: 'absolute',\r\n                            right: 0,\r\n                            cursor: 'move',\r\n                            maxHeight: '40rem',\r\n                        }}>\r\n                            <div className=\"conf-video\">\r\n                                 <ul className=\"form-container\">\r\n                                     <h4>\r\n                                        Config Face Moment\r\n                                     </h4>\r\n                                     <form onSubmit={this.handleCreateRoom} >\r\n                                     <li>\r\n                                        <label htmlFor=\"text\">\r\n                                        ID Room\r\n                                        </label>\r\n                                        <input\r\n                                        // onChange={(e) => this.onTxtfieldChange(e) } \r\n                                        placeholder=\"ndsRoom\" \r\n                                        required=\"true\" type=\"text\" name=\"room\"\r\n                                        value ={ this.state.idRoomChat }\r\n                                        onChange = {({target})=>{\r\n                                            this.setState({ idRoomChat: target.value })\r\n                                        }}\r\n                                        id=\"room\" ></input>\r\n                                    </li>\r\n                                    <li>\r\n                                        <div onClick = {this.handleCreateR} className=\"autofill-ID\">CreateRanDom</div>\r\n                                    </li>\r\n                                     </form>\r\n                                    \r\n                                    <div className=\"footer-conf-video\">\r\n                                       \r\n                                        <button type=\"button\"  onClick = { (e) => {this.setState({iShowConfig: false})}} className=\"login-btn\">CANCEL</button>\r\n                                        <button type=\"submit\"  onClick = {this.handleCreateRoom} className=\"login-btn\">CONTINUE</button>\r\n                                         \r\n                                    </div>\r\n\r\n                                    <div>\r\n                                        <h5>Instruction <SiConvertio onClick = {(e) => {this.setState({English: !English})}}/></h5>\r\n\r\n                                        {English ?  <p>\r\n                                            <li>Enter ID for the Face Moment room and choose continue</li>\r\n                                            <li>Continue means you accept access we using your account registered with the system. And all are confidential.</li>\r\n                                            <li>Make sure your friend knows <b>exactly</b> ID of the Face Moment room so they can re-enter and continue with it</li>\r\n                                            <li>After choosing to continue, the browser will open a Face Moment window consisting of people who have joined by the room name Face Moment</li>\r\n                                            <li style={{alignItems:'center'}}>To leave the Face Moment session you select the <CgCloseO /> icon, Face Moment will self-cancel when there is no member.</li>\r\n                                            <li>Shouldn't leaving Face Moment <b>the wrong way</b> to avoid affecting the connection of the other people.</li>\r\n                                            <span>ThankYou so much, according to nDs</span>\r\n                                        </p>\r\n                                        :\r\n                                        <p>\r\n                                            <li>Nhập ID phòng Face Moment và chọn tiếp tục</li>\r\n                                            <li>Tiếp tục đồng nghĩa bạn chấp nhận truy cập dùng tài khoản của bạn đã đăng kí với hệ thống. Và tất cả đều được bảo mật.</li>\r\n                                            <li>Đảm bảo rằng bạn của bạn biết <b>chính xác</b> ID của phòng Face Moment để họ có thể nhập lại và tiếp tục với nó</li>\r\n                                            <li>Sau khi chọn tiếp tục trình duyệt sẽ mở cửa sổ Face Moment gồm những người đã tham gia bằng tên phòng Face Moment</li>\r\n                                            <li style={{alignItems:'center'}}>Để rời khỏi phiên Face Moment bạn chọn vào biểu tượng <CgCloseO />, Face Moment sẽ tự huỷ khi không còn thành viên nào.</li>\r\n                                            <li>Hạn chế rời khỏi Face Moment <b>sai cách</b> để tránh ảnh hưởng đến kết nối của những người còn lại.</li>\r\n                                            <span>Cảm ơn mọi người, theo nDs</span>\r\n                                        </p>\r\n                                        }\r\n                                       \r\n                                        \r\n                                    </div>\r\n                                 </ul>\r\n                            </div>\r\n                        </Draggable>\r\n                        : null\r\n                    }\r\n                   \r\n                    <div className=\"chat-content\">\r\n                        <div className=\"toolChat\">\r\n                            <div>\r\n                                {!openToolChat ?  <IconButton onClick = {(e) => {this.setState({openToolChat: !openToolChat})}}><CgMoreVerticalAlt /></IconButton> : <div className=\"toolChats\">\r\n                                    <IconButton onClick = { (e) => {this.setState({iShowConfig: !iShowConfig})}}>\r\n                                        <MdVideocam />\r\n                                    </IconButton>\r\n                                     <IconButton>\r\n                                    <Dropzone onDrop={this.onDrop}>\r\n                                        {({getRootProps, getInputProps}) => (\r\n                                            <section>\r\n                                            <div {...getRootProps()}>\r\n                                                <input {...getInputProps()} />\r\n                                                    <CgSoftwareUpload />\r\n                                            </div>\r\n                                            </section>\r\n                                        )}\r\n                                    </Dropzone>\r\n                                    </IconButton>\r\n                                    <IconButton onClick = {(e) => {this.setState({openToolChat: !openToolChat})}}>\r\n                                        <MdNavigateNext  />\r\n                                    </IconButton>\r\n                                </div>\r\n                                }\r\n                            </div>\r\n                           \r\n                        </div>\r\n                        <div ref={(ref) => this.messagesRef = ref} className=\"messages\">\r\n                            { \r\n                                messages.map((mess, index) => { \r\n                                    const user = _.get(mess, 'user');\r\n                                    return (\r\n                                    <div key={index} className={`${mess.me ? 'message-me' : 'message'}`}>\r\n\r\n                                    <img src={_.get(user, 'avatar')} alt=\"user-img\" className=\"img-user\"></img>\r\n\r\n                                    <div className=\"message-body\">\r\n\r\n                                        <div className=\"username\">{`${mess.me ? 'You' : _.get(mess, 'user.name')}`} say: </div>\r\n                                        \r\n                                        <p className=\"message-text\">\r\n                                    \r\n                                                { (mess.type === `text`) ? <p>{mess.body}</p>\r\n                                                // this will be either video or image \r\n                                                :\r\n                                                \r\n                                                ((`${mess.body}`).substring((`${mess.body}`).length - 3, (`${mess.body}`).length) === 'mp3' ? \r\n                                        \r\n                                                    <div className=\"audio-message\" > <MdPlayCircleOutline style={{fontSize: '1.5rem', alignItems:'center'}} onClick= {() => this.handlePlayMusic(`http://localhost:8080/${mess.body}`)} /> Click to Play</div>\r\n                                                    :\r\n                                                    ((`${mess.body}`).substring((`${mess.body}`).length - 3, (`${mess.body}`).length) === 'mp4' ?\r\n                                                        <video style={{ maxWidth: '20rem' }} src={`http://localhost:8080/${mess.body}`} alt=\"video\" controls />\r\n                                                        :\r\n                                                        <img style={{ maxWidth: '20rem' }} src={`http://localhost:8080/${mess.body}`} alt=\"img\" />\r\n                                                    )\r\n                                                    )\r\n                                             } \r\n                                            {/* { this.renderMessage(mess) } */}\r\n                                            <p className=\"timing\">{mess.timing}</p>\r\n\r\n                                        </p>\r\n                                    </div>\r\n                                    </div>\r\n                                    );\r\n                                   \r\n                                })\r\n                            }\r\n                                {showEmoji ? <div className=\"emoji\" ref = {(ref) => this.ref = ref}>\r\n                                    <Picker  onEmojiClick={onEmojiClick} skinTone={SKIN_TONE_MEDIUM_DARK}/>\r\n                                </div> : null }\r\n                              \r\n                                 \r\n                        </div>\r\n                        {\r\n                        isShowGetAud ? <div className=\"getAdi\">\r\n                                <div>\r\n                                {this.state.audio ? <AudioAnalyser audio={this.state.audio} /> : null}\r\n                                </div>\r\n                        </div> : null\r\n                        }\r\n                        \r\n                        {_.get(activeChannel, 'typing') && _.get(activeChannel, 'typier') !== _.get(me, '_id') ? <div  disabled = { newMessage.length > 1 } className=\"typing-status\">Is Typing..</div> : null}\r\n                        {   members.size > 0 ? <div className=\"message-input\">\r\n                            <form \r\n                                onSubmit= { this.handleSubmit }\r\n                                disabled = { newMessage.length < 1 }\r\n                                className=\"message-form\">\r\n                                <IconButton onClick = {() => {this.setState({showEmoji: !showEmoji})}}>\r\n                                    <MdInsertEmoticon />\r\n                                </IconButton>\r\n                                <textarea  \r\n                                    id = \"message\"\r\n                                    ref={(input)=> this.input = input}\r\n                                    type = \"text\"\r\n                                    className = \"form-control\"\r\n                                    value = { newMessage }\r\n                                    autoComplete = {'off'}\r\n                                    placeholder = \"Type something interesting\"\r\n                                    onKeyUp = { (e) => { \r\n                                        { if(e.keyCode === 13 && !e.shiftKey) \r\n                                            { this.handleSubmit(e); }}\r\n                                        { if( e.keyCode !== 13 ){ this.sendTyping() }}\r\n                                        }\r\n                                    }\r\n                                    onChange = {\r\n                                    \t({target})=>{\r\n                                    \t\tthis.setState({newMessage:target.value})\r\n                                    \t}\r\n                                    }\r\n                                    />\r\n\r\n                                \r\n                                            {/*onClick = {() => this.toggleMicrophone()} */}\r\n                                        <IconButton  >\r\n                                        <MdMic onMouseDown= {() => {this.startRecording()}} onMouseUp= {() => {this.stopRecording()}} />\r\n                                        </IconButton>\r\n                            \r\n                                <button\r\n                                    disabled = { newMessage.length < 1 }\r\n                                    type = \"submit\"\r\n                                    className = \"send\"\r\n                                    onClick = { this.handleSubmit }\r\n                                > Send </button>\r\n                            </form>\r\n\t\t\t                </div>\r\n                            :\r\n                            null\r\n                        }\r\n                    </div>\r\n                   \r\n                    <div className=\"sidebar-right\">\r\n                        <div className=\"title-right\">Members</div>\r\n                        <div className=\"chanels\">\r\n                            { members.map((member, index) => {\r\n\r\n                                const isOnline = _.get(member, 'online', false);\r\n                                return (\r\n                                    <div key ={ index } className=\"chanel\">\r\n\r\n                                        <div className=\"user-img-channel\">\r\n                                            <img src={_.get(member, 'avatar')} alt=\"user-img\" />\r\n                                            <span className={className('user-status', {'online': isOnline})}></span>\r\n                                        </div>\r\n                                        <div className=\"chanel-info\">\r\n                                            <h4>{ member.name }</h4>\r\n                                            <p><Moment fromNow>2020-10-23T23:28:11.746Z</Moment></p>\r\n                                        </div>\r\n                                        <div onClick = {() => {\r\n                                            store.removeMemberFromChannel(activeChannel, member);\r\n                                        }}\r\n                                         className=\"icon-DelUser\">\r\n                                        <IconButton  style={{ color: \"rgb(200, 68, 20)\", fontSize: \"20\"}}>\r\n                                            <MdDeleteForever />\r\n                                        </IconButton>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                )\r\n                            })}\r\n                            \r\n                        </div>\r\n                        \r\n                    </div>\r\n                    \r\n\r\n                </div>\r\n                \r\n               <div className=\"chat-footer\">\r\n                    <div className=\"footer-left\">\r\n                        <div className=\"action\">\r\n                            {/* <Link to='' onClick={(e) => this._onCreateChannel(e)} className=\"btn-primary\">AddNew</Link> */}\r\n                        </div>\r\n                    </div>\r\n                \r\n                    <div className=\"footer-mid\">\r\n                       <h4>AllRight nDs, 2020</h4>\r\n                    </div>\r\n                    <div className=\"footer-right\">\r\n                    {me && !isConnected ? <div className=\"app-warning-state\">Reconnecting..</div> : <div className=\"app-success-state\">Connected</div>}\r\n                    </div>\r\n                </div>  \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}